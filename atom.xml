<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Platypus Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://platypuspro.github.io/"/>
  <updated>2015-03-11T10:09:02.000Z</updated>
  <id>http://platypuspro.github.io/</id>
  
  <author>
    <name><![CDATA[Platypus]]></name>
    <email><![CDATA[1293705262@qq.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[BZOJ 1070&2879]]></title>
    <link href="http://platypuspro.github.io/2015/03/11/bzoj-1070-2879/"/>
    <id>http://platypuspro.github.io/2015/03/11/bzoj-1070-2879/</id>
    <published>2015-03-11T09:57:40.000Z</published>
    <updated>2015-03-11T10:09:02.000Z</updated>
    <content type="html"><![CDATA[<p><del>more标签前面就不能不放东西吗…</del><br><a id="more"></a></p>
<h2 id="1070"><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1070" target="_blank" rel="external">1070</a></h2><p>题意很简单就不扯了，关键是建图</p>
<p>因为一个人可能要修好几辆车，所以一个点代表一个人的话似乎怎么连都无法满足条件：</p>
<ol>
<li><p>若从源向每个人连一条容量1费用0的边，这个人还怎么修好几辆车…</p>
</li>
<li><p>若从源向每个人连一条容量inf费用0的边，而这个人又向好多车各连了一条容量1费用t[i,j]的边，这样就可能造成这个人同时修了好几辆车…</p>
</li>
</ol>
<p>考虑一下所有的情况，共m个人，每个人最多需要修理n次，其中每次修理需要花费t的时间，对于一个人来说，等这个人第i次修车需要顾客等待t*i的时间</p>
<p>考虑所有情况来建图的话，可以将每个人拆成n个点，第i个点表示这个人第i次修车，这些点全部和每辆车各连一条容量1费用为&lt;修车次数i*每辆车的等待时间t&gt;的边，这样就把每个人、所有车、可能发生的每次修车都考虑到了，共n*m个点，每个点连了n条边</p>
<p>最后从每辆车向汇连一条容量1费用0的边，建图完成</p>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1070;</span><br><span class="line"><span class="keyword">var</span> n,m,ans,i,j,k,tot,ss,tt:longint;</span><br><span class="line">    time:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">60</span>,<span class="number">1</span>..<span class="number">10</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    d,lst,from:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">601</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> <span class="keyword">record</span> st,ed,f,c,pre:longint; <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b,f,c:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].st:=a;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line">  l[tot].f:=f;</span><br><span class="line">  l[tot].c:=c;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(a,b,f,c:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  link(a,b,f,c);</span><br><span class="line">  link(b,a,<span class="number">0</span>,-c);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">spfa</span>:</span>boolean;</span><br><span class="line"><span class="keyword">const</span> qs=<span class="number">100000</span>;</span><br><span class="line"><span class="keyword">var</span> hd,tl,now,t:longint;</span><br><span class="line">    q:<span class="keyword">array</span>[<span class="number">1</span>..qs]<span class="keyword">of</span> longint;</span><br><span class="line">    v:<span class="keyword">array</span>[<span class="number">0</span>..qs]<span class="keyword">of</span> boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(d,sizeof(d),$<span class="number">7</span>f);</span><br><span class="line">  fillchar(v,sizeof(v),false);</span><br><span class="line">  hd:=<span class="number">0</span>;</span><br><span class="line">  tl:=<span class="number">1</span>;</span><br><span class="line">  q[<span class="number">1</span>]:=ss;</span><br><span class="line">  d[ss]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> hd&lt;&gt;tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(hd);</span><br><span class="line">    <span class="keyword">if</span> hd&gt;qs <span class="keyword">then</span> hd:=<span class="number">1</span>;</span><br><span class="line">    now:=q[hd];</span><br><span class="line">    t:=lst[now];</span><br><span class="line">    <span class="keyword">while</span> t&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> (l[t].f&gt;<span class="number">0</span>)<span class="keyword">and</span>(d[l[t].ed]&gt;d[now]+l[t].c) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        d[l[t].ed]:=d[now]+l[t].c;</span><br><span class="line">        from[l[t].ed]:=t;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> v[l[t].ed] <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          v[l[t].ed]:=true;</span><br><span class="line">          inc(tl);</span><br><span class="line">          <span class="keyword">if</span> tl&gt;qs <span class="keyword">then</span> tl:=<span class="number">1</span>;</span><br><span class="line">          q[tl]:=l[t].ed;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      t:=l[t].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    v[now]:=false;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> d[tt]&gt;maxlongint&gt;&gt;<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">exit</span>(false);</span><br><span class="line">  <span class="keyword">exit</span>(true);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">flow</span>;</span></span><br><span class="line"><span class="keyword">var</span> f,x:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  x:=from[tt];</span><br><span class="line">  f:=maxlongint;</span><br><span class="line">  <span class="keyword">while</span> x&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    f:=min(f,l[x].f);</span><br><span class="line">    x:=from[l[x].st];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  x:=from[tt];</span><br><span class="line">  <span class="keyword">while</span> x&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    dec(l[x].f,f);</span><br><span class="line">    inc(l[x xor <span class="number">1</span>].f,f);</span><br><span class="line">    inc(ans,l[x].c*f);</span><br><span class="line">    x:=from[l[x].st];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(m,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(time[i,j]);</span><br><span class="line">  tot:=<span class="number">1</span>;</span><br><span class="line">  ss:=<span class="number">0</span>;</span><br><span class="line">  tt:=n*m+n+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m*n <span class="keyword">do</span> insert(ss,i,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=n*m+<span class="number">1</span> <span class="keyword">to</span> n*m+n <span class="keyword">do</span> insert(i,tt,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  insert((i-<span class="number">1</span>)*n+j,n*m+k,<span class="number">1</span>,time[k,i]*j);</span><br><span class="line">  <span class="keyword">while</span> spfa <span class="keyword">do</span> flow;</span><br><span class="line">  writeln(ans/n:<span class="number">0</span>:<span class="number">2</span>);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>
<h2 id="2879"><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2879" target="_blank" rel="external">2879</a></h2><p>这道题思路与1070基本相同，只是数据略大…按照1070的办法根本存不下，所以我们只添加有用的边，任何时刻使每个厨师的所有点中，只有一个点向菜连着边，就是说只考虑每个厨师的下次做菜，这次做完了再连新的，具体实现就是每次流完之后处理一下</p>
<p>这道题还要注意就是，菜的种数是n，但每种菜可能要做好多份，所以一个厨师做菜的最大次数是所有菜的份数和，还有可以不必每份菜向汇连一条容量1费用0的边，可以直接每种菜向汇连一条容量p[i]费用0的边</p>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2879;</span><br><span class="line"><span class="keyword">var</span> l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">3200000</span>]<span class="keyword">of</span> <span class="keyword">record</span> st,ed,pre,f,c:longint; <span class="keyword">end</span>;</span><br><span class="line">    pp:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">40</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,p,i,j,ans,tot,ss,tt:longint;</span><br><span class="line">    t:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">40</span>,<span class="number">1</span>..<span class="number">100</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    lst,d,from:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">81000</span>]<span class="keyword">of</span> longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b,f,c:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].st:=a;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line">  l[tot].f:=f;</span><br><span class="line">  l[tot].c:=c;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(a,b,f,c:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  link(a,b,f,c);</span><br><span class="line">  link(b,a,<span class="number">0</span>,-c);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">spfa</span>:</span>boolean;</span><br><span class="line"><span class="keyword">const</span> qs=<span class="number">81000</span>;</span><br><span class="line"><span class="keyword">var</span> q:<span class="keyword">array</span>[<span class="number">1</span>..qs]<span class="keyword">of</span> longint;</span><br><span class="line">    v:<span class="keyword">array</span>[<span class="number">0</span>..qs]<span class="keyword">of</span> boolean;</span><br><span class="line">    hd,tl,now,k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  hd:=<span class="number">0</span>;</span><br><span class="line">  tl:=<span class="number">1</span>;</span><br><span class="line">  q[<span class="number">1</span>]:=ss;</span><br><span class="line">  fillchar(v,sizeof(v),false);</span><br><span class="line">  fillchar(d,sizeof(d),$<span class="number">7</span>f);</span><br><span class="line">  v[ss]:=true;</span><br><span class="line">  d[ss]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> hd&lt;&gt;tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(hd);</span><br><span class="line">    <span class="keyword">if</span> hd&gt;qs <span class="keyword">then</span> hd:=<span class="number">1</span>;</span><br><span class="line">    now:=q[hd];</span><br><span class="line">    k:=lst[now];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> (l[k].f&gt;<span class="number">0</span>)<span class="keyword">and</span>(d[now]+l[k].c&lt;d[l[k].ed]) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        d[l[k].ed]:=d[now]+l[k].c;</span><br><span class="line">        from[l[k].ed]:=k;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> v[l[k].ed] <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          v[l[k].ed]:=true;</span><br><span class="line">          inc(tl);</span><br><span class="line">          <span class="keyword">if</span> tl&gt;qs <span class="keyword">then</span> tl:=<span class="number">1</span>;</span><br><span class="line">          q[tl]:=l[k].ed;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    v[now]:=false;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> d[tt]&gt;maxlongint&gt;&gt;<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">exit</span>(false);</span><br><span class="line">  <span class="keyword">exit</span>(true);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">flow</span>;</span></span><br><span class="line"><span class="keyword">var</span> x,f,c,pos,cnt:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  x:=from[tt];</span><br><span class="line">  f:=maxlongint;</span><br><span class="line">  <span class="keyword">while</span> x&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    f:=min(f,l[x].f);</span><br><span class="line">    <span class="keyword">if</span> l[x].st=ss <span class="keyword">then</span> pos:=l[x].ed;</span><br><span class="line">    x:=from[l[x].st];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  x:=from[tt];</span><br><span class="line">  <span class="keyword">while</span> x&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(ans,f*l[x].c);</span><br><span class="line">    dec(l[x].f,f);</span><br><span class="line">    inc(l[x xor <span class="number">1</span>].f,f);</span><br><span class="line">    x:=from[l[x].st];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  c:=(pos-<span class="number">1</span>)<span class="keyword">mod</span> m+<span class="number">1</span>;</span><br><span class="line">  cnt:=(pos-<span class="number">1</span>) <span class="keyword">div</span> m+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> x:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> insert(cnt*m+c,m*p+x,<span class="number">1</span>,t[x,c]*(cnt+<span class="number">1</span>));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  p:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(pp[i]);</span><br><span class="line">    inc(p,pp[i]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(t[i,j]);</span><br><span class="line">  ss:=<span class="number">0</span>;</span><br><span class="line">  tt:=m*p+n+<span class="number">1</span>;</span><br><span class="line">  tot:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> p <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> insert(ss,(i-<span class="number">1</span>)*m+j,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> insert(m*p+i,tt,pp[i],<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> insert(i,m*p+j,<span class="number">1</span>,t[j,i]);</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> spfa <span class="keyword">do</span> flow;</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p><del>more标签前面就不能不放东西吗…</del><br>]]>
    
    </summary>
    
      <category term="Min Cost Flow" scheme="http://platypuspro.github.io/tags/Min-Cost-Flow/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3192]]></title>
    <link href="http://platypuspro.github.io/2015/03/11/bzoj-3192/"/>
    <id>http://platypuspro.github.io/2015/03/11/bzoj-3192/</id>
    <published>2015-03-11T02:35:48.000Z</published>
    <updated>2015-03-11T03:04:03.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3192" title="3192" target="_blank" rel="external">传送门</a><br><a id="more"></a><br><del>尼玛more标签不能放在开头吗</del><br>如果存到两个数组里面移来移去的一定很麻烦，那么就可以想一想能不能存到一起<br>题目上写着说移动方式只能从一个顶端移动到另一个顶端，底端是没法直接移动的<br>那么就可以把两个底端挨在一起存起来（第一摞倒着第二摞正着），对于这个存在一起的数组而言，移动操作就成了将数组循环左移或右移一位<br>然后就可以上树状数组了，统计每个元素左边有几个<br>将权值从大到小排序依次删（别忘了记录每个元素原来的位置）<br>还要记录一下两堆物品的分界点，每次移动后记得更新，还要靠这个更新答案（也就是说这个数组动了几下）初始在两摞中间，所以要多开一个空节点，还不能累计进答案<br>ans记得开long long<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3192;</span><br><span class="line"><span class="keyword">type</span> rec=<span class="keyword">record</span> k,p:longint; <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> b:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    a:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100001</span>]<span class="keyword">of</span> rec;</span><br><span class="line">    n1,n2,n,now,i:longint;</span><br><span class="line">    ans:int64;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">c</span><span class="params">(x:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">exit</span>(x <span class="keyword">and</span> (-x));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">plus</span><span class="params">(p,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">while</span> p&lt;=n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(b[p],d);</span><br><span class="line">    inc(p,c(p));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line">    mid,p:rec;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=a[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> a[i].k&gt;mid.k <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> a[j].k&lt;mid.k <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=a[i];</span><br><span class="line">      a[i]:=a[j];</span><br><span class="line">      a[j]:=p;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(p:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  query:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> p&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(query,b[p]);</span><br><span class="line">    dec(p,c(p));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span><span class="params">(l,r:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> l&gt;r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    p:=l;</span><br><span class="line">    l:=r;</span><br><span class="line">    r:=p;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(query(r)-query(l-<span class="number">1</span>)-<span class="number">1</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(b,sizeof(b),<span class="number">0</span>);</span><br><span class="line">  readln(n1,n2);</span><br><span class="line">  n:=n1+n2+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=n1 <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span> readln(a[i].k);</span><br><span class="line">  <span class="keyword">for</span> i:=n1+<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span> readln(a[i].k);</span><br><span class="line">  now:=n1+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> i&lt;&gt;now <span class="keyword">then</span> plus(i,<span class="number">1</span>);</span><br><span class="line">    a[i].p:=i;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  qsort(<span class="number">1</span>,n);</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(ans,ask(a[i].p,now));</span><br><span class="line">    plus(a[i].p,-<span class="number">1</span>);</span><br><span class="line">    now:=a[i].p;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<p><del>标签云是shenmegui?</del></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3192" title="3192">传送门</a><br>]]>
    
    </summary>
    
      <category term="Binary Indexed Tree" scheme="http://platypuspro.github.io/tags/Binary-Indexed-Tree/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hello world]]></title>
    <link href="http://platypuspro.github.io/2015/03/04/hello-world/"/>
    <id>http://platypuspro.github.io/2015/03/04/hello-world/</id>
    <published>2015-03-04T06:12:00.000Z</published>
    <updated>2015-03-11T02:59:12.000Z</updated>
    <content type="html"><![CDATA[<p>~!@#$%^&amp;*()_+<br><a id="more"></a></p>
<p>尼玛标题不能用大写…好坑啊…</p>
<h1 id="Hello_World">Hello World</h1><h2 id="Hello_World-1">Hello World</h2><h3 id="Hello_World-2">Hello World</h3><h4 id="Hello_World-3">Hello World</h4><h5 id="Hello_World-4">Hello World</h5><h6 id="Hello_World-5">Hello World</h6><p>咦Markdown怪好玩的</p>
<ul>
<li>One</li>
<li>Two</li>
<li>Three</li>
</ul>
<hr>
<hr>
<hr>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> ab;</span><br><span class="line"><span class="keyword">var</span> a,b:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(a,b);</span><br><span class="line">  writeln(a+b);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Too young too simple,somtimes naive</p>
</blockquote>
<p><img src="https://github.com/identicons/platypus.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>~!@#$%^&amp;*()_+<br>]]>
    
    </summary>
    
  </entry>
  
</feed>