<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Platypus's Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://platypuspro.github.io/"/>
  <updated>2015-05-15T10:57:12.000Z</updated>
  <id>http://platypuspro.github.io/</id>
  
  <author>
    <name><![CDATA[Platypus]]></name>
    <email><![CDATA[1293705262@qq.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[BZOJ 2286]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-2286/"/>
    <id>http://platypuspro.github.io/posts/bzoj-2286/</id>
    <published>2015-05-14T12:37:38.000Z</published>
    <updated>2015-05-15T10:57:12.000Z</updated>
    <content type="html"><![CDATA[<p>我说这傻逼题我™改了一整天你信么…<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2286" target="_blank" rel="external">传送门</a></p>
<p>一大早回忆了一下老早之前看过的虚树写法…到了机房开始敲</p>
<p>敲了一个小时发现过不了样例于是找了个BUG，改了一会过了样例和对拍</p>
<p>发现稍微大一点的数据跑起来就像吃了*一样 <del>咦为什么还没有暴力快</del>，然后回头瞅了瞅代码</p>
<p>发现我这个傻逼干了这些事情：</p>
<ul>
<li>每次建虚树的函数中开了个250000大小的数组（此函数最多会调用250000次）</li>
<li>每次把好几个250000大小的数组fillchar</li>
</ul>
<p>改对了以后马上交了一发TLE = =</p>
<p>要来数据开始测 <del>卧槽本地21S+</del></p>
<p>卡了半天常…还写了我人生中第一发RMQ求LCA <del>按理说比倍增快不了多少啊</del></p>
<p>还尼玛TLE</p>
<p>去膜hzwer的代码，发现一个貌似能优化的东东，加上去之后继续T…（此时已到午饭点）</p>
<p>下午又卡了半天常无果，求助身边神犇被D一脸是自己写法有问题TAT</p>
<p>不管怎么改依旧本地压线过交上去毫无疑问TLE</p>
<p>无奈又各种膜代码，发现PoPoQQQ的建虚树过程和DP放在一起搞…好神奇的样子</p>
<p>然后改呀改呀最终本地4S+ BZOJ 12S+</p>
<p>UPD: 发现了罪魁祸首，在建虚树过程中我傻逼地写了个$O(n)$级别的循环来赋初始值 = = 改完以后BZOJ 10S+…</p>
<p><del>咦好像扯远了我还没讲题呢…</del></p>
<p>首先把要建到虚树中的点按照DFS序排序</p>
<p>然后维护一个栈，从栈顶到栈底深度递减（栈底是根），保证从栈顶到栈底是一条需要建进虚树的路径，路径中只保留必要的点（询问的点与询问的点的LCA），这些点间的其他边和点都缩到一条边里</p>
<p>每次加一个点时把不在新加点到根的路径中的点依次弹出去，然后再把在路径中的点扔进来</p>
<p>每次弹栈的时候连边（其实如果把DP和建树放在一起的话就不用连边了）</p>
<p>比如说对于样例的10和6，步骤如下</p>
<ul>
<li>初始化 栈中有{1}</li>
<li>将10加入栈中 栈中有{1,10}</li>
<li>找到新加点6与栈顶10的LCA 5 发现深度小于栈顶 连边(1,10)并弹掉10 栈中有{1}</li>
<li>将5加入栈中 栈中有{1,5}</li>
<li>将6加入栈中 栈中有{1,5,6}</li>
<li>依次连边(5,6),(1,5) 并依次弹 6,5,1</li>
</ul>
<p>关于树形DP就不用提了吧…自己YY就好了</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2286;</span><br><span class="line"><span class="keyword">var</span> dep,seq,lst,pos,s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">250000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">250000</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    fa,mn:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">500000</span>,<span class="number">0</span>..<span class="number">18</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">500000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,w,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,q,tot,a,b,c,len,logn:longint;</span><br><span class="line">    energy:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">250000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=a;</span><br><span class="line">  a:=b;</span><br><span class="line">  b:=p;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b,w:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line">  l[tot].w:=w;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(len);</span><br><span class="line">  pos[t]:=len;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;fa[t,<span class="number">0</span>] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      fa[l[k].ed,<span class="number">0</span>]:=t;</span><br><span class="line">      dep[l[k].ed]:=dep[t]+<span class="number">1</span>;</span><br><span class="line">      mn[l[k].ed,<span class="number">0</span>]:=l[k].w;</span><br><span class="line">      dfs(l[k].ed);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j,mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=pos[seq[(l+r)&gt;&gt;<span class="number">1</span>]];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> pos[seq[i]]&lt;mid <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> pos[seq[j]]&gt;mid <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      swap(seq[i],seq[j]);</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lca</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> l:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> dep[a]&lt;dep[b] <span class="keyword">then</span> swap(a,b);</span><br><span class="line">  <span class="keyword">for</span> l:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> dep[fa[a,l]]&gt;=dep[b] <span class="keyword">then</span> a:=fa[a,l];</span><br><span class="line">  <span class="keyword">if</span> a=b <span class="keyword">then</span> <span class="keyword">exit</span>(a);</span><br><span class="line">  <span class="keyword">for</span> l:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> <span class="keyword">if</span> fa[a,l]&lt;&gt;fa[b,l] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    a:=fa[a,l];</span><br><span class="line">    b:=fa[b,l];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(fa[a,<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getmin</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> l,ans:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ans:=maxlongint;</span><br><span class="line">  <span class="keyword">for</span> l:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> dep[fa[a,l]]&gt;=dep[b] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> mn[a,l]&lt;ans <span class="keyword">then</span> ans:=mn[a,l];</span><br><span class="line">    a:=fa[a,l];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span>;</span></span><br><span class="line"><span class="keyword">var</span> top,i,l,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  qsort(<span class="number">1</span>,len);</span><br><span class="line">  top:=<span class="number">1</span>;</span><br><span class="line">  s[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  f[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">  energy[<span class="number">1</span>]:=false;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    l:=lca(seq[i],s[top]);</span><br><span class="line">    <span class="keyword">while</span> (top&gt;<span class="number">1</span>)<span class="keyword">and</span>(dep[s[top-<span class="number">1</span>]]&gt;=dep[l]) <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      t:=getmin(s[top],s[top-<span class="number">1</span>]);</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">not</span> energy[top])<span class="keyword">and</span>(f[top]&lt;t) <span class="keyword">then</span> t:=f[top];</span><br><span class="line">      inc(f[top-<span class="number">1</span>],t);</span><br><span class="line">      dec(top);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> l&lt;&gt;s[top] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      t:=getmin(s[top],l);</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">not</span> energy[top])<span class="keyword">and</span>(f[top]&lt;t) <span class="keyword">then</span> t:=f[top];</span><br><span class="line">      f[top]:=t;</span><br><span class="line">      s[top]:=l;</span><br><span class="line">      energy[top]:=false;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    inc(top);</span><br><span class="line">    s[top]:=seq[i];</span><br><span class="line">    energy[top]:=true;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">while</span> top&gt;<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    t:=getmin(s[top],s[top-<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">not</span> energy[top])<span class="keyword">and</span>(f[top]&lt;t) <span class="keyword">then</span> t:=f[top];</span><br><span class="line">    inc(f[top-<span class="number">1</span>],t);</span><br><span class="line">    dec(top);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n);</span><br><span class="line">  logn:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> <span class="number">1</span>&lt;&lt;logn&lt;=n <span class="keyword">do</span> inc(logn);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b,c);</span><br><span class="line">    link(a,b,c);</span><br><span class="line">    link(b,a,c);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  dep[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  fa[<span class="number">1</span>,<span class="number">0</span>]:=<span class="number">0</span>;</span><br><span class="line">  len:=<span class="number">0</span>;</span><br><span class="line">  dfs(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> logn:=<span class="number">1</span> <span class="keyword">to</span> logn <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    fa[i,logn]:=fa[fa[i,logn-<span class="number">1</span>],logn-<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> mn[i,logn-<span class="number">1</span>]&lt;mn[fa[i,logn-<span class="number">1</span>],logn-<span class="number">1</span>] <span class="keyword">then</span> mn[i,logn]:=mn[i,logn-<span class="number">1</span>] <span class="keyword">else</span> mn[i,logn]:=mn[fa[i,logn-<span class="number">1</span>],logn-<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  readln(m);</span><br><span class="line">  <span class="keyword">for</span> q:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(len);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> <span class="keyword">read</span>(seq[i]);</span><br><span class="line">    build;</span><br><span class="line">    writeln(f[<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>我说这傻逼题我™改了一整天你信么…<br>]]>
    
    </summary>
    
      <category term="Virtual Tree" scheme="http://platypuspro.github.io/tags/Virtual-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3295]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3295/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3295/</id>
    <published>2015-05-14T12:37:26.000Z</published>
    <updated>2015-05-14T13:44:02.000Z</updated>
    <content type="html"><![CDATA[<p>论主席树の日常MLE…<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3295" target="_blank" rel="external">传送门</a></p>
<p>一个数的逆序对数=前面比它大的+后面比它小的</p>
<p>设这个数$k$是第$i$个，那么它的逆序对数就是$root[1]-root[i-1]$中范围在$[k+1,n]$里的数的个数+$root[i+1]-root[n]$中范围在$[1,k-1]$里的数的个数</p>
<p>每次删除时从答案中减去它的影响，并修改一下主席树就可以了</p>
<p>开始呢…我逗比地在每次修改时又完全新建了一条$\log n$长度的链…空间复杂度$(n+m)(\log n)^2$…</p>
<p>卡了半天内存发现完全可以利用老版本节点…QAQ</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3295;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10000000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,size:longint; <span class="keyword">end</span>;</span><br><span class="line">    root,pos,seq:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,i,tot,p,len,x:longint;</span><br><span class="line">    b:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">17</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    ans:int64;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lowbit</span><span class="params">(x:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">exit</span>(x <span class="keyword">and</span> -x);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">init</span><span class="params">(x:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  len:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> x&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(len);</span><br><span class="line">    b[len]:=root[x];</span><br><span class="line">    dec(x,lowbit(x));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(<span class="keyword">var</span> t:longint;l,r,p,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> t=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(tot);</span><br><span class="line">    t:=tot;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  inc(s[t].size,d);</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> p&lt;=mid <span class="keyword">then</span> modify(s[t].lc,l,mid,p,d) <span class="keyword">else</span> modify(s[t].rc,mid+<span class="number">1</span>,r,p,d);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(l,r,ll,rr:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> i,t,mid:longint;</span><br><span class="line">    p:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">17</span>]<span class="keyword">of</span> longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  t:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (ll&lt;=l)<span class="keyword">and</span>(rr&gt;=r) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> inc(t,s[b[i]].size);</span><br><span class="line">    <span class="keyword">exit</span>(t);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> p[i]:=b[i];</span><br><span class="line">  <span class="keyword">if</span> ll&lt;=mid <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> b[i]:=s[p[i]].lc;</span><br><span class="line">    inc(t,query(l,mid,ll,rr));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> rr&gt;mid <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> b[i]:=s[p[i]].rc;</span><br><span class="line">    inc(t,query(mid+<span class="number">1</span>,r,ll,rr));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> b[i]:=p[i];</span><br><span class="line">  <span class="keyword">exit</span>(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">count</span><span class="params">(l,r,ll,rr:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> l&gt;r <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">  init(r);</span><br><span class="line">  count:=query(<span class="number">1</span>,n,ll,rr);</span><br><span class="line">  init(l-<span class="number">1</span>);</span><br><span class="line">  dec(count,query(<span class="number">1</span>,n,ll,rr));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  fillchar(root,sizeof(root),<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(seq[i]);</span><br><span class="line">    pos[seq[i]]:=i;</span><br><span class="line">    p:=i;</span><br><span class="line">    <span class="keyword">while</span> p&lt;=n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      modify(root[p],<span class="number">1</span>,n,seq[i],<span class="number">1</span>);</span><br><span class="line">      inc(p,lowbit(p));</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(ans,count(i+<span class="number">1</span>,n,<span class="number">1</span>,seq[i]));</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    writeln(ans);</span><br><span class="line">    readln(x);</span><br><span class="line">    dec(ans,count(<span class="number">1</span>,pos[x]-<span class="number">1</span>,x,n)+count(pos[x]+<span class="number">1</span>,n,<span class="number">1</span>,x));</span><br><span class="line">    p:=pos[x];</span><br><span class="line">    <span class="keyword">while</span> p&lt;=n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      modify(root[p],<span class="number">1</span>,n,x,-<span class="number">1</span>);</span><br><span class="line">      inc(p,lowbit(p));</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>论主席树の日常MLE…<br>]]>
    
    </summary>
    
      <category term="Fotile Tree" scheme="http://platypuspro.github.io/tags/Fotile-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3675]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3675/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3675/</id>
    <published>2015-05-02T11:00:26.000Z</published>
    <updated>2015-05-02T12:34:15.000Z</updated>
    <content type="html"><![CDATA[<p>PASCAL的常数啊QAQ<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3675" target="_blank" rel="external">传送门</a></p>
<p>设最后分成的各个子序列的和分别为$S_1,S_2,\cdots,S_{k+1}$，那么答案就是<br>$$\sum_{i=1}^kS_i\sum_{j=i+1}^{k+1}S_j$$</p>
<p>与分割的顺序无关，然后可以搞出DP方程<br>$$F_{i,k}=max\lbrace F_{j,k-1},j\in[1,i)\rbrace+sum_j\times(sum_i-sum_j)$$</p>
<p>取$0&lt;a,b&lt;i$，决策$a$优于决策$b$当且仅当</p>
<p>$$F_{a,k}+sum_a\cdot sum_i-{sum_a}^2&gt;F_{b,k}+sum_b\cdot sum_i-{sum_b}^2$$</p>
<p>$$\frac{(F_{a,k}-{sum_a}^2)-(F_{b,k}-{sum_b}^2)}{sum_a-sum_b}&gt;-sum_i$$</p>
<p>然后就是斜率优化的事了…（只用滚动数组就够了）</p>
<p><del>C++平均10s PASCAL最快25s（我30s）是要闹哪样</del></p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3675;</span><br><span class="line"><span class="keyword">const</span> eps=<span class="number">1</span>e-<span class="number">6</span>;</span><br><span class="line"><span class="keyword">var</span> f,g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>,<span class="number">0</span>..<span class="number">1</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    sum,q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,hd,tl,i,j,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  sum[<span class="number">0</span>]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(t);</span><br><span class="line">    sum[i]:=sum[i-<span class="number">1</span>]+t;</span><br><span class="line">    g[i,<span class="number">0</span>]:=-int64(sum[i])*int64(sum[i]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  t:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    hd:=<span class="number">1</span>;</span><br><span class="line">    tl:=<span class="number">1</span>;</span><br><span class="line">    q[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">    t:=t xor <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">while</span> (hd&lt;tl)<span class="keyword">and</span>(g[q[hd],t xor <span class="number">1</span>]-g[q[hd+<span class="number">1</span>],t xor <span class="number">1</span>]&lt;-int64(sum[i])*int64(sum[q[hd]]-sum[q[hd+<span class="number">1</span>]])+eps) <span class="keyword">do</span> inc(hd);</span><br><span class="line">      f[i,t]:=f[q[hd],t xor <span class="number">1</span>]+int64(sum[q[hd]])*int64(sum[i]-sum[q[hd]]);</span><br><span class="line">      g[i,t]:=f[i,t]-int64(sum[i])*int64(sum[i]);</span><br><span class="line">      <span class="keyword">while</span> (hd&lt;tl)<span class="keyword">and</span>((g[q[tl-<span class="number">1</span>],t xor <span class="number">1</span>]-g[q[tl],t xor <span class="number">1</span>])*int64(sum[i]-sum[q[tl]])+eps&gt;(g[q[tl],t xor <span class="number">1</span>]-g[i,t xor <span class="number">1</span>])*int64(sum[q[tl]]-sum[q[tl-<span class="number">1</span>]])) <span class="keyword">do</span> dec(tl);</span><br><span class="line">      inc(tl);</span><br><span class="line">      q[tl]:=i;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(f[n,t]);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>PASCAL的常数啊QAQ<br>]]>
    
    </summary>
    
      <category term="Dynamic Programming" scheme="http://platypuspro.github.io/tags/Dynamic-Programming/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4034]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-4034/"/>
    <id>http://platypuspro.github.io/posts/bzoj-4034/</id>
    <published>2015-05-02T11:00:19.000Z</published>
    <updated>2015-05-02T12:41:46.000Z</updated>
    <content type="html"><![CDATA[<p>考场上直接A掉了~啦啦啦~<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4034" target="_blank" rel="external">传送门</a></p>
<p>正解是俩树状数组…但是太弱了不会啊…于是只能拿树链剖分搞了…</p>
<p>考场上敲了40min+ 各种数据拍+调了一个小时找了仨错出来最后顺利AC啦啦啦</p>
<p>HA考场上好像没几个人A…但是挂到BZOJ上以后就被各种艹翻…QAQ</p>
<p>考场上敲的代码↓ OwO<br><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4034;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> <span class="keyword">record</span> fa,size,hev,l,r,w,bl,rk:longint; <span class="keyword">end</span>;</span><br><span class="line">    seq,lst,top:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">200000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    seg:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">200000</span>]<span class="keyword">of</span> <span class="keyword">record</span> l,r,lc,rc:longint; plus,sum:int64; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,a,b,tot,len,pcnt,cas:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs1</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k,max,p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  s[t].size:=<span class="number">1</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  s[t].hev:=<span class="number">0</span>;</span><br><span class="line">  max:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;s[t].fa <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      s[l[k].ed].fa:=t;</span><br><span class="line">      dfs1(l[k].ed);</span><br><span class="line">      inc(s[t].size,s[l[k].ed].size);</span><br><span class="line">      <span class="keyword">if</span> s[l[k].ed].size&gt;max <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        max:=s[l[k].ed].size;</span><br><span class="line">        s[t].hev:=l[k].ed;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;s[t].fa <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> l[k].ed=s[t].hev <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        s[t].bl:=s[l[k].ed].bl;</span><br><span class="line">        s[t].rk:=s[l[k].ed].rk+<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        p:=s[l[k].ed].bl;</span><br><span class="line">        top[p]:=l[k].ed;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> s[t].hev=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(pcnt);</span><br><span class="line">    s[t].bl:=pcnt;</span><br><span class="line">    s[t].rk:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs2</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(len);</span><br><span class="line">  s[t].l:=len;</span><br><span class="line">  seq[len]:=s[t].w;</span><br><span class="line">  <span class="keyword">if</span> s[t].hev&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    k:=lst[t];</span><br><span class="line">    <span class="keyword">while</span> (k&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(l[k].ed&lt;&gt;s[t].hev) <span class="keyword">do</span> k:=l[k].pre;</span><br><span class="line">    dfs2(l[k].ed);</span><br><span class="line">    k:=lst[t];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> (l[k].ed&lt;&gt;s[t].fa)<span class="keyword">and</span>(l[k].ed&lt;&gt;s[t].hev) <span class="keyword">then</span> dfs2(l[k].ed);</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  s[t].r:=len;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> l,r:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> seg[t].plus=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> seg[t].l=seg[t].r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    seg[t].plus:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  l:=seg[t].lc;</span><br><span class="line">  r:=seg[t].rc;</span><br><span class="line">  inc(seg[l].plus,seg[t].plus);</span><br><span class="line">  inc(seg[r].plus,seg[t].plus);</span><br><span class="line">  inc(seg[l].sum,seg[t].plus*int64(seg[l].r-seg[l].l+<span class="number">1</span>));</span><br><span class="line">  inc(seg[r].sum,seg[t].plus*int64(seg[r].r-seg[r].l+<span class="number">1</span>));</span><br><span class="line">  seg[t].plus:=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span><span class="params">(<span class="keyword">var</span> t:longint;l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  seg[t].l:=l;</span><br><span class="line">  seg[t].r:=r;</span><br><span class="line">  seg[t].plus:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    seg[t].sum:=seq[l];</span><br><span class="line">    seg[t].lc:=<span class="number">0</span>;</span><br><span class="line">    seg[t].rc:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  build(seg[t].lc,l,mid);</span><br><span class="line">  build(seg[t].rc,mid+<span class="number">1</span>,r);</span><br><span class="line">  seg[t].sum:=seg[seg[t].lc].sum+seg[seg[t].rc].sum;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">plus</span><span class="params">(t,l,r,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> seg[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;=seg[t].l)<span class="keyword">and</span>(r&gt;=seg[t].r) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(seg[t].plus,d);</span><br><span class="line">    inc(seg[t].sum,seg[t].plus*int64(seg[t].r-seg[t].l+<span class="number">1</span>));</span><br><span class="line">    pushdown(t);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> seg[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  mid:=(seg[t].l+seg[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> plus(seg[t].lc,l,r,d);</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> plus(seg[t].rc,l,r,d);</span><br><span class="line">  seg[t].sum:=seg[seg[t].lc].sum+seg[seg[t].rc].sum;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(t,l,r:longint)</span>:</span>int64;</span><br><span class="line"><span class="keyword">var</span> ans:int64;</span><br><span class="line">    mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> seg[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;=seg[t].l)<span class="keyword">and</span>(r&gt;=seg[t].r) <span class="keyword">then</span> <span class="keyword">exit</span>(seg[t].sum);</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  mid:=(seg[t].l+seg[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> inc(ans,query(seg[t].lc,l,r));</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> inc(ans,query(seg[t].rc,l,r));</span><br><span class="line">  <span class="keyword">exit</span>(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">ask</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> ans:int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> top[s[t].bl]&lt;&gt;<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(ans,query(<span class="number">1</span>,s[top[s[t].bl]].l,s[t].l));</span><br><span class="line">    t:=s[top[s[t].bl]].fa;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  inc(ans,query(<span class="number">1</span>,s[<span class="number">1</span>].l,s[t].l));</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(s[i].w);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b);</span><br><span class="line">    link(a,b);</span><br><span class="line">    link(b,a);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  len:=<span class="number">0</span>;</span><br><span class="line">  s[<span class="number">1</span>].fa:=<span class="number">0</span>;</span><br><span class="line">  pcnt:=<span class="number">0</span>;</span><br><span class="line">  dfs1(<span class="number">1</span>);</span><br><span class="line">  i:=s[<span class="number">1</span>].bl;</span><br><span class="line">  top[i]:=<span class="number">1</span>;</span><br><span class="line">  dfs2(<span class="number">1</span>);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  build(i,<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(cas);</span><br><span class="line">    <span class="keyword">case</span> cas <span class="keyword">of</span></span><br><span class="line">      <span class="number">1</span>:<span class="keyword">begin</span></span><br><span class="line">        readln(a,b);</span><br><span class="line">        plus(<span class="number">1</span>,s[a].l,s[a].l,b);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      <span class="number">2</span>:<span class="keyword">begin</span></span><br><span class="line">        readln(a,b);</span><br><span class="line">        plus(<span class="number">1</span>,s[a].l,s[a].r,b);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      <span class="number">3</span>:<span class="keyword">begin</span></span><br><span class="line">        readln(a);</span><br><span class="line">        ask(a);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>考场上直接A掉了~啦啦啦~<br>]]>
    
    </summary>
    
      <category term="Tree Chain Split" scheme="http://platypuspro.github.io/tags/Tree-Chain-Split/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4033]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-4033/"/>
    <id>http://platypuspro.github.io/posts/bzoj-4033/</id>
    <published>2015-05-02T11:00:11.000Z</published>
    <updated>2015-05-02T12:48:49.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-globe"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4033" target="_blank" rel="external">传送门</a></p>
<p>考场上交的30分暴力QAQ…Orz cstdio</p>
<p><a href="http://ydc.blog.uoj.ac/blog/336" target="_blank" rel="external">Orz ydc</a></p>
<p>$F_{i,k}$表示以$i$为根的子树中选$k$个黑点的收益</p>
<p>然后在$dfs$过程中直接拿每个节点的子树来更新答案就行了</p>
<p><del>还是太弱啊QAQ</del></p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4033;</span><br><span class="line"><span class="keyword">var</span> f,g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2000</span>,<span class="number">0</span>..<span class="number">2000</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">4000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre,w:longint; <span class="keyword">end</span>;</span><br><span class="line">    lst,size:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">2000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,kk,i,tot,a,b,c:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">max</span><span class="params">(<span class="keyword">var</span> a:int64;b:int64)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> b&gt;a <span class="keyword">then</span> a:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b,c:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line">  l[tot].w:=c;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t,fa,w:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k,i,j:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  size[t]:=<span class="number">1</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;fa <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      dfs(l[k].ed,t,l[k].w);</span><br><span class="line">      <span class="keyword">for</span> i:=min(size[t],kk) <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">for</span> j:=min(size[l[k].ed],kk-i) <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> max(g[t,i+j],g[t,i]+f[l[k].ed,j]);</span><br><span class="line">      inc(size[t],size[l[k].ed]);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> size[t] <span class="keyword">do</span> f[t,i]:=g[t,i]+int64(w)*(int64(i)*int64(kk-i)+int64(size[t]-i)*int64(n-kk-size[t]+i));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,kk);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b,c);</span><br><span class="line">    link(a,b,c);</span><br><span class="line">    link(b,a,c);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  dfs(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">  writeln(f[<span class="number">1</span>,kk]);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-globe"></i><br>]]>
    
    </summary>
    
      <category term="Dynamic Programming" scheme="http://platypuspro.github.io/tags/Dynamic-Programming/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3111]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3111/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3111/</id>
    <published>2015-05-02T11:00:05.000Z</published>
    <updated>2015-05-02T12:02:27.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-bug"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3111" target="_blank" rel="external">传送门</a></p>
<h3 id="问题描述">问题描述</h3><p>在一个$n\times m$的棋盘上，每个格子有一个权值，初始时，在某个格子的顶点处一只面朝北的蚂蚁，我们只知道它的行走路线是如何转弯，却不知道每次转弯前走了多长。蚂蚁转弯是有一定特点的，即它的转弯序列一定是如下的形式：<br>右转，右转，左转，左转，右转，右转$cdots$左转，左转，右转，右转，右转。<br>即两次右转和两次左转交替出现的形式，最后两次右转（最后两次一定是右转）后再多加一次右转。我们还知道，蚂蚁不会在同一个位置连续旋转两次，并且蚂蚁行走的路径除了起点以外，不会到达同一个点多次，它最后一定是回到起点然后结束自己的行程，而且蚂蚁只会在棋盘格子的顶点处转弯。<br>设$k$为蚂蚁左转的次数除以$2$，当$k=0$时，蚂蚁可能行走的路径如下图<br><img src="http://i2.tietuku.com/5ce3cd961fd8a2b3.png" alt=""><br>转弯序列为：右转，右转，右转。<br>当$k=1$时，蚂蚁可能行走的路径如下图<br><img src="http://i2.tietuku.com/6c191d6d0855d2fc.png" alt=""><br>转弯序列为：右转，右转，左转，左转，右转，右转，右转。<br>现在已知棋盘大小、每个格子的权值以及左转次数$/2$的值，问蚂蚁走出的路径围出的封闭图形，权值之和最大可能是多少。</p>
<h3 id="输入格式">输入格式</h3><p>在输入文件$ant.in$中，第一行三个数$n,m,k$。意义如题目描述。<br>接下来一个$n$行$m$列的整数矩阵，表示棋盘。</p>
<h3 id="输出格式">输出格式</h3><p>在输入文件$ant.out$中，一个数，表示蚂蚁所走路径围出的图形可能的最大权值和。</p>
<h3 id="样例输入">样例输入</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2 5 2</span><br><span class="line">-1 -1 -1 -1 -1</span><br><span class="line">-1 -1 -1 -1 -1</span><br></pre></td></tr></table></figure>
<h3 id="样例输出">样例输出</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-8</span><br></pre></td></tr></table></figure>
<h3 id="样例说明">样例说明</h3><p>除了第一行的第二个和第一行的第四个都要围起来才至少合法。</p>
<h3 id="数据规模与约定">数据规模与约定</h3><p>$10\%$的数据所有格子中权值均非负<br>另$20\%$的数据$n=2$<br>另$30\%$的数据$k=0$<br>$100\%$的数据$1\leq n\leq 100,1\leq m\leq 100,0\leq k\leq 10 $保证存在合法路径，数据有梯度，格子中每个元素的值绝对值不超过$10000$</p>
<p>把路径自己画一画就可以得出蚂蚁包围的图形其实就是底边在一条线上的一高一低$2\times k+1$个矩形，且第奇数个比两边高，第偶数个比两边低</p>
<p>先说明一下…以下的方程是按照矩形左下角为原点推的，但是因为代码里把矩形左上角存成原点比较方便…所以这些方程意会就好…</p>
<p>设$F_{i,j,k,l}$为当前是第$k$个矩形，矩形<strong>右下角</strong>为$(i,j)$，<strong>右上角</strong>为$(l,j)$时的最大权值和（之前的图形也要算进来），$sum[i,j]$为第$j$列中$1$到$i$的权值和</p>
<p>那么每次转移有两种情况，接着上一个矩形走或者新开一个矩形，所以</p>
<p>$$F_{i,j,k,l}=max(F_{i,j-1,k,l},F_{i,j-1,k-1,h})+sum[i,j]-sum[l-1,j](若k为奇数h\in[i,l),若k为偶数h\in(l,n])$$</p>
<p>后边那坨可以预处理出来</p>
<p>$$F1_{i,j,k,l}=max\lbrace F_{i,j,k,h},h\in[1,l)\rbrace$$<br>$$F2_{i,j,k,l}=max\lbrace F_{i,j,k,h},h\in(l,n]\rbrace$$</p>
<p>然后呢…$i$其实可以不用存在数组里，只用存后边3维就行了</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3111;</span><br><span class="line"><span class="keyword">const</span> inf=maxlongint&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> f,f1,f2:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100</span>,<span class="number">0</span>..<span class="number">21</span>,<span class="number">1</span>..<span class="number">100</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    sum:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100</span>,<span class="number">1</span>..<span class="number">100</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,c,i,j,k,l,ans:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&gt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m,c);</span><br><span class="line">  c:=c&lt;&lt;<span class="number">1</span>+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> sum[<span class="number">0</span>,i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(k);</span><br><span class="line">    sum[i,j]:=sum[i-<span class="number">1</span>,j]+k;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> c <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    f[<span class="number">0</span>,k,j]:=-inf;</span><br><span class="line">    f1[<span class="number">0</span>,k,j]:=-inf;</span><br><span class="line">    f2[<span class="number">0</span>,k,j]:=-inf;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  ans:=-inf;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> c <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">for</span> l:=i <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">if</span> k <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> f[j,k,l]:=max(f[j-<span class="number">1</span>,k,l],f1[j-<span class="number">1</span>,k-<span class="number">1</span>,l])+sum[i,j]-sum[l-<span class="number">1</span>,j]</span><br><span class="line">      <span class="keyword">else</span> f[j,k,l]:=max(f[j-<span class="number">1</span>,k,l],f2[j-<span class="number">1</span>,k-<span class="number">1</span>,l])+sum[i,j]-sum[l-<span class="number">1</span>,j];</span><br><span class="line">      f2[j,k,<span class="number">1</span>]:=-inf;</span><br><span class="line">      <span class="keyword">for</span> l:=<span class="number">2</span> <span class="keyword">to</span> i <span class="keyword">do</span> f2[j,k,l]:=max(f2[j,k,l-<span class="number">1</span>],f[j,k,l-<span class="number">1</span>]);</span><br><span class="line">      f1[j,k,i]:=-inf;</span><br><span class="line">      <span class="keyword">for</span> l:=i-<span class="number">1</span> <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span> f1[j,k,l]:=max(f1[j,k,l+<span class="number">1</span>],f[j,k,l+<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    ans:=max(ans,max(f2[j,c,i],f[j,c,i]));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-bug"></i><br>]]>
    
    </summary>
    
      <category term="Dynamic Programming" scheme="http://platypuspro.github.io/tags/Dynamic-Programming/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 1901]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-1901/"/>
    <id>http://platypuspro.github.io/posts/bzoj-1901/</id>
    <published>2015-04-30T13:13:37.000Z</published>
    <updated>2015-04-30T13:55:14.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-film"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1901" target="_blank" rel="external">传送门</a></p>
<p>其实这是道权限题…建议去ZOJ测…</p>
<p><a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemId=2112" target="_blank" rel="external">ZOJ传送门</a></p>
<p>想+写一上午，调一下午…关键是这题的离散化好恶心啊尼玛，一堆数组绕着绕着就晕了…QAQ</p>
<p>首先扯一个会MLE的解法</p>
<p>对于普通的不带修改的主席树，$root[i]$记载的是从$1$到$i$的所有更改</p>
<p>然后拿树状数组分组一下，让$root[i]$记载从$i-lowbit(i)$到$i$的所有更改，这样建树或修改的时间复杂度$O(n(\log_2n)^2)$</p>
<p>但是呢…这样的空间复杂度有点受不了…大概是$O(n(\log_2n)^2+m(\log_2n)^2)$，毫无疑问MLE <del>何况ZOJ卡了32M内存尼玛</del></p>
<p>正确的姿势是初始的建树按照正常的主席树建，然后每个修改再在树状数组套的主席树里改，这样的时间空间复杂度大概$O(n\log_2n+2m(\log_2n)^2)$，可以开得下了</p>
<p>如果开到最大情况大概是$6240000*3\approx 70M$，但实际的数据没出全是修改的情况，我只用$2240000$就够了…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1901;</span><br><span class="line"><span class="keyword">var</span> root,bit:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2240000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,size:longint; <span class="keyword">end</span>;</span><br><span class="line">    q:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">10000</span>]<span class="keyword">of</span> <span class="keyword">record</span> query:boolean; a,b,k:longint; <span class="keyword">end</span>;</span><br><span class="line">    a,p,b:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">60000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    low:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">2</span>,<span class="number">0</span>..<span class="number">16</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,i,tot,len,l,lb:longint;</span><br><span class="line">    c:char;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lowbit</span><span class="params">(x:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">exit</span>(x <span class="keyword">and</span> -x);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">calc_low</span><span class="params">(p,t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">while</span> p&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(low[t,<span class="number">0</span>]);</span><br><span class="line">    low[t,low[t,<span class="number">0</span>]]:=bit[p];</span><br><span class="line">    dec(p,lowbit(p));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j,mid,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=a[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> a[i]&lt;mid <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> a[j]&gt;mid <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      t:=a[i];</span><br><span class="line">      a[i]:=a[j];</span><br><span class="line">      a[j]:=t;</span><br><span class="line">      t:=p[i];</span><br><span class="line">      p[i]:=p[j];</span><br><span class="line">      p[j]:=t;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(<span class="keyword">var</span> t:longint;base,l,r,p,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  s[t]:=s[base];</span><br><span class="line">  inc(s[t].size,d);</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> p&lt;=mid <span class="keyword">then</span> modify(s[t].lc,s[base].lc,l,mid,p,d)</span><br><span class="line">  <span class="keyword">else</span> modify(s[t].rc,s[base].rc,mid+<span class="number">1</span>,r,p,d);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(a,b,l,r,k:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> i,t,mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>(l);</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  t:=s[s[b].lc].size-s[s[a].lc].size;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> low[<span class="number">1</span>,<span class="number">0</span>] <span class="keyword">do</span> dec(t,s[s[low[<span class="number">1</span>,i]].lc].size);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> low[<span class="number">2</span>,<span class="number">0</span>] <span class="keyword">do</span> inc(t,s[s[low[<span class="number">2</span>,i]].lc].size);</span><br><span class="line">  <span class="keyword">if</span> t&gt;=k <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> low[<span class="number">1</span>,<span class="number">0</span>] <span class="keyword">do</span> low[<span class="number">1</span>,i]:=s[low[<span class="number">1</span>,i]].lc;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> low[<span class="number">2</span>,<span class="number">0</span>] <span class="keyword">do</span> low[<span class="number">2</span>,i]:=s[low[<span class="number">2</span>,i]].lc;</span><br><span class="line">    <span class="keyword">exit</span>(query(s[a].lc,s[b].lc,l,mid,k));</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> low[<span class="number">1</span>,<span class="number">0</span>] <span class="keyword">do</span> low[<span class="number">1</span>,i]:=s[low[<span class="number">1</span>,i]].rc;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> low[<span class="number">2</span>,<span class="number">0</span>] <span class="keyword">do</span> low[<span class="number">2</span>,i]:=s[low[<span class="number">2</span>,i]].rc;</span><br><span class="line">    <span class="keyword">exit</span>(query(s[a].rc,s[b].rc,mid+<span class="number">1</span>,r,k-t));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</span><br><span class="line">  readln;</span><br><span class="line">  len:=n;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(c);</span><br><span class="line">    <span class="keyword">if</span> c=<span class="string">'Q'</span> <span class="keyword">then</span> readln(q[i].a,q[i].b,q[i].k) <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      readln(q[i].a,q[i].k);</span><br><span class="line">      inc(len);</span><br><span class="line">      a[len]:=q[i].k;</span><br><span class="line">      q[i].b:=len;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    q[i].query:=(c=<span class="string">'Q'</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> p[i]:=i;</span><br><span class="line">  qsort(<span class="number">1</span>,len);</span><br><span class="line">  l:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (i=<span class="number">1</span>)<span class="keyword">or</span>(a[i]&lt;&gt;a[i-<span class="number">1</span>]) <span class="keyword">then</span> inc(l);</span><br><span class="line">    b[p[i]]:=l;</span><br><span class="line">    a[l]:=a[i];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  root[<span class="number">0</span>]:=<span class="number">1</span>;</span><br><span class="line">  tot:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> modify(root[i],root[i-<span class="number">1</span>],<span class="number">1</span>,l,b[i],<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">if</span> q[i].query <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    fillchar(low,sizeof(low),<span class="number">0</span>);</span><br><span class="line">    calc_low(q[i].a-<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    calc_low(q[i].b,<span class="number">2</span>);</span><br><span class="line">    writeln(a[query(root[q[i].a-<span class="number">1</span>],root[q[i].b],<span class="number">1</span>,l,q[i].k)]);</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    lb:=q[i].a;</span><br><span class="line">    <span class="keyword">while</span> lb&lt;=n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      modify(bit[lb],bit[lb],<span class="number">1</span>,l,b[q[i].a],-<span class="number">1</span>);</span><br><span class="line">      modify(bit[lb],bit[lb],<span class="number">1</span>,l,b[q[i].b],<span class="number">1</span>);</span><br><span class="line">      inc(lb,lowbit(lb));</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    b[q[i].a]:=b[q[i].b];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<p><del>因为写裸题又被ZYK大爷D了 QAQ</del></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-film"></i><br>]]>
    
    </summary>
    
      <category term="Fotile Tree" scheme="http://platypuspro.github.io/tags/Fotile-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3110]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3110/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3110/</id>
    <published>2015-04-28T13:32:05.000Z</published>
    <updated>2015-05-13T10:11:03.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-coffee"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3110" target="_blank" rel="external">传送门</a></p>
<blockquote>
<p><a href="#Divide">整体二分</a><br><a href="#Tree">树套树</a></p>
</blockquote>
<p>首先强调以下这道题是 真·第$k$<strong>大</strong></p>
<!--Divide-->
<h3 id="整体二分">整体二分</h3><p>这道题有时间先后顺序限制，所以排序时不能把顺序打乱，所以要另外开一个数组用来排序并对它二分答案</p>
<p>因为是区间修改嘛，我又不会区间修改的高端树状数组，就只能用线段树了…每次$Solve$都清空整棵树好像会超时，于是我打了删除标记 <del>然后就掉坑里爬不出来了</del></p>
<p>二分排过序的那个数组，然后<strong>依次</strong>处理从$head$到$tail$的操作（一定要注意先后顺序），有以下几种情况</p>
<ul>
<li>若是添加，且添加的数$\geq mid$，说明这个数对右边一半的影响都相同，只需要减去它的影响就行了，但它对左边一半的影响不相同，所以扔到左边（因为第$k$大嘛所以数组顺序是从大到小的）</li>
<li>若是添加，且添加的数$&lt;mid$，它对左边一半就没有任何影响了，但对右边有影响，所以扔到右边</li>
<li>若询问区间内的数的个数$&lt;k$，说明还不够多，扔到右边再多加几个</li>
<li>若询问区间内的数的个数$\geq k$，说明已经够了，扔到左边</li>
</ul>
<p>这样就把$head$到$tail$的操作分成了两块互不影响且符合时间轴顺序的操作，继续递归到底就能得出答案</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3110;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>]<span class="keyword">of</span> <span class="keyword">record</span> l,r,lc,rc,size,plus:longint; clear:boolean; <span class="keyword">end</span>;</span><br><span class="line">    q,q1,q2:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">50000</span>]<span class="keyword">of</span> <span class="keyword">record</span> cas,l,r,k,p,cur:longint; <span class="keyword">end</span>;</span><br><span class="line">    ans,a:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">50000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,i,tot,t,len:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j,mid,p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=a[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> a[i]&gt;mid <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> a[j]&lt;mid <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=a[i];</span><br><span class="line">      a[i]:=a[j];</span><br><span class="line">      a[j]:=p;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[t].clear <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (s[t].lc&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(s[t].rc&lt;&gt;<span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      s[s[t].lc].size:=<span class="number">0</span>;</span><br><span class="line">      s[s[t].lc].plus:=<span class="number">0</span>;</span><br><span class="line">      s[s[t].lc].clear:=true;</span><br><span class="line">      s[s[t].rc].size:=<span class="number">0</span>;</span><br><span class="line">      s[s[t].rc].plus:=<span class="number">0</span>;</span><br><span class="line">      s[s[t].rc].clear:=true;</span><br><span class="line">      s[t].clear:=false;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> s[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (s[t].lc&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(s[t].rc&lt;&gt;<span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(s[s[t].lc].size,s[t].plus*(s[s[t].lc].r-s[s[t].lc].l+<span class="number">1</span>));</span><br><span class="line">      inc(s[s[t].lc].plus,s[t].plus);</span><br><span class="line">      inc(s[s[t].rc].size,s[t].plus*(s[s[t].rc].r-s[s[t].rc].l+<span class="number">1</span>));</span><br><span class="line">      inc(s[s[t].rc].plus,s[t].plus);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    s[t].plus:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span><span class="params">(<span class="keyword">var</span> t:longint;l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  s[t].l:=l;</span><br><span class="line">  s[t].r:=r;</span><br><span class="line">  s[t].lc:=<span class="number">0</span>;</span><br><span class="line">  s[t].rc:=<span class="number">0</span>;</span><br><span class="line">  s[t].plus:=<span class="number">0</span>;</span><br><span class="line">  s[t].clear:=false;</span><br><span class="line">  s[t].size:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  build(s[t].lc,l,mid);</span><br><span class="line">  build(s[t].rc,mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">cover</span><span class="params">(t,l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (s[t].clear)<span class="keyword">or</span>(s[t].plus&lt;&gt;<span class="number">0</span>) <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;=s[t].l)<span class="keyword">and</span>(r&gt;=s[t].r) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(s[t].size,s[t].r-s[t].l+<span class="number">1</span>);</span><br><span class="line">    inc(s[t].plus);</span><br><span class="line">    pushdown(t);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(s[t].l+s[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> cover(s[t].lc,l,r);</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> cover(s[t].rc,l,r);</span><br><span class="line">  s[t].size:=s[s[t].lc].size+s[s[t].rc].size;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(t,l,r:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> ans,mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (s[t].plus&lt;&gt;<span class="number">0</span>)<span class="keyword">or</span> s[t].clear <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;=s[t].l)<span class="keyword">and</span>(r&gt;=s[t].r) <span class="keyword">then</span> <span class="keyword">exit</span>(s[t].size);</span><br><span class="line">  mid:=(s[t].l+s[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> inc(ans,query(s[t].lc,l,r));</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> inc(ans,query(s[t].rc,l,r));</span><br><span class="line">  <span class="keyword">exit</span>(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">solve</span><span class="params">(l,r,hd,tl:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,mid,l1,l2,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> hd&gt;tl <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=hd <span class="keyword">to</span> tl <span class="keyword">do</span> <span class="keyword">if</span> q[i].cas=<span class="number">2</span> <span class="keyword">then</span> ans[q[i].p]:=l;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  s[<span class="number">1</span>].clear:=true;</span><br><span class="line">  s[<span class="number">1</span>].size:=<span class="number">0</span>;</span><br><span class="line">  s[<span class="number">1</span>].plus:=<span class="number">0</span>;</span><br><span class="line">  pushdown(<span class="number">1</span>);</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  l1:=<span class="number">0</span>;</span><br><span class="line">  l2:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=hd <span class="keyword">to</span> tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> q[i].cas=<span class="number">2</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    t:=query(<span class="number">1</span>,q[i].l,q[i].r);</span><br><span class="line">    <span class="keyword">if</span> q[i].cur+t&gt;=q[i].k <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(l1);</span><br><span class="line">      q1[l1]:=q[i];</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(q[i].cur,t);</span><br><span class="line">      inc(l2);</span><br><span class="line">      q2[l2]:=q[i];</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">if</span> q[i].k&gt;=a[mid] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(l1);</span><br><span class="line">    q1[l1]:=q[i];</span><br><span class="line">    cover(<span class="number">1</span>,q[i].l,q[i].r)</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(l2);</span><br><span class="line">    q2[l2]:=q[i];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> l1 <span class="keyword">do</span> q[hd+i-<span class="number">1</span>]:=q1[i];</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> l2 <span class="keyword">do</span> q[hd+l1+i-<span class="number">1</span>]:=q2[i];</span><br><span class="line">  <span class="keyword">if</span> l1&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> solve(l,mid,hd,hd+l1-<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span> l2&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> solve(mid+<span class="number">1</span>,r,hd+l1,tl);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  len:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">with</span> q[i] <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(cas,l,r,k);</span><br><span class="line">    p:=i;</span><br><span class="line">    cur:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> cas=<span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(len);</span><br><span class="line">      a[len]:=k;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  qsort(<span class="number">1</span>,len);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  build(t,<span class="number">1</span>,n);</span><br><span class="line">  solve(<span class="number">1</span>,len,<span class="number">1</span>,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">if</span> ans[i]&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> writeln(a[ans[i]]);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<!--Tree-->
<h3 id="树套树">树套树</h3><p>两层线段树，第一层是按$c$建的权值线段树，每次加入操作把所有包含$c$的第一层线段树的节点的子线段树的$[a,b]$覆盖</p>
<p>第二层需要动态开点，否则MLE…</p>
<p>查询时直接在第一层线段树上二分即可</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3110;</span><br><span class="line"><span class="keyword">var</span> s1:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,subtree:longint; <span class="keyword">end</span>;</span><br><span class="line">    s2:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">18000000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,size,plus:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,cas,a,b,c,tot1,tot2,t:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">new</span><span class="params">(<span class="keyword">var</span> t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot2);</span><br><span class="line">  t:=tot2;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span><span class="params">(<span class="keyword">var</span> t:longint;l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot1);</span><br><span class="line">  t:=tot1;</span><br><span class="line">  new(s1[t].subtree);</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  build(s1[t].lc,mid+<span class="number">1</span>,r);</span><br><span class="line">  build(s1[t].rc,l,mid);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t,l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (l&lt;&gt;r)<span class="keyword">and</span>(s2[t].lc=<span class="number">0</span>) <span class="keyword">then</span> new(s2[t].lc);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;&gt;r)<span class="keyword">and</span>(s2[t].rc=<span class="number">0</span>) <span class="keyword">then</span> new(s2[t].rc);</span><br><span class="line">  <span class="keyword">if</span> (s2[t].lc&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(s2[t].rc&lt;&gt;<span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    inc(s2[s2[t].lc].size,s2[t].plus*(mid-l+<span class="number">1</span>));</span><br><span class="line">    inc(s2[s2[t].lc].plus,s2[t].plus);</span><br><span class="line">    inc(s2[s2[t].rc].size,s2[t].plus*(r-mid));</span><br><span class="line">    inc(s2[s2[t].rc].plus,s2[t].plus);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  s2[t].plus:=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(<span class="keyword">var</span> t:longint;a,b,l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> t=<span class="number">0</span> <span class="keyword">then</span> new(t);</span><br><span class="line">  mid:=(a+b)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> s2[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(t,a,b);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;=a)<span class="keyword">and</span>(r&gt;=b) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(s2[t].size,b-a+<span class="number">1</span>);</span><br><span class="line">    s2[t].plus:=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> modify(s2[t].lc,a,mid,l,r);</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> modify(s2[t].rc,mid+<span class="number">1</span>,b,l,r);</span><br><span class="line">  s2[t].size:=s2[s2[t].lc].size+s2[s2[t].rc].size;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(t,l,r,a,b,c:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  modify(s1[t].subtree,<span class="number">1</span>,n,a,b);</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> c&gt;mid <span class="keyword">then</span> insert(s1[t].lc,mid+<span class="number">1</span>,r,a,b,c) <span class="keyword">else</span> insert(s1[t].rc,l,mid,a,b,c);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(t,l,r,a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> ans,mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> s2[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(t,l,r);</span><br><span class="line">  <span class="keyword">if</span> (a&lt;=l)<span class="keyword">and</span>(b&gt;=r) <span class="keyword">then</span> <span class="keyword">exit</span>(s2[t].size);</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> a&lt;=mid <span class="keyword">then</span> inc(ans,query(s2[t].lc,l,mid,a,b));</span><br><span class="line">  <span class="keyword">if</span> b&gt;mid <span class="keyword">then</span> inc(ans,query(s2[t].rc,mid+<span class="number">1</span>,r,a,b));</span><br><span class="line">  <span class="keyword">exit</span>(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span><span class="params">(t,l,r,a,b,c:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> p,mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>(l);</span><br><span class="line">  p:=query(s1[s1[t].lc].subtree,<span class="number">1</span>,n,a,b);</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> c&lt;=p <span class="keyword">then</span> <span class="keyword">exit</span>(ask(s1[t].lc,mid+<span class="number">1</span>,r,a,b,c)) <span class="keyword">else</span> <span class="keyword">exit</span>(ask(s1[t].rc,l,mid,a,b,c-p));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  tot1:=<span class="number">0</span>;</span><br><span class="line">  tot2:=<span class="number">0</span>;</span><br><span class="line">  build(t,<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(cas,a,b,c);</span><br><span class="line">    <span class="keyword">if</span> cas=<span class="number">1</span> <span class="keyword">then</span> insert(<span class="number">1</span>,<span class="number">1</span>,n,a,b,c) <span class="keyword">else</span> writeln(ask(<span class="number">1</span>,<span class="number">1</span>,n,a,b,c));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<p><del>为啥锚记挂了…明明2150还可以用呢…</del></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-coffee"></i><br>]]>
    
    </summary>
    
      <category term="Tree in Tree" scheme="http://platypuspro.github.io/tags/Tree-in-Tree/"/>
    
      <category term="Whole Binary-Divide" scheme="http://platypuspro.github.io/tags/Whole-Binary-Divide/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 2104]]></title>
    <link href="http://platypuspro.github.io/posts/poj-2104/"/>
    <id>http://platypuspro.github.io/posts/poj-2104/</id>
    <published>2015-04-27T13:31:52.000Z</published>
    <updated>2015-04-29T00:33:58.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-sliders"></i><br><a id="more"></a><br><a href="http://poj.org/problem?id=2104" target="_blank" rel="external">传送门</a></p>
<blockquote>
<p><a href="#tag1">整体二分</a><br><a href="#tag2">主席树</a></p>
</blockquote>
<!--tag1-->
<h3 id="整体二分">整体二分</h3><p>首先把序列排成有序的</p>
<p>然后二分答案，把$\leq mid$的数扔到树状数组里，看每个询问的区间里的数够不够$k$个，若够就扔到左边，不够就扔到右边</p>
<p>继续递归处理左右两边，二分到底时就可以得出询问的答案</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> poj_2104;</span><br><span class="line"><span class="keyword">type</span> rec=<span class="keyword">record</span> k,p:longint; <span class="keyword">end</span>;</span><br><span class="line">     ask_op=<span class="keyword">record</span> l,r,k,id,cur:longint; <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> bit:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    q,q1,q2:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">5000</span>]<span class="keyword">of</span> ask_op;</span><br><span class="line">    ans:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">5000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    a:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> rec;</span><br><span class="line">    n,m,i:longint;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">c</span><span class="params">(x:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">exit</span>(x <span class="keyword">and</span> -x);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">plus</span><span class="params">(p,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">while</span> p&lt;=n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(bit[p],d);</span><br><span class="line">    inc(p,c(p));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(p:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  query:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> p&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(query,bit[p]);</span><br><span class="line">    dec(p,c(p));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line">    mid,p:rec;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=a[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> a[i].k&lt;mid.k <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> a[j].k&gt;mid.k <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=a[i];</span><br><span class="line">      a[i]:=a[j];</span><br><span class="line">      a[j]:=p;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">solve</span><span class="params">(hd,tl,l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,mid,l1,l2,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> hd&gt;tl <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=hd <span class="keyword">to</span> tl <span class="keyword">do</span> ans[q[i].id]:=l;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  l1:=<span class="number">0</span>;</span><br><span class="line">  l2:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=l <span class="keyword">to</span> mid <span class="keyword">do</span> plus(a[i].p,<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=hd <span class="keyword">to</span> tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    t:=query(q[i].r)-query(q[i].l-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> q[i].cur+t&gt;=q[i].k <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(l1);</span><br><span class="line">      q1[l1]:=q[i];</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(q[i].cur,t);</span><br><span class="line">      inc(l2);</span><br><span class="line">      q2[l2]:=q[i];</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=l <span class="keyword">to</span> mid <span class="keyword">do</span> plus(a[i].p,-<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> l1 <span class="keyword">do</span> q[hd+i-<span class="number">1</span>]:=q1[i];</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> l2 <span class="keyword">do</span> q[hd+l1+i-<span class="number">1</span>]:=q2[i];</span><br><span class="line">  solve(hd,hd+l1-<span class="number">1</span>,l,mid);</span><br><span class="line">  solve(hd+l1,tl,mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(a[i].k);</span><br><span class="line">    a[i].p:=i;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  qsort(<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">with</span> q[i] <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(l,r,k);</span><br><span class="line">    id:=i;</span><br><span class="line">    cur:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  solve(<span class="number">1</span>,m,<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> writeln(a[ans[i]].k);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<!--tag2-->
<h3 id="主席树">主席树</h3><p>这个是裸的…就不用讲了吧…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> poj_2104;</span><br><span class="line"><span class="keyword">type</span> rec=<span class="keyword">record</span> k,p:longint; <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2000000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,l,r,cnt:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,l,r,tot,t:longint;</span><br><span class="line">    a:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> rec;</span><br><span class="line">    k,rt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span><span class="params">(<span class="keyword">var</span> t:longint;l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  s[t].l:=l;</span><br><span class="line">  s[t].r:=r;</span><br><span class="line">  s[t].cnt:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  build(s[t].lc,l,mid);</span><br><span class="line">  build(s[t].rc,mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line">    mid,p:rec;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=a[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> a[i].k&lt;mid.k <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> a[j].k&gt;mid.k <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=a[i];</span><br><span class="line">      a[i]:=a[j];</span><br><span class="line">      a[j]:=p;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(<span class="keyword">var</span> t:longint;p:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  s[tot]:=s[t];</span><br><span class="line">  t:=tot;</span><br><span class="line">  inc(s[t].cnt);</span><br><span class="line">  <span class="keyword">if</span> s[t].l=s[t].r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(s[t].l+s[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> p&lt;=mid <span class="keyword">then</span> modify(s[t].lc,p) <span class="keyword">else</span> modify(s[t].rc,p);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(l,r,t:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[l].l=s[l].r <span class="keyword">then</span> <span class="keyword">exit</span>(s[l].l);</span><br><span class="line">  k:=s[s[r].lc].cnt-s[s[l].lc].cnt;</span><br><span class="line">  <span class="keyword">if</span> t&lt;=k <span class="keyword">then</span> <span class="keyword">exit</span>(query(s[l].lc,s[r].lc,t)) <span class="keyword">else</span> <span class="keyword">exit</span>(query(s[l].rc,s[r].rc,t-k));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(a[i].k);</span><br><span class="line">    a[i].p:=i;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  qsort(<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> k[a[i].p]:=i;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  fillchar(s,sizeof(s),<span class="number">0</span>);</span><br><span class="line">  build(rt[<span class="number">0</span>],<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    rt[i]:=rt[i-<span class="number">1</span>];</span><br><span class="line">    modify(rt[i],k[i]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(l,r,t);</span><br><span class="line">    writeln(a[query(rt[l-<span class="number">1</span>],rt[r],t)].k);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-sliders"></i><br>]]>
    
    </summary>
    
      <category term="Fotile Tree" scheme="http://platypuspro.github.io/tags/Fotile-Tree/"/>
    
      <category term="Whole Binary-Divide" scheme="http://platypuspro.github.io/tags/Whole-Binary-Divide/"/>
    
      <category term="POJ" scheme="http://platypuspro.github.io/categories/POJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4008]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-4008/"/>
    <id>http://platypuspro.github.io/posts/bzoj-4008/</id>
    <published>2015-04-26T09:59:06.000Z</published>
    <updated>2015-04-28T23:50:41.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-send"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4008" target="_blank" rel="external">传送门</a></p>
<p>题目意思大概就是在$n$张卡牌中挑$1~r$张，每张只能挑一次，求选出的卡牌的期望总伤害</p>
<p>设$F[i,j]$为选至第$i$张，还能选$j$次的期望伤害值</p>
<p>每张牌有选与不选两种情况，所以</p>
<h4 id="$$F_{i,j}=F_{i-1,j}\cdot(1-p_i)^j+F_{i-1,j+1}\cdot(1-(1-p_i)^{j+1})$$">$$F_{i,j}=F_{i-1,j}\cdot(1-p_i)^j+F_{i-1,j+1}\cdot(1-(1-p_i)^{j+1})$$</h4><p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4008;</span><br><span class="line"><span class="keyword">var</span> g,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">221</span>,<span class="number">0</span>..<span class="number">133</span>]<span class="keyword">of</span> extended;</span><br><span class="line">    t,n,r,i:longint;</span><br><span class="line">    p:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">220</span>]<span class="keyword">of</span> extended;</span><br><span class="line">    d:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">220</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    ans:extended;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">calc</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line">    a,b:extended;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> r <span class="keyword">do</span> g[i,j]:=g[i,j-<span class="number">1</span>]*(<span class="number">1</span>-p[i]);</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  fillchar(f,sizeof(f),<span class="number">0</span>);</span><br><span class="line">  f[<span class="number">0</span>,r]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> r <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    a:=f[i-<span class="number">1</span>,j]*g[i,j];</span><br><span class="line">    b:=f[i-<span class="number">1</span>,j+<span class="number">1</span>]*(<span class="number">1</span>-g[i,j+<span class="number">1</span>]);</span><br><span class="line">    f[i,j]:=a+b;</span><br><span class="line">    ans:=ans+b*d[i];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(t);</span><br><span class="line">  fillchar(g,sizeof(g),<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">220</span> <span class="keyword">do</span> g[i,<span class="number">0</span>]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> t:=<span class="number">1</span> <span class="keyword">to</span> t <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(n,r);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> readln(p[i],d[i]);</span><br><span class="line">    calc;</span><br><span class="line">    writeln(ans:<span class="number">0</span>:<span class="number">10</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-send"></i><br>]]>
    
    </summary>
    
      <category term="Dynamic Programming" scheme="http://platypuspro.github.io/tags/Dynamic-Programming/"/>
    
      <category term="Expected Value" scheme="http://platypuspro.github.io/tags/Expected-Value/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 2150]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-2150/"/>
    <id>http://platypuspro.github.io/posts/bzoj-2150/</id>
    <published>2015-04-26T09:58:59.000Z</published>
    <updated>2015-04-26T11:42:57.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-gavel"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2150" target="_blank" rel="external">传送门</a></p>
<p>$最小路径覆盖=\mid P \mid - 最大匹配$<br><del>为啥这个“径”是繁体…</del></p>
<blockquote>
<p><a href="#Hungary">二分图最大匹配</a><br><a href="#Dinic">网络流</a></p>
</blockquote>
<p>其实两个方法差不多，只是建的图有点区别</p>
<p>都是如果能走就向下连边，然后直接求最大匹配</p>
<p>但是这道题的${\rm Hungary}$真的好快啊QAQ</p>
<!--Hungary-->
<h3 id="Hungary">Hungary</h3><p>这个建了个二分图…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2150;</span><br><span class="line"><span class="keyword">var</span> num:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">50</span>,<span class="number">1</span>..<span class="number">50</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    pair,lst:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">5000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    v:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">5000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">10000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,m,r,c,i,j,cnt,tot,ans:longint;</span><br><span class="line">    ch:char;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x,y:longint)</span>:</span>boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">exit</span>((x&gt;<span class="number">0</span>)<span class="keyword">and</span>(x&lt;=m)<span class="keyword">and</span>(y&gt;<span class="number">0</span>)<span class="keyword">and</span>(y&lt;=n)<span class="keyword">and</span>(num[x,y]&lt;&gt;<span class="number">0</span>));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hungary</span><span class="params">(x:longint)</span>:</span>boolean;</span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  k:=lst[x];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> v[l[k].ed] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      v[l[k].ed]:=true;</span><br><span class="line">      <span class="keyword">if</span> (pair[l[k].ed]=<span class="number">0</span>)<span class="keyword">or</span>(hungary(pair[l[k].ed])) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        pair[l[k].ed]:=x;</span><br><span class="line">        <span class="keyword">exit</span>(true);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(false);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(m,n,r,c);</span><br><span class="line">  cnt:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">read</span>(ch);</span><br><span class="line">      <span class="keyword">if</span> ch=<span class="string">'.'</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        inc(cnt);</span><br><span class="line">        num[i,j]:=cnt;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    readln;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> num[i,j]=<span class="number">0</span> <span class="keyword">then</span> continue;</span><br><span class="line">    <span class="keyword">if</span> check(i+r,j-c) <span class="keyword">then</span> link(num[i,j],cnt+num[i+r,j-c]);</span><br><span class="line">    <span class="keyword">if</span> check(i+r,j+c) <span class="keyword">then</span> link(num[i,j],cnt+num[i+r,j+c]);</span><br><span class="line">    <span class="keyword">if</span> check(i+c,j-r) <span class="keyword">then</span> link(num[i,j],cnt+num[i+c,j-r]);</span><br><span class="line">    <span class="keyword">if</span> check(i+c,j+r) <span class="keyword">then</span> link(num[i,j],cnt+num[i+c,j+r]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> cnt <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    fillchar(v,sizeof(v),false);</span><br><span class="line">    <span class="keyword">if</span> hungary(i) <span class="keyword">then</span> inc(ans);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(cnt-ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<!--Dinic-->
<h3 id="Dinic">Dinic</h3><p>这个是一个矩阵图…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2150;</span><br><span class="line"><span class="keyword">const</span> inf=maxlongint&gt;&gt;<span class="number">1</span>;</span><br><span class="line">      qs=<span class="number">100000</span>;</span><br><span class="line"><span class="keyword">var</span> d,lst,que:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    v:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">5000000</span>]<span class="keyword">of</span> <span class="keyword">record</span> f,ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..qs]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,r,c,i,j,ss,tt,hd,tl,maxf,tot,cnt,len:longint;</span><br><span class="line">    ch:char;</span><br><span class="line">    pd:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100</span>,<span class="number">0</span>..<span class="number">100</span>]<span class="keyword">of</span> boolean;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">ad</span><span class="params">(a,b,f:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line">  l[tot].f:=f;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(x,y,a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (a&gt;m)<span class="keyword">or</span>(b&lt;<span class="number">1</span>)<span class="keyword">or</span>(b&gt;n)<span class="keyword">or</span>(<span class="keyword">not</span> pd[a,b]) <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  ad((x-<span class="number">1</span>)*n+y+m*n,(a-<span class="number">1</span>)*n+b,<span class="number">1</span>);</span><br><span class="line">  ad((a-<span class="number">1</span>)*n+b,(x-<span class="number">1</span>)*n+y+m*n,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">spfa</span>:</span>boolean;</span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(v,sizeof(v),false);</span><br><span class="line">  fillchar(d,sizeof(d),$<span class="number">7</span>f);</span><br><span class="line">  hd:=<span class="number">0</span>;</span><br><span class="line">  tl:=<span class="number">1</span>;</span><br><span class="line">  q[<span class="number">1</span>]:=ss;</span><br><span class="line">  d[ss]:=<span class="number">0</span>;</span><br><span class="line">  v[ss]:=true;</span><br><span class="line">  <span class="keyword">while</span> hd&lt;&gt;tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(hd);</span><br><span class="line">    <span class="keyword">if</span> hd&gt;qs <span class="keyword">then</span> hd:=<span class="number">1</span>;</span><br><span class="line">    k:=lst[q[hd]];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> (l[k].f&gt;<span class="number">0</span>)<span class="keyword">and</span>(d[q[hd]]+<span class="number">1</span>&lt;d[l[k].ed]) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        d[l[k].ed]:=d[q[hd]]+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> v[l[k].ed] <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          inc(tl);</span><br><span class="line">          <span class="keyword">if</span> tl&gt;qs <span class="keyword">then</span> tl:=<span class="number">1</span>;</span><br><span class="line">          q[tl]:=l[k].ed;</span><br><span class="line">          v[l[k].ed]:=true;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    v[q[hd]]:=false;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  fillchar(v,sizeof(v),false);</span><br><span class="line">  <span class="keyword">exit</span>(d[tt]&lt;inf);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">expand</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,f:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  f:=inf;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> <span class="keyword">if</span> l[que[i]].f&lt;f <span class="keyword">then</span> f:=l[que[i]].f;</span><br><span class="line">  inc(maxf,f);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    dec(l[que[i]].f,f);</span><br><span class="line">    inc(l[que[i] xor <span class="number">1</span>].f,f);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  v[t]:=true;</span><br><span class="line">  <span class="keyword">if</span> t=tt <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    expand;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (l[k].f&gt;<span class="number">0</span>)<span class="keyword">and</span>(d[l[k].ed]=d[t]+<span class="number">1</span>)<span class="keyword">and</span>(<span class="keyword">not</span> v[l[k].ed]) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(len);</span><br><span class="line">      que[len]:=k;</span><br><span class="line">      dfs(l[k].ed);</span><br><span class="line">      dec(len);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(m,n,r,c);</span><br><span class="line">  ss:=<span class="number">2</span>*m*n+<span class="number">1</span>;</span><br><span class="line">  tt:=<span class="number">2</span>*m*n+<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">read</span>(ch);</span><br><span class="line">      pd[i,j]:=(ch=<span class="string">'.'</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    readln;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  cnt:=<span class="number">0</span>;</span><br><span class="line">  tot:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> pd[i,j] <span class="keyword">then</span> continue;</span><br><span class="line">    inc(cnt);</span><br><span class="line">    link(i,j,i+r,j-c);</span><br><span class="line">    link(i,j,i+r,j+c);</span><br><span class="line">    ad((i-<span class="number">1</span>)*n+j,tt,<span class="number">1</span>);</span><br><span class="line">    ad(tt,(i-<span class="number">1</span>)*n+j,<span class="number">0</span>);</span><br><span class="line">    ad(ss,(i-<span class="number">1</span>)*n+j+m*n,<span class="number">1</span>);</span><br><span class="line">    ad((i-<span class="number">1</span>)*n+j+m*n,ss,<span class="number">0</span>);</span><br><span class="line">    link(i,j,i+c,j-r);</span><br><span class="line">    link(i,j,i+c,j+r);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  maxf:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> spfa <span class="keyword">do</span> dfs(ss);</span><br><span class="line">  writeln(cnt-maxf);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-gavel"></i><br>]]>
    
    </summary>
    
      <category term="Bipartite-Graph Matching" scheme="http://platypuspro.github.io/tags/Bipartite-Graph-Matching/"/>
    
      <category term="Max Flow" scheme="http://platypuspro.github.io/tags/Max-Flow/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 2049]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-2049/"/>
    <id>http://platypuspro.github.io/posts/bzoj-2049/</id>
    <published>2015-04-26T09:58:43.000Z</published>
    <updated>2015-04-26T11:11:41.000Z</updated>
    <content type="html"><![CDATA[<p>动态树模板题<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2049" target="_blank" rel="external">传送门</a></p>
<p>全都是动态树的基础操作…就不讲了吧…看代码脑补得了….<del>实际是不会讲啊QAQ</del></p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2049;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10000</span>]<span class="keyword">of</span> <span class="keyword">record</span> fa,lc,rc:longint; root,rev:boolean; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,j,a,b:longint;</span><br><span class="line">    c,cc:char;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> s[t].rev <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  p:=s[t].lc;</span><br><span class="line">  s[t].lc:=s[t].rc;</span><br><span class="line">  s[t].rc:=p;</span><br><span class="line">  s[t].rev:=<span class="keyword">not</span> s[t].rev;</span><br><span class="line">  <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].lc].rev:=<span class="keyword">not</span> s[s[t].lc].rev;</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].rc].rev:=<span class="keyword">not</span> s[s[t].rc].rev;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">l_rotate</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=s[t].fa;</span><br><span class="line">  s[p].rc:=s[t].lc;</span><br><span class="line">  <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].lc].fa:=p;</span><br><span class="line">  s[t].fa:=s[p].fa;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].lc <span class="keyword">then</span> s[s[p].fa].lc:=t;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].rc <span class="keyword">then</span> s[s[p].fa].rc:=t;</span><br><span class="line">  s[t].root:=s[p].root;</span><br><span class="line">  s[p].root:=false;</span><br><span class="line">  s[t].lc:=p;</span><br><span class="line">  s[p].fa:=t;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">r_rotate</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=s[t].fa;</span><br><span class="line">  s[p].lc:=s[t].rc;</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].rc].fa:=p;</span><br><span class="line">  s[t].fa:=s[p].fa;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].lc <span class="keyword">then</span> s[s[p].fa].lc:=t;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].rc <span class="keyword">then</span> s[s[p].fa].rc:=t;</span><br><span class="line">  s[t].root:=s[p].root;</span><br><span class="line">  s[p].root:=false;</span><br><span class="line">  s[t].rc:=p;</span><br><span class="line">  s[p].fa:=t;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">splay</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">while</span> <span class="keyword">not</span> s[t].root <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> s[s[t].fa].rev <span class="keyword">then</span> pushdown(s[t].fa);</span><br><span class="line">    <span class="keyword">if</span> s[s[s[t].fa].lc].rev <span class="keyword">then</span> pushdown(s[s[t].fa].lc);</span><br><span class="line">    <span class="keyword">if</span> s[s[s[t].fa].rc].rev <span class="keyword">then</span> pushdown(s[s[t].fa].rc);</span><br><span class="line">    <span class="keyword">if</span> t=s[s[t].fa].lc <span class="keyword">then</span> r_rotate(t) <span class="keyword">else</span> l_rotate(t);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">access</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  splay(t);</span><br><span class="line">  <span class="keyword">if</span> s[t].rev <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].rc].root:=true;</span><br><span class="line">  s[t].rc:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> s[t].fa&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    p:=s[t].fa;</span><br><span class="line">    splay(p);</span><br><span class="line">    <span class="keyword">if</span> s[p].rev <span class="keyword">then</span> pushdown(p);</span><br><span class="line">    <span class="keyword">if</span> s[p].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[p].rc].root:=true;</span><br><span class="line">    s[t].root:=false;</span><br><span class="line">    s[p].rc:=t;</span><br><span class="line">    s[t].fa:=p;</span><br><span class="line">    splay(t);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">evert</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  access(t);</span><br><span class="line">  s[t].rev:=true;</span><br><span class="line">  pushdown(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  evert(a);</span><br><span class="line">  access(b);</span><br><span class="line">  s[a].lc:=b;</span><br><span class="line">  s[b].fa:=a;</span><br><span class="line">  s[b].root:=false;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">cut</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  evert(a);</span><br><span class="line">  access(b);</span><br><span class="line">  <span class="keyword">if</span> s[b].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[b].lc].root:=true;</span><br><span class="line">  s[a].fa:=<span class="number">0</span>;</span><br><span class="line">  s[b].lc:=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(t:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  access(t);</span><br><span class="line">  <span class="keyword">while</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> t:=s[t].lc;</span><br><span class="line">  <span class="keyword">exit</span>(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  fillchar(s,sizeof(s),<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> s[i].root:=true;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(c);</span><br><span class="line">    <span class="keyword">case</span> c <span class="keyword">of</span></span><br><span class="line">      <span class="string">'C'</span>:<span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">6</span> <span class="keyword">do</span> <span class="keyword">read</span>(cc);</span><br><span class="line">        readln(a,b);</span><br><span class="line">        link(a,b);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      <span class="string">'D'</span>:<span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">6</span> <span class="keyword">do</span> <span class="keyword">read</span>(cc);</span><br><span class="line">        readln(a,b);</span><br><span class="line">        cut(a,b);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      <span class="string">'Q'</span>:<span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">4</span> <span class="keyword">do</span> <span class="keyword">read</span>(cc);</span><br><span class="line">        readln(a,b);</span><br><span class="line">        <span class="keyword">if</span> find(a)=find(b) <span class="keyword">then</span> writeln(<span class="string">'Yes'</span>) <span class="keyword">else</span> writeln(<span class="string">'No'</span>);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>动态树模板题<br>]]>
    
    </summary>
    
      <category term="Link Cut Tree" scheme="http://platypuspro.github.io/tags/Link-Cut-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 1051]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-1051/"/>
    <id>http://platypuspro.github.io/posts/bzoj-1051/</id>
    <published>2015-04-26T09:58:33.000Z</published>
    <updated>2015-04-26T11:06:44.000Z</updated>
    <content type="html"><![CDATA[<p>强连通分量模板题<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1051" target="_blank" rel="external">传送门</a></p>
<blockquote>
<p>注意是<strong>单向边</strong></p>
</blockquote>
<p>拿裸的${\rm Tarjan}$缩点，然后统计每个强连通分量的出度和大小</p>
<p>假设有俩强连通分量$A$和$B$，$A_2$认识$B_1$，那么$A_1$就一定认识$B_2$，因为强连通分量内一定两两可达嘛，所以只要两个强连通分量间有$A\rightarrow B$的边，那么所有$A$一定认识所有$B$</p>
<p>对于每个强连通分量，若其出度为${\rm 0}$则说明里面的任一头牛都不认识外面的，但外面的可能认识里面的</p>
<p>若有多个出度为${\rm 0}$的强连通分量，说明肯定有牛<strong>互相</strong>不认识，那不就不满足题意了嘛…</p>
<p>所以若出度为${\rm 0}$的强连通分量只有一个，则输出它的大小，否则输出${\rm 0}$</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1051;</span><br><span class="line"><span class="keyword">var</span> low,dfn,lst,cnt,s,bl:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    v,ins,noout:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    n,m,scc,tot,i,a,b,time,top,ans:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(time);</span><br><span class="line">  low[t]:=time;</span><br><span class="line">  dfn[t]:=time;</span><br><span class="line">  v[t]:=true;</span><br><span class="line">  ins[t]:=true;</span><br><span class="line">  inc(top);</span><br><span class="line">  s[top]:=t;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> v[l[k].ed] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      dfs(l[k].ed);</span><br><span class="line">      low[t]:=min(low[t],low[l[k].ed]);</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> ins[l[k].ed] <span class="keyword">then</span> low[t]:=min(low[t],dfn[l[k].ed]);</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> dfn[t]=low[t] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(scc);</span><br><span class="line">    <span class="keyword">repeat</span></span><br><span class="line">      inc(cnt[scc]);</span><br><span class="line">      bl[s[top]]:=scc;</span><br><span class="line">      ins[s[top]]:=false;</span><br><span class="line">      dec(top);</span><br><span class="line">    <span class="keyword">until</span> s[top+<span class="number">1</span>]=t;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">rebuild</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(noout,sizeof(noout),true);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    k:=lst[i];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> bl[i]&lt;&gt;bl[l[k].ed] <span class="keyword">then</span> noout[bl[i]]:=false;</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b);</span><br><span class="line">    link(a,b);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  fillchar(v,sizeof(v),<span class="number">0</span>);</span><br><span class="line">  fillchar(cnt,sizeof(cnt),<span class="number">0</span>);</span><br><span class="line">  top:=<span class="number">0</span>;</span><br><span class="line">  scc:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> <span class="keyword">not</span> v[i] <span class="keyword">then</span> dfs(i);</span><br><span class="line">  rebuild;</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> scc <span class="keyword">do</span> <span class="keyword">if</span> noout[i] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> ans&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    writeln(<span class="number">0</span>);</span><br><span class="line">    halt;</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span> ans:=cnt[i];</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>强连通分量模板题<br>]]>
    
    </summary>
    
      <category term="Tarjan SCC" scheme="http://platypuspro.github.io/tags/Tarjan-SCC/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 1036]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-1036/"/>
    <id>http://platypuspro.github.io/posts/bzoj-1036/</id>
    <published>2015-04-26T09:58:27.000Z</published>
    <updated>2015-04-26T10:38:34.000Z</updated>
    <content type="html"><![CDATA[<p>树链剖分&amp;动态树 模板题<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1036" target="_blank" rel="external">传送门</a></p>
<blockquote>
<p><a href="#TCS">树链剖分解法</a><br><a href="#LCT">动态树解法</a></p>
</blockquote>
<!--TCS-->
<h3 id="树链剖分">树链剖分</h3><ul>
<li>深搜时记录每个节点子树大小</li>
<li>搜到底时建新链</li>
<li>回溯时挑最大的子树</li>
<li>把当前节点加到这颗子树的重链中</li>
<li>对当前节点的其他儿子的重链“封顶”</li>
<li>对每条重链建一棵线段树</li>
</ul>
<p>修改操作就找到节点所属重链在链的线段树中修改</p>
<p>查询操作就每次从当前所在位置蹦到当前所在链的顶端，然后从顶端的$father$继续向上蹦，重复这样的操作直到蹦到根节点</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1036;</span><br><span class="line"><span class="keyword">var</span> path:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">30000</span>]<span class="keyword">of</span> <span class="keyword">record</span> top,dep,size,tree:longint; <span class="keyword">end</span>;</span><br><span class="line">    s:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">30000</span>]<span class="keyword">of</span> <span class="keyword">record</span> fa,size,dep,bl,w,rk:longint; <span class="keyword">end</span>;</span><br><span class="line">    seg:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">60000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,l,r,max,sum:longint; <span class="keyword">end</span>;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">60000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    lst:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">30000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,q,i,a,b,tot,pcnt:longint;</span><br><span class="line">    c,cc:char;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&gt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k,mk,maxs,i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  s[t].size:=<span class="number">1</span>;</span><br><span class="line">  s[t].bl:=<span class="number">0</span>;</span><br><span class="line">  maxs:=<span class="number">0</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;s[t].fa <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      s[l[k].ed].fa:=t;</span><br><span class="line">      s[l[k].ed].dep:=s[t].dep+<span class="number">1</span>;</span><br><span class="line">      dfs(l[k].ed);</span><br><span class="line">      inc(s[t].size,s[l[k].ed].size);</span><br><span class="line">      <span class="keyword">if</span> s[l[k].ed].size&gt;maxs <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        maxs:=s[l[k].ed].size;</span><br><span class="line">        mk:=l[k].ed;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;s[t].fa <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> l[k].ed=mk <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        s[t].bl:=s[l[k].ed].bl;</span><br><span class="line">        s[t].rk:=s[l[k].ed].rk+<span class="number">1</span>;</span><br><span class="line">        inc(path[s[t].bl].size);</span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        i:=s[l[k].ed].bl;</span><br><span class="line">        path[i].top:=l[k].ed;</span><br><span class="line">        path[i].dep:=s[l[k].ed].dep;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> s[t].bl=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(pcnt);</span><br><span class="line">    s[t].bl:=pcnt;</span><br><span class="line">    path[s[t].bl].size:=<span class="number">1</span>;</span><br><span class="line">    s[t].rk:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span><span class="params">(<span class="keyword">var</span> t:longint;l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  seg[t].l:=l;</span><br><span class="line">  seg[t].r:=r;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  build(seg[t].lc,l,mid);</span><br><span class="line">  build(seg[t].rc,mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(t,p,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> seg[t].l=seg[t].r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    seg[t].sum:=d;</span><br><span class="line">    seg[t].max:=d;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(seg[t].l+seg[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> p&lt;=mid <span class="keyword">then</span> modify(seg[t].lc,p,d) <span class="keyword">else</span> modify(seg[t].rc,p,d);</span><br><span class="line">  seg[t].max:=max(seg[seg[t].lc].max,seg[seg[t].rc].max);</span><br><span class="line">  seg[t].sum:=seg[seg[t].lc].sum+seg[seg[t].rc].sum;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(t,l,r:longint;flag:boolean)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> mid,a1,a2:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (l&lt;=seg[t].l)<span class="keyword">and</span>(r&gt;=seg[t].r) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> flag <span class="keyword">then</span> <span class="keyword">exit</span>(seg[t].sum) <span class="keyword">else</span> <span class="keyword">exit</span>(seg[t].max);</span><br><span class="line">  mid:=(seg[t].l+seg[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> flag <span class="keyword">then</span> a1:=<span class="number">0</span> <span class="keyword">else</span> a1:=-maxlongint;</span><br><span class="line">  a2:=a1;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> a1:=query(seg[t].lc,l,r,flag);</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> a2:=query(seg[t].rc,l,r,flag);</span><br><span class="line">  <span class="keyword">if</span> flag <span class="keyword">then</span> <span class="keyword">exit</span>(a1+a2) <span class="keyword">else</span> <span class="keyword">exit</span>(max(a1,a2));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">ask</span><span class="params">(a,b:longint;flag:boolean)</span>;</span></span><br><span class="line"><span class="keyword">var</span> ans,p,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> flag <span class="keyword">then</span> ans:=<span class="number">0</span> <span class="keyword">else</span> ans:=-maxlongint;</span><br><span class="line">  <span class="keyword">while</span> s[a].bl&lt;&gt;s[b].bl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> path[s[a].bl].dep&lt;path[s[b].bl].dep <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=a;</span><br><span class="line">      a:=b;</span><br><span class="line">      b:=p;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    t:=query(path[s[a].bl].tree,s[a].rk,path[s[a].bl].size,flag);</span><br><span class="line">    <span class="keyword">if</span> flag <span class="keyword">then</span> inc(ans,t) <span class="keyword">else</span> ans:=max(ans,t);</span><br><span class="line">    a:=s[path[s[a].bl].top].fa;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> s[a].rk&gt;s[b].rk <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    p:=a;</span><br><span class="line">    a:=b;</span><br><span class="line">    b:=p;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  t:=query(path[s[a].bl].tree,s[a].rk,s[b].rk,flag);</span><br><span class="line">  <span class="keyword">if</span> flag <span class="keyword">then</span> inc(ans,t) <span class="keyword">else</span> ans:=max(ans,t);</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b);</span><br><span class="line">    link(a,b);</span><br><span class="line">    link(b,a);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(s[i].w);</span><br><span class="line">  pcnt:=<span class="number">0</span>;</span><br><span class="line">  s[<span class="number">1</span>].dep:=<span class="number">1</span>;</span><br><span class="line">  s[<span class="number">1</span>].fa:=<span class="number">0</span>;</span><br><span class="line">  dfs(<span class="number">1</span>);</span><br><span class="line">  path[s[<span class="number">1</span>].bl].top:=<span class="number">1</span>;</span><br><span class="line">  path[s[<span class="number">1</span>].bl].dep:=<span class="number">1</span>;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> pcnt <span class="keyword">do</span> build(path[i].tree,<span class="number">1</span>,path[i].size);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> modify(path[s[i].bl].tree,s[i].rk,s[i].w);</span><br><span class="line">  readln(q);</span><br><span class="line">  <span class="keyword">for</span> q:=<span class="number">1</span> <span class="keyword">to</span> q <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(c);</span><br><span class="line">    <span class="keyword">if</span> c=<span class="string">'C'</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">5</span> <span class="keyword">do</span> <span class="keyword">read</span>(cc);</span><br><span class="line">      readln(a,b);</span><br><span class="line">      modify(path[s[a].bl].tree,s[a].rk,b);</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span> <span class="keyword">read</span>(cc);</span><br><span class="line">      readln(a,b);</span><br><span class="line">      <span class="keyword">if</span> cc=<span class="string">'X'</span> <span class="keyword">then</span> ask(a,b,false) <span class="keyword">else</span> ask(a,b,true);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<!--LCT-->
<h3 id="LCT">LCT</h3><p>动态树嘛…这个姿势只有深刻脑补才能明白…反正我是讲不明白…</p>
<p><del>直接扔代码跑了算了</del></p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1036;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">30000</span>]<span class="keyword">of</span> <span class="keyword">record</span> fa,lc,rc,key,max,sum:longint; root,rev:boolean; <span class="keyword">end</span>;</span><br><span class="line">    n,i,j,a,b,q,tot:longint;</span><br><span class="line">    ch,c:char;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">60000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    lst:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">30000</span>]<span class="keyword">of</span> longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&gt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(p:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  t:=lst[p];</span><br><span class="line">  <span class="keyword">while</span> t&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[t].ed&lt;&gt;s[p].fa <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      s[l[t].ed].fa:=p;</span><br><span class="line">      dfs(l[t].ed);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    t:=l[t].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[t].rev <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].lc].rev:=<span class="keyword">not</span> s[s[t].lc].rev;</span><br><span class="line">    <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].rc].rev:=<span class="keyword">not</span> s[s[t].rc].rev;</span><br><span class="line">    s[t].rev:=<span class="keyword">not</span> s[t].rev;</span><br><span class="line">    p:=s[t].lc;</span><br><span class="line">    s[t].lc:=s[t].rc;</span><br><span class="line">    s[t].rc:=p;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">update</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[t].rev <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  s[t].max:=max(s[t].key,max(s[s[t].lc].max,s[s[t].rc].max));</span><br><span class="line">  s[t].sum:=s[s[t].lc].sum+s[s[t].rc].sum+s[t].key;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">l_rotate</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=s[t].fa;</span><br><span class="line">  s[p].rc:=s[t].lc;</span><br><span class="line">  <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].lc].fa:=p;</span><br><span class="line">  s[t].fa:=s[p].fa;</span><br><span class="line">  <span class="keyword">if</span> s[p].fa&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].lc <span class="keyword">then</span> s[s[p].fa].lc:=t;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].rc <span class="keyword">then</span> s[s[p].fa].rc:=t;</span><br><span class="line">  s[t].lc:=p;</span><br><span class="line">  s[p].fa:=t;</span><br><span class="line">  s[t].root:=s[p].root;</span><br><span class="line">  s[p].root:=false;</span><br><span class="line">  update(p);</span><br><span class="line">  update(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">r_rotate</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=s[t].fa;</span><br><span class="line">  s[p].lc:=s[t].rc;</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].rc].fa:=p;</span><br><span class="line">  s[t].fa:=s[p].fa;</span><br><span class="line">  <span class="keyword">if</span> s[p].fa&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].lc <span class="keyword">then</span> s[s[p].fa].lc:=t;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].rc <span class="keyword">then</span> s[s[p].fa].rc:=t;</span><br><span class="line">  s[t].rc:=p;</span><br><span class="line">  s[p].fa:=t;</span><br><span class="line">  s[t].root:=s[p].root;</span><br><span class="line">  s[p].root:=false;</span><br><span class="line">  update(p);</span><br><span class="line">  update(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">splay</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">while</span> <span class="keyword">not</span> s[t].root <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    pushdown(s[t].fa);</span><br><span class="line">    <span class="keyword">if</span> s[s[s[t].fa].lc].rev <span class="keyword">then</span> pushdown(s[s[t].fa].lc);</span><br><span class="line">    <span class="keyword">if</span> s[s[s[t].fa].rc].rev <span class="keyword">then</span> pushdown(s[s[t].fa].rc);</span><br><span class="line">    <span class="keyword">if</span> t=s[s[t].fa].lc <span class="keyword">then</span> r_rotate(t) <span class="keyword">else</span> l_rotate(t);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">access</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  splay(t);</span><br><span class="line">  update(t);</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].rc].root:=true;</span><br><span class="line">  s[t].rc:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> s[t].fa&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    p:=s[t].fa;</span><br><span class="line">    update(p);</span><br><span class="line">    splay(p);</span><br><span class="line">    <span class="keyword">if</span> s[p].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[p].rc].root:=true;</span><br><span class="line">    s[p].rc:=t;</span><br><span class="line">    s[t].root:=false;</span><br><span class="line">    l_rotate(t);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">evert</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  access(t);</span><br><span class="line">  s[t].rev:=true;</span><br><span class="line">  pushdown(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">change</span><span class="params">(t,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  access(t);</span><br><span class="line">  s[t].key:=d;</span><br><span class="line">  update(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qsum</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  evert(a);</span><br><span class="line">  access(b);</span><br><span class="line">  update(b);</span><br><span class="line">  <span class="keyword">exit</span>(s[b].sum);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qmax</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  evert(a);</span><br><span class="line">  access(b);</span><br><span class="line">  update(b);</span><br><span class="line">  <span class="keyword">exit</span>(s[b].max);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  s[<span class="number">0</span>].max:=-(maxlongint&gt;&gt;<span class="number">1</span>);</span><br><span class="line">  readln(n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> s[i].root:=true;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b);</span><br><span class="line">    link(a,b);</span><br><span class="line">    link(b,a);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  s[<span class="number">1</span>].fa:=<span class="number">0</span>;</span><br><span class="line">  dfs(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(s[i].key);</span><br><span class="line">  readln(q);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> q <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(ch);<span class="keyword">read</span>(ch);</span><br><span class="line">    <span class="keyword">case</span> ch <span class="keyword">of</span></span><br><span class="line">      <span class="string">'H'</span>:<span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">4</span> <span class="keyword">do</span> <span class="keyword">read</span>(c);</span><br><span class="line">        readln(a,b);</span><br><span class="line">        change(a,b);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      <span class="string">'M'</span>:<span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">read</span>(c);<span class="keyword">read</span>(c);</span><br><span class="line">        readln(a,b);</span><br><span class="line">        writeln(qmax(a,b));</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      <span class="string">'S'</span>:<span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">read</span>(c);<span class="keyword">read</span>(c);</span><br><span class="line">        readln(a,b);</span><br><span class="line">        writeln(qsum(a,b));</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>树链剖分&amp;动态树 模板题<br>]]>
    
    </summary>
    
      <category term="Link Cut Tree" scheme="http://platypuspro.github.io/tags/Link-Cut-Tree/"/>
    
      <category term="Tree Chain Split" scheme="http://platypuspro.github.io/tags/Tree-Chain-Split/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 1031]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-1031/"/>
    <id>http://platypuspro.github.io/posts/bzoj-1031/</id>
    <published>2015-04-26T09:58:21.000Z</published>
    <updated>2015-04-26T10:05:56.000Z</updated>
    <content type="html"><![CDATA[<p>后缀数组模板题<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1031" target="_blank" rel="external">传送门</a></p>
<p>直接把字符串复制一遍接在末尾，然后用裸的后缀数组处理完后按排名依次输出属于前一半的字符串</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1031;</span><br><span class="line"><span class="keyword">const</span> maxl=<span class="number">100000</span>;</span><br><span class="line"><span class="keyword">var</span> rank,sa,cnt,tsa,rank1,rank2:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2</span>*maxl]<span class="keyword">of</span> longint;</span><br><span class="line">    s:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">2</span>*maxl]<span class="keyword">of</span> char;</span><br><span class="line">    n,i,p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  n:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> <span class="keyword">not</span> eoln <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(n);</span><br><span class="line">    <span class="keyword">read</span>(s[n]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> s[n+i]:=s[i];</span><br><span class="line">  n:=n&lt;&lt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">255</span> <span class="keyword">do</span> cnt[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(cnt[ord(s[i])]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">255</span> <span class="keyword">do</span> inc(cnt[i],cnt[i-<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> rank[i]:=cnt[ord(s[i])];</span><br><span class="line">  p:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> p&lt;n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      rank1[i]:=rank[i];</span><br><span class="line">      <span class="keyword">if</span> i+p&lt;=n <span class="keyword">then</span> rank2[i]:=rank[i+p] <span class="keyword">else</span> rank2[i]:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span> cnt[i]:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(cnt[rank2[i]]);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(cnt[i],cnt[i-<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> i:=n <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      tsa[cnt[rank2[i]]]:=i;</span><br><span class="line">      dec(cnt[rank2[i]]);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span> cnt[i]:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(cnt[rank1[i]]);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(cnt[i],cnt[i-<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> i:=n <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      sa[cnt[rank1[tsa[i]]]]:=tsa[i];</span><br><span class="line">      dec(cnt[rank1[tsa[i]]]);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    rank[sa[<span class="number">1</span>]]:=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      rank[sa[i]]:=rank[sa[i-<span class="number">1</span>]];</span><br><span class="line">      <span class="keyword">if</span> (rank1[sa[i]]&lt;&gt;rank1[sa[i-<span class="number">1</span>]])<span class="keyword">or</span>(rank2[sa[i]]&lt;&gt;rank2[sa[i-<span class="number">1</span>]]) <span class="keyword">then</span> inc(rank[sa[i]]);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    p:=p&lt;&lt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> sa[i]&lt;=n&gt;&gt;<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">write</span>(s[sa[i]+n&gt;&gt;<span class="number">1</span>-<span class="number">1</span>]);</span><br><span class="line">  writeln;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>后缀数组模板题<br>]]>
    
    </summary>
    
      <category term="Suffix Array" scheme="http://platypuspro.github.io/tags/Suffix-Array/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 2186]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-2186/"/>
    <id>http://platypuspro.github.io/posts/bzoj-2186/</id>
    <published>2015-04-17T13:27:34.000Z</published>
    <updated>2015-04-17T13:51:27.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-cubes"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2186" target="_blank" rel="external">传送门</a></p>
<p>首先，<br>$\varphi(x)=x\times\frac{p-1}{p}(p\mid x且p为质数)$</p>
<p>也就是对于$x$的每个质因数$p$，去掉$[1,x]$中$p$的$x\times\frac{1}{p}$个倍数</p>
<p>那么题目求的就是$n!\times\frac{p-1}{p}(p\mid m!且p为质数)$</p>
<p>也就是$n!\times\frac{p-1}{p}(p\mid m且p为质数)$</p>
<p>$n!\times(p-1)\times p^{-1}(p\mid m且p为质数,p^{-1}为p的逆元)$</p>
<p>那么预处理阶乘并拿扩展欧几里得找逆元就行了</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2186;</span><br><span class="line"><span class="keyword">const</span> max=<span class="number">10000000</span>;</span><br><span class="line"><span class="keyword">var</span> sieve,pre,fac,inv:<span class="keyword">array</span>[<span class="number">0</span>..max]<span class="keyword">of</span> longint;</span><br><span class="line">    prime:<span class="keyword">array</span>[<span class="number">1</span>..max]<span class="keyword">of</span> boolean;</span><br><span class="line">    t,n,m,r,x,y,tot:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">exgcd</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    x:=<span class="number">1</span>;</span><br><span class="line">    y:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  exgcd(b,a <span class="keyword">mod</span> b);</span><br><span class="line">  t:=x;</span><br><span class="line">  x:=y;</span><br><span class="line">  y:=t-(a <span class="keyword">div</span> b)*y;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">init_sieve</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(prime,sizeof(prime),true);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> max <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> prime[i] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(tot);</span><br><span class="line">      sieve[tot]:=i;</span><br><span class="line">      exgcd(i,r);</span><br><span class="line">      inv[i]:=(x <span class="keyword">mod</span> r+r)<span class="keyword">mod</span> r;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> tot <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> i*sieve[j]&gt;max <span class="keyword">then</span> break;</span><br><span class="line">      prime[i*sieve[j]]:=false;</span><br><span class="line">      inv[i*sieve[j]]:=int64(inv[i])*int64(inv[sieve[j]]) <span class="keyword">mod</span> r;</span><br><span class="line">      <span class="keyword">if</span> i <span class="keyword">mod</span> sieve[j]=<span class="number">0</span> <span class="keyword">then</span> break;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">init</span>;</span></span><br><span class="line"><span class="keyword">var</span> i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fac[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> max <span class="keyword">do</span> fac[i]:=int64(fac[i-<span class="number">1</span>])*int64(i) <span class="keyword">mod</span> r;</span><br><span class="line">  init_sieve;</span><br><span class="line">  pre[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> max <span class="keyword">do</span> <span class="keyword">if</span> prime[i] <span class="keyword">then</span> pre[i]:=(int64(pre[i-<span class="number">1</span>])*int64(i-<span class="number">1</span>) <span class="keyword">mod</span> r)*int64(inv[i]) <span class="keyword">mod</span> r <span class="keyword">else</span> pre[i]:=pre[i-<span class="number">1</span>];</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(t,r);</span><br><span class="line">  init;</span><br><span class="line">  <span class="keyword">for</span> t:=<span class="number">1</span> <span class="keyword">to</span> t <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(n,m);</span><br><span class="line">    writeln(int64(fac[n])*int64(pre[m]) <span class="keyword">mod</span> r);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-cubes"></i><br>]]>
    
    </summary>
    
      <category term="Euler&#39;s Totient Function" scheme="http://platypuspro.github.io/tags/Euler-s-totient-function/"/>
    
      <category term="Math" scheme="http://platypuspro.github.io/tags/Math/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 1965]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-1965/"/>
    <id>http://platypuspro.github.io/posts/bzoj-1965/</id>
    <published>2015-04-17T13:27:01.000Z</published>
    <updated>2015-04-18T07:42:25.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-building-o"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1965" target="_blank" rel="external">传送门</a></p>
<p>观察发现每次洗牌后编号为$x$的牌会跑到$2\cdot x\ mod(n+1)$的位置上</p>
<p>那么洗牌$m$次后就会跑到$2^m\cdot x\ mod(n+1)$的位置上</p>
<p>设洗牌$m$次后跑到$1$号位的牌为$x$，则$2^m\cdot x\equiv 1(mod\ n+1)$</p>
<p>即为$2^m\cdot x+(n+1)\cdot y=1$</p>
<p>然后拿扩展欧几里得解出$x$后第$L$张就是$x\cdot L\ mod\ (n+1)$</p>
<p>注意$x$可能为负，要所以特判答案为负的情况</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1965;</span><br><span class="line"><span class="keyword">var</span> n,m,l,p,mo,x,y,g,ans:int64;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qp</span><span class="params">(x,k:int64)</span>:</span>int64;</span><br><span class="line"><span class="keyword">var</span> p:int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  qp:=<span class="number">1</span>;</span><br><span class="line">  p:=x;</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> k <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> qp:=(qp*p)<span class="keyword">mod</span> mo;</span><br><span class="line">    p:=(p*p)<span class="keyword">mod</span> mo;</span><br><span class="line">    k:=k&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">exgcd</span><span class="params">(a,b:int64)</span>:</span>int64;</span><br><span class="line"><span class="keyword">var</span> t,g:int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    x:=<span class="number">1</span>;</span><br><span class="line">    y:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">exit</span>(a);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  g:=exgcd(b,a <span class="keyword">mod</span> b);</span><br><span class="line">  t:=x;</span><br><span class="line">  x:=y;</span><br><span class="line">  y:=t-(a <span class="keyword">div</span> b)*y;</span><br><span class="line">  <span class="keyword">exit</span>(g);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m,l);</span><br><span class="line">  mo:=n+<span class="number">1</span>;</span><br><span class="line">  p:=qp(<span class="number">2</span>,m);</span><br><span class="line">  g:=exgcd(p,mo);</span><br><span class="line">  ans:=(x*l <span class="keyword">mod</span> mo+mo)<span class="keyword">mod</span> mo;</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-building-o"></i><br>]]>
    
    </summary>
    
      <category term="Extended Euclidean" scheme="http://platypuspro.github.io/tags/Extended-Euclidean/"/>
    
      <category term="Math" scheme="http://platypuspro.github.io/tags/Math/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3571]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3571/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3571/</id>
    <published>2015-04-14T11:44:24.000Z</published>
    <updated>2015-04-14T13:42:10.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-anchor"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3571" target="_blank" rel="external">传送门</a></p>
<p>首先，$N$个配$N$个还带权值，那就认准KM了</p>
<p>这道题的思路和最小乘积生成树的思路差不多，<del>可惜BZOJ上一道裸最小乘积生成树被权限了…</del></p>
<p>考虑把每一种方案抽象成一个点$(\sum A,\sum B)$，然后把所有点扔到一个坐标系里面，然后答案就是使得一个反比例函数$x\cdot y=k$的$k$最小的点</p>
<p>枚举每个点和暴力有啥区别…那么考虑把范围缩小一下</p>
<p>拿KM找出$\sum A$最小的点和$\sum B$最小的点（带权最小匹配就把边权取反算带权最大匹配），最优解一定优于这两个点（或是两个点之一），也就是在这两个点连成的线段下方</p>
<p>设最优解为$c$，$\sum A$最小的点为$a$,$\sum B$最小的点为$b$</p>
<p>那么题目就成了求$S\Delta abc$最大的点$c$（它越大说明$c$离$ab$越远，越靠近原点，答案越小），而$c$肯定在凸包上，所以可以拿分治搞一搞</p>
<h4 id="$$S\Delta_abc=\frac{\vec{ab}\times\vec{ac}}{2}$$">$$S\Delta abc=\frac{\vec{ab}\times\vec{ac}}{2}$$</h4><p>展开再合起来能得到 <del>（向量箭头不一样高差评）</del></p>
<h4 id="$$S\Delta_abc=\frac{\vec{ab}\times\vec{c}+\vec{a}\times\vec{b}}{2}$$">$$S\Delta abc=\frac{\vec{ab}\times\vec{c}+\vec{a}\times\vec{b}}{2}$$</h4><p>后面那坨已知，扔掉，即求$\vec{ab}\times\vec{c}$的最大值</p>
<p>然后每次分治时拿KM算一算最优解就可以啦~</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3571;</span><br><span class="line"><span class="keyword">const</span> inf=maxlongint&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">type</span> point=<span class="keyword">record</span> x,y:longint; <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> lx,ly,slack,pair:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">70</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    vx,vy:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">70</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    w,a,b:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">70</span>,<span class="number">1</span>..<span class="number">70</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    t,n,i,j:longint;</span><br><span class="line">    pa,pb:point;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(x:longint)</span>:</span>boolean;</span><br><span class="line"><span class="keyword">var</span> t,y:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  vx[x]:=true;</span><br><span class="line">  <span class="keyword">for</span> y:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> vy[y] <span class="keyword">then</span> continue;</span><br><span class="line">    t:=lx[x]+ly[y]-w[x,y];</span><br><span class="line">    <span class="keyword">if</span> t=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      vy[y]:=true;</span><br><span class="line">      <span class="keyword">if</span> (pair[y]=<span class="number">0</span>)<span class="keyword">or</span>(find(pair[y])) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        pair[y]:=x;</span><br><span class="line">        <span class="keyword">exit</span>(true);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> t&lt;slack[y] <span class="keyword">then</span> slack[y]:=t;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(false);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">KM</span>:</span>point;</span><br><span class="line"><span class="keyword">var</span> i,j,d:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(pair,sizeof(pair),<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> lx[i]:=-inf;</span><br><span class="line">  fillchar(ly,sizeof(ly),<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> w[i,j]&gt;lx[i] <span class="keyword">then</span> lx[i]:=w[i,j];</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    fillchar(slack,sizeof(slack),$<span class="number">3</span>f);</span><br><span class="line">    <span class="keyword">repeat</span></span><br><span class="line">      fillchar(vx,sizeof(vx),false);</span><br><span class="line">      fillchar(vy,sizeof(vy),false);</span><br><span class="line">      <span class="keyword">if</span> find(i) <span class="keyword">then</span> break;</span><br><span class="line">      d:=inf;</span><br><span class="line">      <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> (<span class="keyword">not</span> vy[j])<span class="keyword">and</span>(slack[j]&lt;d) <span class="keyword">then</span> d:=slack[j];</span><br><span class="line">      <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> vx[j] <span class="keyword">then</span> dec(lx[j],d);</span><br><span class="line">      <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> vy[j] <span class="keyword">then</span> inc(ly[j],d) <span class="keyword">else</span> dec(slack[j],d);</span><br><span class="line">    <span class="keyword">until</span> false;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  KM.x:=<span class="number">0</span>;</span><br><span class="line">  KM.y:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(KM.x,a[pair[i],i]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(KM.y,b[pair[i],i]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solve</span><span class="params">(l,r:point)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> t:point;</span><br><span class="line">    i,j:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> w[i,j]:=a[i,j]*(r.y-l.y)-b[i,j]*(r.x-l.x);</span><br><span class="line">  t:=KM;</span><br><span class="line">  <span class="keyword">if</span> ((t.x=l.x)<span class="keyword">and</span>(t.y=l.y))<span class="keyword">or</span>((t.x=r.x)<span class="keyword">and</span>(t.y=r.y)) <span class="keyword">then</span> <span class="keyword">exit</span>(min(l.x*l.y,r.x*r.y));</span><br><span class="line">  <span class="keyword">exit</span>(min(solve(l,t),solve(t,r)));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(t);</span><br><span class="line">  <span class="keyword">for</span> t:=<span class="number">1</span> <span class="keyword">to</span> t <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(n);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i,j]);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(b[i,j]);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> w[i,j]:=-a[i,j];</span><br><span class="line">    pa:=KM;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> w[i,j]:=-b[i,j];</span><br><span class="line">    pb:=KM;</span><br><span class="line">    writeln(solve(pa,pb));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-anchor"></i><br>]]>
    
    </summary>
    
      <category term="Divide and Conquer" scheme="http://platypuspro.github.io/tags/Divide-and-Conquer/"/>
    
      <category term="Kuhn-Munkres" scheme="http://platypuspro.github.io/tags/Kuhn-Munkres/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 2152]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-2152/"/>
    <id>http://platypuspro.github.io/posts/bzoj-2152/</id>
    <published>2015-04-13T13:44:40.000Z</published>
    <updated>2015-04-13T13:59:16.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-tree"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2152" target="_blank" rel="external">传送门</a></p>
<p>头一次搞点分治…</p>
<p>点分治大概是这个姿势：</p>
<ul>
<li>找到整棵树的重心，然后按照题目要求搞这个重心周围的子树</li>
<li>对每一棵子树再进行上面这样的操作</li>
</ul>
<p>一般的点分治似乎还要考虑重复计算的部分，要用容斥原理算重复的情况，但这道题不用…以后写了再说吧…</p>
<p>这道题只用对于每个重心，算出这个重心到它子树中的所有点每条路径权值和$mod\ 3=0,1,2$的个数，然后分情况计算一下</p>
<p>最后将上面那步计算的答案$\times 2+n$（每条路径左右端点调换+单个点的情况）除$n^2$就是答案</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2152;</span><br><span class="line"><span class="keyword">var</span> cnt:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">20000</span>,<span class="number">0</span>..<span class="number">2</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    v:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">20000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    lst,size:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">20000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">40000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre,w:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,i,a,b,w,tot,root,max,ans,up,dn,g:longint;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gcd</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(gcd(b,a <span class="keyword">mod</span> b));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b,w:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line">  l[tot].w:=w;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">find_root</span><span class="params">(t,fa:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> cnt,k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  cnt:=<span class="number">0</span>;</span><br><span class="line">  size[t]:=<span class="number">1</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (l[k].ed&lt;&gt;fa)<span class="keyword">and</span>(<span class="keyword">not</span> v[l[k].ed]) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      find_root(l[k].ed,t);</span><br><span class="line">      inc(size[t],size[l[k].ed]);</span><br><span class="line">      <span class="keyword">if</span> size[l[k].ed]&gt;cnt <span class="keyword">then</span> cnt:=size[l[k].ed];</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> tot-cnt&gt;cnt <span class="keyword">then</span> cnt:=tot-cnt;</span><br><span class="line">  <span class="keyword">if</span> cnt&lt;max <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    max:=cnt;</span><br><span class="line">    root:=t;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t,fa,now,rem:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(cnt[now,rem]);</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (l[k].ed&lt;&gt;fa)<span class="keyword">and</span>(<span class="keyword">not</span> v[l[k].ed]) <span class="keyword">then</span> dfs(l[k].ed,t,now,(rem+l[k].w)<span class="keyword">mod</span> <span class="number">3</span>);</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">find</span><span class="params">(rt:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line">    c:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2</span>]<span class="keyword">of</span> longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  v[rt]:=true;</span><br><span class="line">  k:=lst[rt];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> v[l[k].ed] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      c:=cnt[rt];</span><br><span class="line">      dfs(l[k].ed,rt,rt,l[k].w);</span><br><span class="line">      inc(ans,(c[<span class="number">0</span>]+<span class="number">1</span>)*(cnt[rt,<span class="number">0</span>]-c[<span class="number">0</span>])+c[<span class="number">1</span>]*(cnt[rt,<span class="number">2</span>]-c[<span class="number">2</span>])+c[<span class="number">2</span>]*(cnt[rt,<span class="number">1</span>]-c[<span class="number">1</span>]));</span><br><span class="line">      tot:=size[l[k].ed];</span><br><span class="line">      max:=maxlongint;</span><br><span class="line">      find_root(l[k].ed,<span class="number">0</span>);</span><br><span class="line">      find(root);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b,w);</span><br><span class="line">    link(a,b,w <span class="keyword">mod</span> <span class="number">3</span>);</span><br><span class="line">    link(b,a,w <span class="keyword">mod</span> <span class="number">3</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  tot:=n;</span><br><span class="line">  max:=maxlongint;</span><br><span class="line">  fillchar(v,sizeof(v),false);</span><br><span class="line">  find_root(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  find(root);</span><br><span class="line">  up:=ans*<span class="number">2</span>+n;</span><br><span class="line">  dn:=sqr(n);</span><br><span class="line">  g:=gcd(up,dn);</span><br><span class="line">  writeln(up <span class="keyword">div</span> g,<span class="string">'/'</span>,dn <span class="keyword">div</span> g);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-tree"></i><br>]]>
    
    </summary>
    
      <category term="Divide and Conquer" scheme="http://platypuspro.github.io/tags/Divide-and-Conquer/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3932]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3932/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3932/</id>
    <published>2015-04-11T13:36:02.000Z</published>
    <updated>2015-04-29T00:31:17.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>还是太naive…</p>
</blockquote>
<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3932" target="_blank" rel="external">传送门</a></p>
<h3 id="题目描述">题目描述</h3><p>最近实验室正在为其管理的超级计算机编制一套任务管理系统，而你被安排完成其中的查询部分。<br>超级计算机中的任务用三元组$(S_i,E_i,P_i)$描述，$(S_i,E_i,P_i)$表示任务从第$S_i$秒开始，在第$E_i$秒后结束（第$S_i$秒和$E_i$秒任务也在运行），其优先级为$P_i$。同一时间可能有多个任务同时执行，它们的优先级可能相同，也可能不同。调度系统会经常向查询系统询问，第$X_i$秒正在运行的任务中，优先级最小的$K_i$个任务（即将任务按照优先级从小到大排序后取前$K_i$个）的优先级之和是多少。特别的，如果$K_i$大于第$X_i$秒正在运行的任务总数，则直接回答第$X_i$秒正在运行的任务优先级之和。上述所有参数均为整数，时间的范围在$1$到$n$之间（包含$1$和$n$）。</p>
<h3 id="输入格式">输入格式</h3><p>输入文件第一行包含两个空格分开的正整数$m$和$n$，分别表示任务总数和时间范围。<br>接下来$m$行，每行包含三个空格分开的正整数$S_i,E_i,P_i(S_i\leq E_i)$，描述一个任务。<br>接下来$n$行，每行包含四个空格分开的整数$X_i,A_i,B_i和C_i$，描述一次查询。查询的参数$K_i$需要由公式$K_i=1+(A_i\cdot Pre+B_i)mod\ C_i$计算得到。其中$Pre$表示上一次查询的结果，对于第一次查询，$Pre=1$。</p>
<h3 id="输出格式">输出格式</h3><p>输出共$n$行，每行一个整数，表示查询结果。</p>
<h3 id="输入样例">输入样例</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">43</span><br><span class="line">126</span><br><span class="line">233</span><br><span class="line">132</span><br><span class="line">334</span><br><span class="line">3132</span><br><span class="line">1134</span><br><span class="line">2243</span><br></pre></td></tr></table></figure>
<h3 id="输出样例">输出样例</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">8</span><br><span class="line">11</span><br></pre></td></tr></table></figure>
<h3 id="样例解释">样例解释</h3><p>$K_1=(1\times 1+3)mod\ 2+1=1$<br>$K_2=(1\times 2+3)mod\ 4+1=2$<br>$K_3=(2\times 8+4)mod\ 3+1=3$</p>
<h3 id="数据范围">数据范围</h3><p>对于$50%$的数据，$A_i=0$<br>对于$100%$的数据，$1\leq m,n,S_i,E_i,C_i\leq 100000,0\leq A_i,B_i\leq 100000,1\leq P_i\leq 10000000$,$X_i$为$1$到$n$的一个排列</p>
<p>主席树</p>
<p>题目说每次从$S_i$到$E_i$多了一个优先级，但是主席树怎么知道啥时候要多啥时候要少，所以对于每个任务，拆成从$S_i$到最后多一个优先级，从$E_i+1$到最后少一个优先级</p>
<p>然后把所有拆过的操作按照开始时间递增排序，而每个任务会对它的开始时间及之后的$root$数组产生影响，所以把每个任务依次插到主席树里就行了</p>
<blockquote>
<p>我来扯一扯我的坎坷经历…</p>
<p>刚开始写得挺开心…写呀写呀写完了…样例一遍过，然后往BZOJ上一交…卧槽0ms TLE 你™逗我？</p>
<p>然后以为BZOJ评测机抽了，又来了三发…还是一样的结果…无奈求助Orz lzy，得知是空间开得太大了把评测机吓尿了</p>
<p>然后求助Orz ZYK查了查哪里有问题，然后被科普了线段树中不记录左右端点的写法，于是乎改了改又交上去卧槽占了600M…</p>
<p>继续求助ZYK大爷…然后发现我开了一棵25000000大小的线段树……………………原谅我too yong too simple不会算内存…</p>
<p>这个是因为我一直以为主席树需要在$root[0]$建出来一整棵树…于是就开了这么大然后建啊建啊…但这道题并不需要$root[0]$的信息…所以就不用建了…</p>
<p>然后又改啊改啊 <del>其实没改多久</del> 然后交了上去…发现才用了100多M…QAQ</p>
</blockquote>
<p><i class="fa fa-code fa-2x"></i></p>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3932;</span><br><span class="line"><span class="keyword">type</span> op=<span class="keyword">record</span> st,p:longint; flag:boolean; <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">4900000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,size:longint; sum:int64; <span class="keyword">end</span>;</span><br><span class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200000</span>]<span class="keyword">of</span> op;</span><br><span class="line">    n,m,x,a,b,c,k,i,j,maxp,tot:longint;</span><br><span class="line">    root:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    ans:int64;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line">    mid,p:op;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=q[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> q[i].st&lt;mid.st <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> q[j].st&gt;mid.st <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=q[i];</span><br><span class="line">      q[i]:=q[j];</span><br><span class="line">      q[j]:=p;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(<span class="keyword">var</span> t:longint;base,p,l,r:longint;flag:boolean)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  s[t]:=s[base];</span><br><span class="line">  <span class="keyword">if</span> flag <span class="keyword">then</span> inc(s[t].size) <span class="keyword">else</span> dec(s[t].size);</span><br><span class="line">  <span class="keyword">if</span> flag <span class="keyword">then</span> inc(s[t].sum,p) <span class="keyword">else</span> dec(s[t].sum,p);</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> p&lt;=mid <span class="keyword">then</span> insert(s[t].lc,s[base].lc,p,l,mid,flag) <span class="keyword">else</span> insert(s[t].rc,s[base].rc,p,mid+<span class="number">1</span>,r,flag);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(t,l,r,p:longint)</span>:</span>int64;</span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>(l*min(s[t].size,p));</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[t].lc].size <span class="keyword">then</span> <span class="keyword">exit</span>(s[s[t].lc].sum);</span><br><span class="line">  <span class="keyword">if</span> p&lt;=s[s[t].lc].size <span class="keyword">then</span> <span class="keyword">exit</span>(query(s[t].lc,l,mid,p)) <span class="keyword">else</span> <span class="keyword">exit</span>(s[s[t].lc].sum+query(s[t].rc,mid+<span class="number">1</span>,r,p-s[s[t].lc].size));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(m,n);</span><br><span class="line">  maxp:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b,c);</span><br><span class="line">    q[i&lt;&lt;<span class="number">1</span>-<span class="number">1</span>].st:=a;</span><br><span class="line">    q[i&lt;&lt;<span class="number">1</span>-<span class="number">1</span>].p:=c;</span><br><span class="line">    q[i&lt;&lt;<span class="number">1</span>-<span class="number">1</span>].flag:=true;</span><br><span class="line">    q[i&lt;&lt;<span class="number">1</span>].st:=b+<span class="number">1</span>;</span><br><span class="line">    q[i&lt;&lt;<span class="number">1</span>].p:=c;</span><br><span class="line">    q[i&lt;&lt;<span class="number">1</span>].flag:=false;</span><br><span class="line">    <span class="keyword">if</span> c&gt;maxp <span class="keyword">then</span> maxp:=c;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  qsort(<span class="number">1</span>,m&lt;&lt;<span class="number">1</span>);</span><br><span class="line">  tot:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> q[<span class="number">1</span>].st <span class="keyword">do</span> root[i]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m&lt;&lt;<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    insert(root[q[i].st],root[q[i].st],q[i].p,<span class="number">1</span>,maxp,q[i].flag);</span><br><span class="line">    <span class="keyword">if</span> i&lt;m&lt;&lt;<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">for</span> j:=q[i].st <span class="keyword">to</span> q[i+<span class="number">1</span>].st <span class="keyword">do</span> root[j]:=root[q[i].st];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  ans:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(x,a,b,c);</span><br><span class="line">    k:=<span class="number">1</span>+(a*ans+b)<span class="keyword">mod</span> c;</span><br><span class="line">    ans:=query(root[x],<span class="number">1</span>,maxp,k);</span><br><span class="line">    writeln(ans);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>还是太naive…</p>
</blockquote>]]>
    
    </summary>
    
      <category term="Fotile Tree" scheme="http://platypuspro.github.io/tags/Fotile-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
</feed>