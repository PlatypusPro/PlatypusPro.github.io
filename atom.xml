<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Platypus Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://platypuspro.github.io/"/>
  <updated>2015-04-29T00:31:07.000Z</updated>
  <id>http://platypuspro.github.io/</id>
  
  <author>
    <name><![CDATA[Platypus]]></name>
    <email><![CDATA[1293705262@qq.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[POJ 2104]]></title>
    <link href="http://platypuspro.github.io/posts/poj-2104/"/>
    <id>http://platypuspro.github.io/posts/poj-2104/</id>
    <published>2015-04-27T13:31:52.000Z</published>
    <updated>2015-04-29T00:31:07.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-sliders"></i><br><a id="more"></a><br><a href="http://poj.org/problem?id=2104" target="_blank" rel="external">传送门</a></p>
<blockquote>
<p><a href="#WholeBD">整体二分</a><br><a href="#FTree">主席树</a></p>
</blockquote>
<!--WholeBD-->
<h3 id="整体二分">整体二分</h3><p>首先把序列排成有序的</p>
<p>然后二分答案，把$\leq mid$的数扔到树状数组里，看每个询问的区间里的数够不够$k$个，若够就扔到左边，不够就扔到右边</p>
<p>继续递归处理左右两边，二分到底时就可以得出询问的答案</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> poj_2104;</span><br><span class="line"><span class="keyword">type</span> rec=<span class="keyword">record</span> k,p:longint; <span class="keyword">end</span>;</span><br><span class="line">     ask_op=<span class="keyword">record</span> l,r,k,id,cur:longint; <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> bit:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    q,q1,q2:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">5000</span>]<span class="keyword">of</span> ask_op;</span><br><span class="line">    ans:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">5000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    a:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> rec;</span><br><span class="line">    n,m,i:longint;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">c</span><span class="params">(x:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">exit</span>(x <span class="keyword">and</span> -x);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">plus</span><span class="params">(p,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">while</span> p&lt;=n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(bit[p],d);</span><br><span class="line">    inc(p,c(p));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(p:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  query:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> p&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(query,bit[p]);</span><br><span class="line">    dec(p,c(p));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line">    mid,p:rec;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=a[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> a[i].k&lt;mid.k <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> a[j].k&gt;mid.k <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=a[i];</span><br><span class="line">      a[i]:=a[j];</span><br><span class="line">      a[j]:=p;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">solve</span><span class="params">(hd,tl,l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,mid,l1,l2,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> hd&gt;tl <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=hd <span class="keyword">to</span> tl <span class="keyword">do</span> ans[q[i].id]:=l;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  l1:=<span class="number">0</span>;</span><br><span class="line">  l2:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=l <span class="keyword">to</span> mid <span class="keyword">do</span> plus(a[i].p,<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=hd <span class="keyword">to</span> tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    t:=query(q[i].r)-query(q[i].l-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> q[i].cur+t&gt;=q[i].k <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(l1);</span><br><span class="line">      q1[l1]:=q[i];</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(q[i].cur,t);</span><br><span class="line">      inc(l2);</span><br><span class="line">      q2[l2]:=q[i];</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=l <span class="keyword">to</span> mid <span class="keyword">do</span> plus(a[i].p,-<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> l1 <span class="keyword">do</span> q[hd+i-<span class="number">1</span>]:=q1[i];</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> l2 <span class="keyword">do</span> q[hd+l1+i-<span class="number">1</span>]:=q2[i];</span><br><span class="line">  solve(hd,hd+l1-<span class="number">1</span>,l,mid);</span><br><span class="line">  solve(hd+l1,tl,mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(a[i].k);</span><br><span class="line">    a[i].p:=i;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  qsort(<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">with</span> q[i] <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(l,r,k);</span><br><span class="line">    id:=i;</span><br><span class="line">    cur:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  solve(<span class="number">1</span>,m,<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> writeln(a[ans[i]].k);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<!--FTree-->
<h3 id="主席树">主席树</h3><p>这个是裸的…就不用讲了吧…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> poj_2104;</span><br><span class="line"><span class="keyword">type</span> rec=<span class="keyword">record</span> k,p:longint; <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2000000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,l,r,cnt:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,l,r,tot,t:longint;</span><br><span class="line">    a:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> rec;</span><br><span class="line">    k,rt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span><span class="params">(<span class="keyword">var</span> t:longint;l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  s[t].l:=l;</span><br><span class="line">  s[t].r:=r;</span><br><span class="line">  s[t].cnt:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  build(s[t].lc,l,mid);</span><br><span class="line">  build(s[t].rc,mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line">    mid,p:rec;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=a[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> a[i].k&lt;mid.k <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> a[j].k&gt;mid.k <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=a[i];</span><br><span class="line">      a[i]:=a[j];</span><br><span class="line">      a[j]:=p;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(<span class="keyword">var</span> t:longint;p:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  s[tot]:=s[t];</span><br><span class="line">  t:=tot;</span><br><span class="line">  inc(s[t].cnt);</span><br><span class="line">  <span class="keyword">if</span> s[t].l=s[t].r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(s[t].l+s[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> p&lt;=mid <span class="keyword">then</span> modify(s[t].lc,p) <span class="keyword">else</span> modify(s[t].rc,p);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(l,r,t:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[l].l=s[l].r <span class="keyword">then</span> <span class="keyword">exit</span>(s[l].l);</span><br><span class="line">  k:=s[s[r].lc].cnt-s[s[l].lc].cnt;</span><br><span class="line">  <span class="keyword">if</span> t&lt;=k <span class="keyword">then</span> <span class="keyword">exit</span>(query(s[l].lc,s[r].lc,t)) <span class="keyword">else</span> <span class="keyword">exit</span>(query(s[l].rc,s[r].rc,t-k));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(a[i].k);</span><br><span class="line">    a[i].p:=i;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  qsort(<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> k[a[i].p]:=i;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  fillchar(s,sizeof(s),<span class="number">0</span>);</span><br><span class="line">  build(rt[<span class="number">0</span>],<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    rt[i]:=rt[i-<span class="number">1</span>];</span><br><span class="line">    modify(rt[i],k[i]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(l,r,t);</span><br><span class="line">    writeln(a[query(rt[l-<span class="number">1</span>],rt[r],t)].k);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-sliders"></i><br>]]>
    
    </summary>
    
      <category term="Fotile Tree" scheme="http://platypuspro.github.io/tags/Fotile-Tree/"/>
    
      <category term="Whole Binary-Divide" scheme="http://platypuspro.github.io/tags/Whole-Binary-Divide/"/>
    
      <category term="POJ" scheme="http://platypuspro.github.io/categories/POJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4008]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-4008/"/>
    <id>http://platypuspro.github.io/posts/bzoj-4008/</id>
    <published>2015-04-26T09:59:06.000Z</published>
    <updated>2015-04-28T23:50:41.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-send"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4008" target="_blank" rel="external">传送门</a></p>
<p>题目意思大概就是在$n$张卡牌中挑$1~r$张，每张只能挑一次，求选出的卡牌的期望总伤害</p>
<p>设$F[i,j]$为选至第$i$张，还能选$j$次的期望伤害值</p>
<p>每张牌有选与不选两种情况，所以</p>
<h4 id="$$F_{i,j}=F_{i-1,j}\cdot(1-p_i)^j+F_{i-1,j+1}\cdot(1-(1-p_i)^{j+1})$$">$$F_{i,j}=F_{i-1,j}\cdot(1-p_i)^j+F_{i-1,j+1}\cdot(1-(1-p_i)^{j+1})$$</h4><p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4008;</span><br><span class="line"><span class="keyword">var</span> g,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">221</span>,<span class="number">0</span>..<span class="number">133</span>]<span class="keyword">of</span> extended;</span><br><span class="line">    t,n,r,i:longint;</span><br><span class="line">    p:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">220</span>]<span class="keyword">of</span> extended;</span><br><span class="line">    d:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">220</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    ans:extended;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">calc</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line">    a,b:extended;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> r <span class="keyword">do</span> g[i,j]:=g[i,j-<span class="number">1</span>]*(<span class="number">1</span>-p[i]);</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  fillchar(f,sizeof(f),<span class="number">0</span>);</span><br><span class="line">  f[<span class="number">0</span>,r]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> r <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    a:=f[i-<span class="number">1</span>,j]*g[i,j];</span><br><span class="line">    b:=f[i-<span class="number">1</span>,j+<span class="number">1</span>]*(<span class="number">1</span>-g[i,j+<span class="number">1</span>]);</span><br><span class="line">    f[i,j]:=a+b;</span><br><span class="line">    ans:=ans+b*d[i];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(t);</span><br><span class="line">  fillchar(g,sizeof(g),<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">220</span> <span class="keyword">do</span> g[i,<span class="number">0</span>]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> t:=<span class="number">1</span> <span class="keyword">to</span> t <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(n,r);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> readln(p[i],d[i]);</span><br><span class="line">    calc;</span><br><span class="line">    writeln(ans:<span class="number">0</span>:<span class="number">10</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-send"></i><br>]]>
    
    </summary>
    
      <category term="Dynamic Programming" scheme="http://platypuspro.github.io/tags/Dynamic-Programming/"/>
    
      <category term="Expected Value" scheme="http://platypuspro.github.io/tags/Expected-Value/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 2150]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-2150/"/>
    <id>http://platypuspro.github.io/posts/bzoj-2150/</id>
    <published>2015-04-26T09:58:59.000Z</published>
    <updated>2015-04-26T11:42:57.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-gavel"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2150" target="_blank" rel="external">传送门</a></p>
<p>$最小路径覆盖=\mid P \mid - 最大匹配$<br><del>为啥这个“径”是繁体…</del></p>
<blockquote>
<p><a href="#Hungary">二分图最大匹配</a><br><a href="#Dinic">网络流</a></p>
</blockquote>
<p>其实两个方法差不多，只是建的图有点区别</p>
<p>都是如果能走就向下连边，然后直接求最大匹配</p>
<p>但是这道题的${\rm Hungary}$真的好快啊QAQ</p>
<!--Hungary-->
<h3 id="Hungary">Hungary</h3><p>这个建了个二分图…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2150;</span><br><span class="line"><span class="keyword">var</span> num:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">50</span>,<span class="number">1</span>..<span class="number">50</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    pair,lst:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">5000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    v:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">5000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">10000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,m,r,c,i,j,cnt,tot,ans:longint;</span><br><span class="line">    ch:char;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(x,y:longint)</span>:</span>boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">exit</span>((x&gt;<span class="number">0</span>)<span class="keyword">and</span>(x&lt;=m)<span class="keyword">and</span>(y&gt;<span class="number">0</span>)<span class="keyword">and</span>(y&lt;=n)<span class="keyword">and</span>(num[x,y]&lt;&gt;<span class="number">0</span>));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hungary</span><span class="params">(x:longint)</span>:</span>boolean;</span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  k:=lst[x];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> v[l[k].ed] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      v[l[k].ed]:=true;</span><br><span class="line">      <span class="keyword">if</span> (pair[l[k].ed]=<span class="number">0</span>)<span class="keyword">or</span>(hungary(pair[l[k].ed])) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        pair[l[k].ed]:=x;</span><br><span class="line">        <span class="keyword">exit</span>(true);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(false);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(m,n,r,c);</span><br><span class="line">  cnt:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">read</span>(ch);</span><br><span class="line">      <span class="keyword">if</span> ch=<span class="string">'.'</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        inc(cnt);</span><br><span class="line">        num[i,j]:=cnt;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    readln;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> num[i,j]=<span class="number">0</span> <span class="keyword">then</span> continue;</span><br><span class="line">    <span class="keyword">if</span> check(i+r,j-c) <span class="keyword">then</span> link(num[i,j],cnt+num[i+r,j-c]);</span><br><span class="line">    <span class="keyword">if</span> check(i+r,j+c) <span class="keyword">then</span> link(num[i,j],cnt+num[i+r,j+c]);</span><br><span class="line">    <span class="keyword">if</span> check(i+c,j-r) <span class="keyword">then</span> link(num[i,j],cnt+num[i+c,j-r]);</span><br><span class="line">    <span class="keyword">if</span> check(i+c,j+r) <span class="keyword">then</span> link(num[i,j],cnt+num[i+c,j+r]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> cnt <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    fillchar(v,sizeof(v),false);</span><br><span class="line">    <span class="keyword">if</span> hungary(i) <span class="keyword">then</span> inc(ans);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(cnt-ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<!--Dinic-->
<h3 id="Dinic">Dinic</h3><p>这个是一个矩阵图…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2150;</span><br><span class="line"><span class="keyword">const</span> inf=maxlongint&gt;&gt;<span class="number">1</span>;</span><br><span class="line">      qs=<span class="number">100000</span>;</span><br><span class="line"><span class="keyword">var</span> d,lst,que:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    v:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10010</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">5000000</span>]<span class="keyword">of</span> <span class="keyword">record</span> f,ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..qs]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,r,c,i,j,ss,tt,hd,tl,maxf,tot,cnt,len:longint;</span><br><span class="line">    ch:char;</span><br><span class="line">    pd:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100</span>,<span class="number">0</span>..<span class="number">100</span>]<span class="keyword">of</span> boolean;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">ad</span><span class="params">(a,b,f:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line">  l[tot].f:=f;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(x,y,a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (a&gt;m)<span class="keyword">or</span>(b&lt;<span class="number">1</span>)<span class="keyword">or</span>(b&gt;n)<span class="keyword">or</span>(<span class="keyword">not</span> pd[a,b]) <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  ad((x-<span class="number">1</span>)*n+y+m*n,(a-<span class="number">1</span>)*n+b,<span class="number">1</span>);</span><br><span class="line">  ad((a-<span class="number">1</span>)*n+b,(x-<span class="number">1</span>)*n+y+m*n,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">spfa</span>:</span>boolean;</span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(v,sizeof(v),false);</span><br><span class="line">  fillchar(d,sizeof(d),$<span class="number">7</span>f);</span><br><span class="line">  hd:=<span class="number">0</span>;</span><br><span class="line">  tl:=<span class="number">1</span>;</span><br><span class="line">  q[<span class="number">1</span>]:=ss;</span><br><span class="line">  d[ss]:=<span class="number">0</span>;</span><br><span class="line">  v[ss]:=true;</span><br><span class="line">  <span class="keyword">while</span> hd&lt;&gt;tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(hd);</span><br><span class="line">    <span class="keyword">if</span> hd&gt;qs <span class="keyword">then</span> hd:=<span class="number">1</span>;</span><br><span class="line">    k:=lst[q[hd]];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> (l[k].f&gt;<span class="number">0</span>)<span class="keyword">and</span>(d[q[hd]]+<span class="number">1</span>&lt;d[l[k].ed]) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        d[l[k].ed]:=d[q[hd]]+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> v[l[k].ed] <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          inc(tl);</span><br><span class="line">          <span class="keyword">if</span> tl&gt;qs <span class="keyword">then</span> tl:=<span class="number">1</span>;</span><br><span class="line">          q[tl]:=l[k].ed;</span><br><span class="line">          v[l[k].ed]:=true;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    v[q[hd]]:=false;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  fillchar(v,sizeof(v),false);</span><br><span class="line">  <span class="keyword">exit</span>(d[tt]&lt;inf);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">expand</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,f:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  f:=inf;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> <span class="keyword">if</span> l[que[i]].f&lt;f <span class="keyword">then</span> f:=l[que[i]].f;</span><br><span class="line">  inc(maxf,f);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    dec(l[que[i]].f,f);</span><br><span class="line">    inc(l[que[i] xor <span class="number">1</span>].f,f);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  v[t]:=true;</span><br><span class="line">  <span class="keyword">if</span> t=tt <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    expand;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (l[k].f&gt;<span class="number">0</span>)<span class="keyword">and</span>(d[l[k].ed]=d[t]+<span class="number">1</span>)<span class="keyword">and</span>(<span class="keyword">not</span> v[l[k].ed]) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(len);</span><br><span class="line">      que[len]:=k;</span><br><span class="line">      dfs(l[k].ed);</span><br><span class="line">      dec(len);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(m,n,r,c);</span><br><span class="line">  ss:=<span class="number">2</span>*m*n+<span class="number">1</span>;</span><br><span class="line">  tt:=<span class="number">2</span>*m*n+<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">read</span>(ch);</span><br><span class="line">      pd[i,j]:=(ch=<span class="string">'.'</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    readln;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  cnt:=<span class="number">0</span>;</span><br><span class="line">  tot:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> pd[i,j] <span class="keyword">then</span> continue;</span><br><span class="line">    inc(cnt);</span><br><span class="line">    link(i,j,i+r,j-c);</span><br><span class="line">    link(i,j,i+r,j+c);</span><br><span class="line">    ad((i-<span class="number">1</span>)*n+j,tt,<span class="number">1</span>);</span><br><span class="line">    ad(tt,(i-<span class="number">1</span>)*n+j,<span class="number">0</span>);</span><br><span class="line">    ad(ss,(i-<span class="number">1</span>)*n+j+m*n,<span class="number">1</span>);</span><br><span class="line">    ad((i-<span class="number">1</span>)*n+j+m*n,ss,<span class="number">0</span>);</span><br><span class="line">    link(i,j,i+c,j-r);</span><br><span class="line">    link(i,j,i+c,j+r);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  maxf:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> spfa <span class="keyword">do</span> dfs(ss);</span><br><span class="line">  writeln(cnt-maxf);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-gavel"></i><br>]]>
    
    </summary>
    
      <category term="Bipartite-Graph Matching" scheme="http://platypuspro.github.io/tags/Bipartite-Graph-Matching/"/>
    
      <category term="Max Flow" scheme="http://platypuspro.github.io/tags/Max-Flow/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 2049]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-2049/"/>
    <id>http://platypuspro.github.io/posts/bzoj-2049/</id>
    <published>2015-04-26T09:58:43.000Z</published>
    <updated>2015-04-26T11:11:41.000Z</updated>
    <content type="html"><![CDATA[<p>动态树模板题<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2049" target="_blank" rel="external">传送门</a></p>
<p>全都是动态树的基础操作…就不讲了吧…看代码脑补得了….<del>实际是不会讲啊QAQ</del></p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2049;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10000</span>]<span class="keyword">of</span> <span class="keyword">record</span> fa,lc,rc:longint; root,rev:boolean; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,j,a,b:longint;</span><br><span class="line">    c,cc:char;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> s[t].rev <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  p:=s[t].lc;</span><br><span class="line">  s[t].lc:=s[t].rc;</span><br><span class="line">  s[t].rc:=p;</span><br><span class="line">  s[t].rev:=<span class="keyword">not</span> s[t].rev;</span><br><span class="line">  <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].lc].rev:=<span class="keyword">not</span> s[s[t].lc].rev;</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].rc].rev:=<span class="keyword">not</span> s[s[t].rc].rev;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">l_rotate</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=s[t].fa;</span><br><span class="line">  s[p].rc:=s[t].lc;</span><br><span class="line">  <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].lc].fa:=p;</span><br><span class="line">  s[t].fa:=s[p].fa;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].lc <span class="keyword">then</span> s[s[p].fa].lc:=t;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].rc <span class="keyword">then</span> s[s[p].fa].rc:=t;</span><br><span class="line">  s[t].root:=s[p].root;</span><br><span class="line">  s[p].root:=false;</span><br><span class="line">  s[t].lc:=p;</span><br><span class="line">  s[p].fa:=t;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">r_rotate</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=s[t].fa;</span><br><span class="line">  s[p].lc:=s[t].rc;</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].rc].fa:=p;</span><br><span class="line">  s[t].fa:=s[p].fa;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].lc <span class="keyword">then</span> s[s[p].fa].lc:=t;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].rc <span class="keyword">then</span> s[s[p].fa].rc:=t;</span><br><span class="line">  s[t].root:=s[p].root;</span><br><span class="line">  s[p].root:=false;</span><br><span class="line">  s[t].rc:=p;</span><br><span class="line">  s[p].fa:=t;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">splay</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">while</span> <span class="keyword">not</span> s[t].root <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> s[s[t].fa].rev <span class="keyword">then</span> pushdown(s[t].fa);</span><br><span class="line">    <span class="keyword">if</span> s[s[s[t].fa].lc].rev <span class="keyword">then</span> pushdown(s[s[t].fa].lc);</span><br><span class="line">    <span class="keyword">if</span> s[s[s[t].fa].rc].rev <span class="keyword">then</span> pushdown(s[s[t].fa].rc);</span><br><span class="line">    <span class="keyword">if</span> t=s[s[t].fa].lc <span class="keyword">then</span> r_rotate(t) <span class="keyword">else</span> l_rotate(t);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">access</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  splay(t);</span><br><span class="line">  <span class="keyword">if</span> s[t].rev <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].rc].root:=true;</span><br><span class="line">  s[t].rc:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> s[t].fa&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    p:=s[t].fa;</span><br><span class="line">    splay(p);</span><br><span class="line">    <span class="keyword">if</span> s[p].rev <span class="keyword">then</span> pushdown(p);</span><br><span class="line">    <span class="keyword">if</span> s[p].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[p].rc].root:=true;</span><br><span class="line">    s[t].root:=false;</span><br><span class="line">    s[p].rc:=t;</span><br><span class="line">    s[t].fa:=p;</span><br><span class="line">    splay(t);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">evert</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  access(t);</span><br><span class="line">  s[t].rev:=true;</span><br><span class="line">  pushdown(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  evert(a);</span><br><span class="line">  access(b);</span><br><span class="line">  s[a].lc:=b;</span><br><span class="line">  s[b].fa:=a;</span><br><span class="line">  s[b].root:=false;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">cut</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  evert(a);</span><br><span class="line">  access(b);</span><br><span class="line">  <span class="keyword">if</span> s[b].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[b].lc].root:=true;</span><br><span class="line">  s[a].fa:=<span class="number">0</span>;</span><br><span class="line">  s[b].lc:=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(t:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  access(t);</span><br><span class="line">  <span class="keyword">while</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">do</span> t:=s[t].lc;</span><br><span class="line">  <span class="keyword">exit</span>(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  fillchar(s,sizeof(s),<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> s[i].root:=true;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(c);</span><br><span class="line">    <span class="keyword">case</span> c <span class="keyword">of</span></span><br><span class="line">      <span class="string">'C'</span>:<span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">6</span> <span class="keyword">do</span> <span class="keyword">read</span>(cc);</span><br><span class="line">        readln(a,b);</span><br><span class="line">        link(a,b);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      <span class="string">'D'</span>:<span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">6</span> <span class="keyword">do</span> <span class="keyword">read</span>(cc);</span><br><span class="line">        readln(a,b);</span><br><span class="line">        cut(a,b);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      <span class="string">'Q'</span>:<span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">4</span> <span class="keyword">do</span> <span class="keyword">read</span>(cc);</span><br><span class="line">        readln(a,b);</span><br><span class="line">        <span class="keyword">if</span> find(a)=find(b) <span class="keyword">then</span> writeln(<span class="string">'Yes'</span>) <span class="keyword">else</span> writeln(<span class="string">'No'</span>);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>动态树模板题<br>]]>
    
    </summary>
    
      <category term="Link Cut Tree" scheme="http://platypuspro.github.io/tags/Link-Cut-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 1051]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-1051/"/>
    <id>http://platypuspro.github.io/posts/bzoj-1051/</id>
    <published>2015-04-26T09:58:33.000Z</published>
    <updated>2015-04-26T11:06:44.000Z</updated>
    <content type="html"><![CDATA[<p>强连通分量模板题<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1051" target="_blank" rel="external">传送门</a></p>
<blockquote>
<p>注意是<strong>单向边</strong></p>
</blockquote>
<p>拿裸的${\rm Tarjan}$缩点，然后统计每个强连通分量的出度和大小</p>
<p>假设有俩强连通分量$A$和$B$，$A_2$认识$B_1$，那么$A_1$就一定认识$B_2$，因为强连通分量内一定两两可达嘛，所以只要两个强连通分量间有$A\rightarrow B$的边，那么所有$A$一定认识所有$B$</p>
<p>对于每个强连通分量，若其出度为${\rm 0}$则说明里面的任一头牛都不认识外面的，但外面的可能认识里面的</p>
<p>若有多个出度为${\rm 0}$的强连通分量，说明肯定有牛<strong>互相</strong>不认识，那不就不满足题意了嘛…</p>
<p>所以若出度为${\rm 0}$的强连通分量只有一个，则输出它的大小，否则输出${\rm 0}$</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1051;</span><br><span class="line"><span class="keyword">var</span> low,dfn,lst,cnt,s,bl:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    v,ins,noout:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    n,m,scc,tot,i,a,b,time,top,ans:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(time);</span><br><span class="line">  low[t]:=time;</span><br><span class="line">  dfn[t]:=time;</span><br><span class="line">  v[t]:=true;</span><br><span class="line">  ins[t]:=true;</span><br><span class="line">  inc(top);</span><br><span class="line">  s[top]:=t;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> v[l[k].ed] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      dfs(l[k].ed);</span><br><span class="line">      low[t]:=min(low[t],low[l[k].ed]);</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> ins[l[k].ed] <span class="keyword">then</span> low[t]:=min(low[t],dfn[l[k].ed]);</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> dfn[t]=low[t] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(scc);</span><br><span class="line">    <span class="keyword">repeat</span></span><br><span class="line">      inc(cnt[scc]);</span><br><span class="line">      bl[s[top]]:=scc;</span><br><span class="line">      ins[s[top]]:=false;</span><br><span class="line">      dec(top);</span><br><span class="line">    <span class="keyword">until</span> s[top+<span class="number">1</span>]=t;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">rebuild</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(noout,sizeof(noout),true);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    k:=lst[i];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> bl[i]&lt;&gt;bl[l[k].ed] <span class="keyword">then</span> noout[bl[i]]:=false;</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b);</span><br><span class="line">    link(a,b);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  fillchar(v,sizeof(v),<span class="number">0</span>);</span><br><span class="line">  fillchar(cnt,sizeof(cnt),<span class="number">0</span>);</span><br><span class="line">  top:=<span class="number">0</span>;</span><br><span class="line">  scc:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> <span class="keyword">not</span> v[i] <span class="keyword">then</span> dfs(i);</span><br><span class="line">  rebuild;</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> scc <span class="keyword">do</span> <span class="keyword">if</span> noout[i] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> ans&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    writeln(<span class="number">0</span>);</span><br><span class="line">    halt;</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span> ans:=cnt[i];</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>强连通分量模板题<br>]]>
    
    </summary>
    
      <category term="Tarjan SCC" scheme="http://platypuspro.github.io/tags/Tarjan-SCC/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 1036]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-1036/"/>
    <id>http://platypuspro.github.io/posts/bzoj-1036/</id>
    <published>2015-04-26T09:58:27.000Z</published>
    <updated>2015-04-26T10:38:34.000Z</updated>
    <content type="html"><![CDATA[<p>树链剖分&amp;动态树 模板题<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1036" target="_blank" rel="external">传送门</a></p>
<blockquote>
<p><a href="#TCS">树链剖分解法</a><br><a href="#LCT">动态树解法</a></p>
</blockquote>
<!--TCS-->
<h3 id="树链剖分">树链剖分</h3><ul>
<li>深搜时记录每个节点子树大小</li>
<li>搜到底时建新链</li>
<li>回溯时挑最大的子树</li>
<li>把当前节点加到这颗子树的重链中</li>
<li>对当前节点的其他儿子的重链“封顶”</li>
<li>对每条重链建一棵线段树</li>
</ul>
<p>修改操作就找到节点所属重链在链的线段树中修改</p>
<p>查询操作就每次从当前所在位置蹦到当前所在链的顶端，然后从顶端的$father$继续向上蹦，重复这样的操作直到蹦到根节点</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1036;</span><br><span class="line"><span class="keyword">var</span> path:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">30000</span>]<span class="keyword">of</span> <span class="keyword">record</span> top,dep,size,tree:longint; <span class="keyword">end</span>;</span><br><span class="line">    s:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">30000</span>]<span class="keyword">of</span> <span class="keyword">record</span> fa,size,dep,bl,w,rk:longint; <span class="keyword">end</span>;</span><br><span class="line">    seg:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">60000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,l,r,max,sum:longint; <span class="keyword">end</span>;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">60000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    lst:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">30000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,q,i,a,b,tot,pcnt:longint;</span><br><span class="line">    c,cc:char;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&gt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k,mk,maxs,i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  s[t].size:=<span class="number">1</span>;</span><br><span class="line">  s[t].bl:=<span class="number">0</span>;</span><br><span class="line">  maxs:=<span class="number">0</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;s[t].fa <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      s[l[k].ed].fa:=t;</span><br><span class="line">      s[l[k].ed].dep:=s[t].dep+<span class="number">1</span>;</span><br><span class="line">      dfs(l[k].ed);</span><br><span class="line">      inc(s[t].size,s[l[k].ed].size);</span><br><span class="line">      <span class="keyword">if</span> s[l[k].ed].size&gt;maxs <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        maxs:=s[l[k].ed].size;</span><br><span class="line">        mk:=l[k].ed;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;s[t].fa <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> l[k].ed=mk <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        s[t].bl:=s[l[k].ed].bl;</span><br><span class="line">        s[t].rk:=s[l[k].ed].rk+<span class="number">1</span>;</span><br><span class="line">        inc(path[s[t].bl].size);</span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        i:=s[l[k].ed].bl;</span><br><span class="line">        path[i].top:=l[k].ed;</span><br><span class="line">        path[i].dep:=s[l[k].ed].dep;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> s[t].bl=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(pcnt);</span><br><span class="line">    s[t].bl:=pcnt;</span><br><span class="line">    path[s[t].bl].size:=<span class="number">1</span>;</span><br><span class="line">    s[t].rk:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span><span class="params">(<span class="keyword">var</span> t:longint;l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  seg[t].l:=l;</span><br><span class="line">  seg[t].r:=r;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  build(seg[t].lc,l,mid);</span><br><span class="line">  build(seg[t].rc,mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(t,p,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> seg[t].l=seg[t].r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    seg[t].sum:=d;</span><br><span class="line">    seg[t].max:=d;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(seg[t].l+seg[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> p&lt;=mid <span class="keyword">then</span> modify(seg[t].lc,p,d) <span class="keyword">else</span> modify(seg[t].rc,p,d);</span><br><span class="line">  seg[t].max:=max(seg[seg[t].lc].max,seg[seg[t].rc].max);</span><br><span class="line">  seg[t].sum:=seg[seg[t].lc].sum+seg[seg[t].rc].sum;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(t,l,r:longint;flag:boolean)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> mid,a1,a2:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (l&lt;=seg[t].l)<span class="keyword">and</span>(r&gt;=seg[t].r) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> flag <span class="keyword">then</span> <span class="keyword">exit</span>(seg[t].sum) <span class="keyword">else</span> <span class="keyword">exit</span>(seg[t].max);</span><br><span class="line">  mid:=(seg[t].l+seg[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> flag <span class="keyword">then</span> a1:=<span class="number">0</span> <span class="keyword">else</span> a1:=-maxlongint;</span><br><span class="line">  a2:=a1;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> a1:=query(seg[t].lc,l,r,flag);</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> a2:=query(seg[t].rc,l,r,flag);</span><br><span class="line">  <span class="keyword">if</span> flag <span class="keyword">then</span> <span class="keyword">exit</span>(a1+a2) <span class="keyword">else</span> <span class="keyword">exit</span>(max(a1,a2));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">ask</span><span class="params">(a,b:longint;flag:boolean)</span>;</span></span><br><span class="line"><span class="keyword">var</span> ans,p,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> flag <span class="keyword">then</span> ans:=<span class="number">0</span> <span class="keyword">else</span> ans:=-maxlongint;</span><br><span class="line">  <span class="keyword">while</span> s[a].bl&lt;&gt;s[b].bl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> path[s[a].bl].dep&lt;path[s[b].bl].dep <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=a;</span><br><span class="line">      a:=b;</span><br><span class="line">      b:=p;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    t:=query(path[s[a].bl].tree,s[a].rk,path[s[a].bl].size,flag);</span><br><span class="line">    <span class="keyword">if</span> flag <span class="keyword">then</span> inc(ans,t) <span class="keyword">else</span> ans:=max(ans,t);</span><br><span class="line">    a:=s[path[s[a].bl].top].fa;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> s[a].rk&gt;s[b].rk <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    p:=a;</span><br><span class="line">    a:=b;</span><br><span class="line">    b:=p;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  t:=query(path[s[a].bl].tree,s[a].rk,s[b].rk,flag);</span><br><span class="line">  <span class="keyword">if</span> flag <span class="keyword">then</span> inc(ans,t) <span class="keyword">else</span> ans:=max(ans,t);</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b);</span><br><span class="line">    link(a,b);</span><br><span class="line">    link(b,a);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(s[i].w);</span><br><span class="line">  pcnt:=<span class="number">0</span>;</span><br><span class="line">  s[<span class="number">1</span>].dep:=<span class="number">1</span>;</span><br><span class="line">  s[<span class="number">1</span>].fa:=<span class="number">0</span>;</span><br><span class="line">  dfs(<span class="number">1</span>);</span><br><span class="line">  path[s[<span class="number">1</span>].bl].top:=<span class="number">1</span>;</span><br><span class="line">  path[s[<span class="number">1</span>].bl].dep:=<span class="number">1</span>;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> pcnt <span class="keyword">do</span> build(path[i].tree,<span class="number">1</span>,path[i].size);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> modify(path[s[i].bl].tree,s[i].rk,s[i].w);</span><br><span class="line">  readln(q);</span><br><span class="line">  <span class="keyword">for</span> q:=<span class="number">1</span> <span class="keyword">to</span> q <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(c);</span><br><span class="line">    <span class="keyword">if</span> c=<span class="string">'C'</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">5</span> <span class="keyword">do</span> <span class="keyword">read</span>(cc);</span><br><span class="line">      readln(a,b);</span><br><span class="line">      modify(path[s[a].bl].tree,s[a].rk,b);</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span> <span class="keyword">do</span> <span class="keyword">read</span>(cc);</span><br><span class="line">      readln(a,b);</span><br><span class="line">      <span class="keyword">if</span> cc=<span class="string">'X'</span> <span class="keyword">then</span> ask(a,b,false) <span class="keyword">else</span> ask(a,b,true);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<!--LCT-->
<h3 id="LCT">LCT</h3><p>动态树嘛…这个姿势只有深刻脑补才能明白…反正我是讲不明白…</p>
<p><del>直接扔代码跑了算了</del></p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1036;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">30000</span>]<span class="keyword">of</span> <span class="keyword">record</span> fa,lc,rc,key,max,sum:longint; root,rev:boolean; <span class="keyword">end</span>;</span><br><span class="line">    n,i,j,a,b,q,tot:longint;</span><br><span class="line">    ch,c:char;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">60000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    lst:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">30000</span>]<span class="keyword">of</span> longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&gt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(p:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  t:=lst[p];</span><br><span class="line">  <span class="keyword">while</span> t&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[t].ed&lt;&gt;s[p].fa <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      s[l[t].ed].fa:=p;</span><br><span class="line">      dfs(l[t].ed);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    t:=l[t].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[t].rev <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].lc].rev:=<span class="keyword">not</span> s[s[t].lc].rev;</span><br><span class="line">    <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].rc].rev:=<span class="keyword">not</span> s[s[t].rc].rev;</span><br><span class="line">    s[t].rev:=<span class="keyword">not</span> s[t].rev;</span><br><span class="line">    p:=s[t].lc;</span><br><span class="line">    s[t].lc:=s[t].rc;</span><br><span class="line">    s[t].rc:=p;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">update</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[t].rev <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  s[t].max:=max(s[t].key,max(s[s[t].lc].max,s[s[t].rc].max));</span><br><span class="line">  s[t].sum:=s[s[t].lc].sum+s[s[t].rc].sum+s[t].key;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">l_rotate</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=s[t].fa;</span><br><span class="line">  s[p].rc:=s[t].lc;</span><br><span class="line">  <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].lc].fa:=p;</span><br><span class="line">  s[t].fa:=s[p].fa;</span><br><span class="line">  <span class="keyword">if</span> s[p].fa&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].lc <span class="keyword">then</span> s[s[p].fa].lc:=t;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].rc <span class="keyword">then</span> s[s[p].fa].rc:=t;</span><br><span class="line">  s[t].lc:=p;</span><br><span class="line">  s[p].fa:=t;</span><br><span class="line">  s[t].root:=s[p].root;</span><br><span class="line">  s[p].root:=false;</span><br><span class="line">  update(p);</span><br><span class="line">  update(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">r_rotate</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=s[t].fa;</span><br><span class="line">  s[p].lc:=s[t].rc;</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].rc].fa:=p;</span><br><span class="line">  s[t].fa:=s[p].fa;</span><br><span class="line">  <span class="keyword">if</span> s[p].fa&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].lc <span class="keyword">then</span> s[s[p].fa].lc:=t;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].rc <span class="keyword">then</span> s[s[p].fa].rc:=t;</span><br><span class="line">  s[t].rc:=p;</span><br><span class="line">  s[p].fa:=t;</span><br><span class="line">  s[t].root:=s[p].root;</span><br><span class="line">  s[p].root:=false;</span><br><span class="line">  update(p);</span><br><span class="line">  update(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">splay</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">while</span> <span class="keyword">not</span> s[t].root <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    pushdown(s[t].fa);</span><br><span class="line">    <span class="keyword">if</span> s[s[s[t].fa].lc].rev <span class="keyword">then</span> pushdown(s[s[t].fa].lc);</span><br><span class="line">    <span class="keyword">if</span> s[s[s[t].fa].rc].rev <span class="keyword">then</span> pushdown(s[s[t].fa].rc);</span><br><span class="line">    <span class="keyword">if</span> t=s[s[t].fa].lc <span class="keyword">then</span> r_rotate(t) <span class="keyword">else</span> l_rotate(t);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">access</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  splay(t);</span><br><span class="line">  update(t);</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].rc].root:=true;</span><br><span class="line">  s[t].rc:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> s[t].fa&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    p:=s[t].fa;</span><br><span class="line">    update(p);</span><br><span class="line">    splay(p);</span><br><span class="line">    <span class="keyword">if</span> s[p].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[p].rc].root:=true;</span><br><span class="line">    s[p].rc:=t;</span><br><span class="line">    s[t].root:=false;</span><br><span class="line">    l_rotate(t);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">evert</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  access(t);</span><br><span class="line">  s[t].rev:=true;</span><br><span class="line">  pushdown(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">change</span><span class="params">(t,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  access(t);</span><br><span class="line">  s[t].key:=d;</span><br><span class="line">  update(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qsum</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  evert(a);</span><br><span class="line">  access(b);</span><br><span class="line">  update(b);</span><br><span class="line">  <span class="keyword">exit</span>(s[b].sum);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qmax</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  evert(a);</span><br><span class="line">  access(b);</span><br><span class="line">  update(b);</span><br><span class="line">  <span class="keyword">exit</span>(s[b].max);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  s[<span class="number">0</span>].max:=-(maxlongint&gt;&gt;<span class="number">1</span>);</span><br><span class="line">  readln(n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> s[i].root:=true;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b);</span><br><span class="line">    link(a,b);</span><br><span class="line">    link(b,a);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  s[<span class="number">1</span>].fa:=<span class="number">0</span>;</span><br><span class="line">  dfs(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(s[i].key);</span><br><span class="line">  readln(q);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> q <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(ch);<span class="keyword">read</span>(ch);</span><br><span class="line">    <span class="keyword">case</span> ch <span class="keyword">of</span></span><br><span class="line">      <span class="string">'H'</span>:<span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">4</span> <span class="keyword">do</span> <span class="keyword">read</span>(c);</span><br><span class="line">        readln(a,b);</span><br><span class="line">        change(a,b);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      <span class="string">'M'</span>:<span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">read</span>(c);<span class="keyword">read</span>(c);</span><br><span class="line">        readln(a,b);</span><br><span class="line">        writeln(qmax(a,b));</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      <span class="string">'S'</span>:<span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">read</span>(c);<span class="keyword">read</span>(c);</span><br><span class="line">        readln(a,b);</span><br><span class="line">        writeln(qsum(a,b));</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>树链剖分&amp;动态树 模板题<br>]]>
    
    </summary>
    
      <category term="Link Cut Tree" scheme="http://platypuspro.github.io/tags/Link-Cut-Tree/"/>
    
      <category term="Tree Chain Split" scheme="http://platypuspro.github.io/tags/Tree-Chain-Split/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 1031]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-1031/"/>
    <id>http://platypuspro.github.io/posts/bzoj-1031/</id>
    <published>2015-04-26T09:58:21.000Z</published>
    <updated>2015-04-26T10:05:56.000Z</updated>
    <content type="html"><![CDATA[<p>后缀数组模板题<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1031" target="_blank" rel="external">传送门</a></p>
<p>直接把字符串复制一遍接在末尾，然后用裸的后缀数组处理完后按排名依次输出属于前一半的字符串</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1031;</span><br><span class="line"><span class="keyword">const</span> maxl=<span class="number">100000</span>;</span><br><span class="line"><span class="keyword">var</span> rank,sa,cnt,tsa,rank1,rank2:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2</span>*maxl]<span class="keyword">of</span> longint;</span><br><span class="line">    s:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">2</span>*maxl]<span class="keyword">of</span> char;</span><br><span class="line">    n,i,p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  n:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> <span class="keyword">not</span> eoln <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(n);</span><br><span class="line">    <span class="keyword">read</span>(s[n]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> s[n+i]:=s[i];</span><br><span class="line">  n:=n&lt;&lt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">255</span> <span class="keyword">do</span> cnt[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(cnt[ord(s[i])]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">255</span> <span class="keyword">do</span> inc(cnt[i],cnt[i-<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> rank[i]:=cnt[ord(s[i])];</span><br><span class="line">  p:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> p&lt;n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      rank1[i]:=rank[i];</span><br><span class="line">      <span class="keyword">if</span> i+p&lt;=n <span class="keyword">then</span> rank2[i]:=rank[i+p] <span class="keyword">else</span> rank2[i]:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span> cnt[i]:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(cnt[rank2[i]]);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(cnt[i],cnt[i-<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> i:=n <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      tsa[cnt[rank2[i]]]:=i;</span><br><span class="line">      dec(cnt[rank2[i]]);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span> cnt[i]:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(cnt[rank1[i]]);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(cnt[i],cnt[i-<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> i:=n <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      sa[cnt[rank1[tsa[i]]]]:=tsa[i];</span><br><span class="line">      dec(cnt[rank1[tsa[i]]]);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    rank[sa[<span class="number">1</span>]]:=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      rank[sa[i]]:=rank[sa[i-<span class="number">1</span>]];</span><br><span class="line">      <span class="keyword">if</span> (rank1[sa[i]]&lt;&gt;rank1[sa[i-<span class="number">1</span>]])<span class="keyword">or</span>(rank2[sa[i]]&lt;&gt;rank2[sa[i-<span class="number">1</span>]]) <span class="keyword">then</span> inc(rank[sa[i]]);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    p:=p&lt;&lt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> sa[i]&lt;=n&gt;&gt;<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">write</span>(s[sa[i]+n&gt;&gt;<span class="number">1</span>-<span class="number">1</span>]);</span><br><span class="line">  writeln;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>后缀数组模板题<br>]]>
    
    </summary>
    
      <category term="Suffix Array" scheme="http://platypuspro.github.io/tags/Suffix-Array/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 2186]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-2186/"/>
    <id>http://platypuspro.github.io/posts/bzoj-2186/</id>
    <published>2015-04-17T13:27:34.000Z</published>
    <updated>2015-04-17T13:51:27.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-cubes"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2186" target="_blank" rel="external">传送门</a></p>
<p>首先，<br>$\varphi(x)=x\times\frac{p-1}{p}(p\mid x且p为质数)$</p>
<p>也就是对于$x$的每个质因数$p$，去掉$[1,x]$中$p$的$x\times\frac{1}{p}$个倍数</p>
<p>那么题目求的就是$n!\times\frac{p-1}{p}(p\mid m!且p为质数)$</p>
<p>也就是$n!\times\frac{p-1}{p}(p\mid m且p为质数)$</p>
<p>$n!\times(p-1)\times p^{-1}(p\mid m且p为质数,p^{-1}为p的逆元)$</p>
<p>那么预处理阶乘并拿扩展欧几里得找逆元就行了</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2186;</span><br><span class="line"><span class="keyword">const</span> max=<span class="number">10000000</span>;</span><br><span class="line"><span class="keyword">var</span> sieve,pre,fac,inv:<span class="keyword">array</span>[<span class="number">0</span>..max]<span class="keyword">of</span> longint;</span><br><span class="line">    prime:<span class="keyword">array</span>[<span class="number">1</span>..max]<span class="keyword">of</span> boolean;</span><br><span class="line">    t,n,m,r,x,y,tot:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">exgcd</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    x:=<span class="number">1</span>;</span><br><span class="line">    y:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  exgcd(b,a <span class="keyword">mod</span> b);</span><br><span class="line">  t:=x;</span><br><span class="line">  x:=y;</span><br><span class="line">  y:=t-(a <span class="keyword">div</span> b)*y;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">init_sieve</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(prime,sizeof(prime),true);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> max <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> prime[i] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(tot);</span><br><span class="line">      sieve[tot]:=i;</span><br><span class="line">      exgcd(i,r);</span><br><span class="line">      inv[i]:=(x <span class="keyword">mod</span> r+r)<span class="keyword">mod</span> r;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> tot <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> i*sieve[j]&gt;max <span class="keyword">then</span> break;</span><br><span class="line">      prime[i*sieve[j]]:=false;</span><br><span class="line">      inv[i*sieve[j]]:=int64(inv[i])*int64(inv[sieve[j]]) <span class="keyword">mod</span> r;</span><br><span class="line">      <span class="keyword">if</span> i <span class="keyword">mod</span> sieve[j]=<span class="number">0</span> <span class="keyword">then</span> break;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">init</span>;</span></span><br><span class="line"><span class="keyword">var</span> i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fac[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> max <span class="keyword">do</span> fac[i]:=int64(fac[i-<span class="number">1</span>])*int64(i) <span class="keyword">mod</span> r;</span><br><span class="line">  init_sieve;</span><br><span class="line">  pre[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> max <span class="keyword">do</span> <span class="keyword">if</span> prime[i] <span class="keyword">then</span> pre[i]:=(int64(pre[i-<span class="number">1</span>])*int64(i-<span class="number">1</span>) <span class="keyword">mod</span> r)*int64(inv[i]) <span class="keyword">mod</span> r <span class="keyword">else</span> pre[i]:=pre[i-<span class="number">1</span>];</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(t,r);</span><br><span class="line">  init;</span><br><span class="line">  <span class="keyword">for</span> t:=<span class="number">1</span> <span class="keyword">to</span> t <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(n,m);</span><br><span class="line">    writeln(int64(fac[n])*int64(pre[m]) <span class="keyword">mod</span> r);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-cubes"></i><br>]]>
    
    </summary>
    
      <category term="Euler&#39;s Totient Function" scheme="http://platypuspro.github.io/tags/Euler-s-totient-function/"/>
    
      <category term="Math" scheme="http://platypuspro.github.io/tags/Math/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 1965]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-1965/"/>
    <id>http://platypuspro.github.io/posts/bzoj-1965/</id>
    <published>2015-04-17T13:27:01.000Z</published>
    <updated>2015-04-18T07:42:25.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-building-o"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1965" target="_blank" rel="external">传送门</a></p>
<p>观察发现每次洗牌后编号为$x$的牌会跑到$2\cdot x\ mod(n+1)$的位置上</p>
<p>那么洗牌$m$次后就会跑到$2^m\cdot x\ mod(n+1)$的位置上</p>
<p>设洗牌$m$次后跑到$1$号位的牌为$x$，则$2^m\cdot x\equiv 1(mod\ n+1)$</p>
<p>即为$2^m\cdot x+(n+1)\cdot y=1$</p>
<p>然后拿扩展欧几里得解出$x$后第$L$张就是$x\cdot L\ mod\ (n+1)$</p>
<p>注意$x$可能为负，要所以特判答案为负的情况</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1965;</span><br><span class="line"><span class="keyword">var</span> n,m,l,p,mo,x,y,g,ans:int64;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qp</span><span class="params">(x,k:int64)</span>:</span>int64;</span><br><span class="line"><span class="keyword">var</span> p:int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  qp:=<span class="number">1</span>;</span><br><span class="line">  p:=x;</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> k <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> qp:=(qp*p)<span class="keyword">mod</span> mo;</span><br><span class="line">    p:=(p*p)<span class="keyword">mod</span> mo;</span><br><span class="line">    k:=k&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">exgcd</span><span class="params">(a,b:int64)</span>:</span>int64;</span><br><span class="line"><span class="keyword">var</span> t,g:int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    x:=<span class="number">1</span>;</span><br><span class="line">    y:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">exit</span>(a);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  g:=exgcd(b,a <span class="keyword">mod</span> b);</span><br><span class="line">  t:=x;</span><br><span class="line">  x:=y;</span><br><span class="line">  y:=t-(a <span class="keyword">div</span> b)*y;</span><br><span class="line">  <span class="keyword">exit</span>(g);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m,l);</span><br><span class="line">  mo:=n+<span class="number">1</span>;</span><br><span class="line">  p:=qp(<span class="number">2</span>,m);</span><br><span class="line">  g:=exgcd(p,mo);</span><br><span class="line">  ans:=(x*l <span class="keyword">mod</span> mo+mo)<span class="keyword">mod</span> mo;</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-building-o"></i><br>]]>
    
    </summary>
    
      <category term="Extended Euclidean" scheme="http://platypuspro.github.io/tags/Extended-Euclidean/"/>
    
      <category term="Math" scheme="http://platypuspro.github.io/tags/Math/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3571]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3571/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3571/</id>
    <published>2015-04-14T11:44:24.000Z</published>
    <updated>2015-04-14T13:42:10.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-anchor"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3571" target="_blank" rel="external">传送门</a></p>
<p>首先，$N$个配$N$个还带权值，那就认准KM了</p>
<p>这道题的思路和最小乘积生成树的思路差不多，<del>可惜BZOJ上一道裸最小乘积生成树被权限了…</del></p>
<p>考虑把每一种方案抽象成一个点$(\sum A,\sum B)$，然后把所有点扔到一个坐标系里面，然后答案就是使得一个反比例函数$x\cdot y=k$的$k$最小的点</p>
<p>枚举每个点和暴力有啥区别…那么考虑把范围缩小一下</p>
<p>拿KM找出$\sum A$最小的点和$\sum B$最小的点（带权最小匹配就把边权取反算带权最大匹配），最优解一定优于这两个点（或是两个点之一），也就是在这两个点连成的线段下方</p>
<p>设最优解为$c$，$\sum A$最小的点为$a$,$\sum B$最小的点为$b$</p>
<p>那么题目就成了求$S\Delta abc$最大的点$c$（它越大说明$c$离$ab$越远，越靠近原点，答案越小），而$c$肯定在凸包上，所以可以拿分治搞一搞</p>
<h4 id="$$S\Delta_abc=\frac{\vec{ab}\times\vec{ac}}{2}$$">$$S\Delta abc=\frac{\vec{ab}\times\vec{ac}}{2}$$</h4><p>展开再合起来能得到 <del>（向量箭头不一样高差评）</del></p>
<h4 id="$$S\Delta_abc=\frac{\vec{ab}\times\vec{c}+\vec{a}\times\vec{b}}{2}$$">$$S\Delta abc=\frac{\vec{ab}\times\vec{c}+\vec{a}\times\vec{b}}{2}$$</h4><p>后面那坨已知，扔掉，即求$\vec{ab}\times\vec{c}$的最大值</p>
<p>然后每次分治时拿KM算一算最优解就可以啦~</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3571;</span><br><span class="line"><span class="keyword">const</span> inf=maxlongint&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">type</span> point=<span class="keyword">record</span> x,y:longint; <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> lx,ly,slack,pair:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">70</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    vx,vy:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">70</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    w,a,b:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">70</span>,<span class="number">1</span>..<span class="number">70</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    t,n,i,j:longint;</span><br><span class="line">    pa,pb:point;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(x:longint)</span>:</span>boolean;</span><br><span class="line"><span class="keyword">var</span> t,y:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  vx[x]:=true;</span><br><span class="line">  <span class="keyword">for</span> y:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> vy[y] <span class="keyword">then</span> continue;</span><br><span class="line">    t:=lx[x]+ly[y]-w[x,y];</span><br><span class="line">    <span class="keyword">if</span> t=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      vy[y]:=true;</span><br><span class="line">      <span class="keyword">if</span> (pair[y]=<span class="number">0</span>)<span class="keyword">or</span>(find(pair[y])) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        pair[y]:=x;</span><br><span class="line">        <span class="keyword">exit</span>(true);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> t&lt;slack[y] <span class="keyword">then</span> slack[y]:=t;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(false);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">KM</span>:</span>point;</span><br><span class="line"><span class="keyword">var</span> i,j,d:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(pair,sizeof(pair),<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> lx[i]:=-inf;</span><br><span class="line">  fillchar(ly,sizeof(ly),<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> w[i,j]&gt;lx[i] <span class="keyword">then</span> lx[i]:=w[i,j];</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    fillchar(slack,sizeof(slack),$<span class="number">3</span>f);</span><br><span class="line">    <span class="keyword">repeat</span></span><br><span class="line">      fillchar(vx,sizeof(vx),false);</span><br><span class="line">      fillchar(vy,sizeof(vy),false);</span><br><span class="line">      <span class="keyword">if</span> find(i) <span class="keyword">then</span> break;</span><br><span class="line">      d:=inf;</span><br><span class="line">      <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> (<span class="keyword">not</span> vy[j])<span class="keyword">and</span>(slack[j]&lt;d) <span class="keyword">then</span> d:=slack[j];</span><br><span class="line">      <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> vx[j] <span class="keyword">then</span> dec(lx[j],d);</span><br><span class="line">      <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> vy[j] <span class="keyword">then</span> inc(ly[j],d) <span class="keyword">else</span> dec(slack[j],d);</span><br><span class="line">    <span class="keyword">until</span> false;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  KM.x:=<span class="number">0</span>;</span><br><span class="line">  KM.y:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(KM.x,a[pair[i],i]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(KM.y,b[pair[i],i]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solve</span><span class="params">(l,r:point)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> t:point;</span><br><span class="line">    i,j:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> w[i,j]:=a[i,j]*(r.y-l.y)-b[i,j]*(r.x-l.x);</span><br><span class="line">  t:=KM;</span><br><span class="line">  <span class="keyword">if</span> ((t.x=l.x)<span class="keyword">and</span>(t.y=l.y))<span class="keyword">or</span>((t.x=r.x)<span class="keyword">and</span>(t.y=r.y)) <span class="keyword">then</span> <span class="keyword">exit</span>(min(l.x*l.y,r.x*r.y));</span><br><span class="line">  <span class="keyword">exit</span>(min(solve(l,t),solve(t,r)));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(t);</span><br><span class="line">  <span class="keyword">for</span> t:=<span class="number">1</span> <span class="keyword">to</span> t <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(n);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i,j]);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(b[i,j]);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> w[i,j]:=-a[i,j];</span><br><span class="line">    pa:=KM;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> w[i,j]:=-b[i,j];</span><br><span class="line">    pb:=KM;</span><br><span class="line">    writeln(solve(pa,pb));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-anchor"></i><br>]]>
    
    </summary>
    
      <category term="Divide and Conquer" scheme="http://platypuspro.github.io/tags/Divide-and-Conquer/"/>
    
      <category term="Kuhn-Munkres" scheme="http://platypuspro.github.io/tags/Kuhn-Munkres/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 2152]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-2152/"/>
    <id>http://platypuspro.github.io/posts/bzoj-2152/</id>
    <published>2015-04-13T13:44:40.000Z</published>
    <updated>2015-04-13T13:59:16.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-tree"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2152" target="_blank" rel="external">传送门</a></p>
<p>头一次搞点分治…</p>
<p>点分治大概是这个姿势：</p>
<ul>
<li>找到整棵树的重心，然后按照题目要求搞这个重心周围的子树</li>
<li>对每一棵子树再进行上面这样的操作</li>
</ul>
<p>一般的点分治似乎还要考虑重复计算的部分，要用容斥原理算重复的情况，但这道题不用…以后写了再说吧…</p>
<p>这道题只用对于每个重心，算出这个重心到它子树中的所有点每条路径权值和$mod\ 3=0,1,2$的个数，然后分情况计算一下</p>
<p>最后将上面那步计算的答案$\times 2+n$（每条路径左右端点调换+单个点的情况）除$n^2$就是答案</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2152;</span><br><span class="line"><span class="keyword">var</span> cnt:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">20000</span>,<span class="number">0</span>..<span class="number">2</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    v:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">20000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    lst,size:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">20000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">40000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre,w:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,i,a,b,w,tot,root,max,ans,up,dn,g:longint;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gcd</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(gcd(b,a <span class="keyword">mod</span> b));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b,w:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line">  l[tot].w:=w;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">find_root</span><span class="params">(t,fa:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> cnt,k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  cnt:=<span class="number">0</span>;</span><br><span class="line">  size[t]:=<span class="number">1</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (l[k].ed&lt;&gt;fa)<span class="keyword">and</span>(<span class="keyword">not</span> v[l[k].ed]) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      find_root(l[k].ed,t);</span><br><span class="line">      inc(size[t],size[l[k].ed]);</span><br><span class="line">      <span class="keyword">if</span> size[l[k].ed]&gt;cnt <span class="keyword">then</span> cnt:=size[l[k].ed];</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> tot-cnt&gt;cnt <span class="keyword">then</span> cnt:=tot-cnt;</span><br><span class="line">  <span class="keyword">if</span> cnt&lt;max <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    max:=cnt;</span><br><span class="line">    root:=t;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t,fa,now,rem:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(cnt[now,rem]);</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (l[k].ed&lt;&gt;fa)<span class="keyword">and</span>(<span class="keyword">not</span> v[l[k].ed]) <span class="keyword">then</span> dfs(l[k].ed,t,now,(rem+l[k].w)<span class="keyword">mod</span> <span class="number">3</span>);</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">find</span><span class="params">(rt:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line">    c:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2</span>]<span class="keyword">of</span> longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  v[rt]:=true;</span><br><span class="line">  k:=lst[rt];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> v[l[k].ed] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      c:=cnt[rt];</span><br><span class="line">      dfs(l[k].ed,rt,rt,l[k].w);</span><br><span class="line">      inc(ans,(c[<span class="number">0</span>]+<span class="number">1</span>)*(cnt[rt,<span class="number">0</span>]-c[<span class="number">0</span>])+c[<span class="number">1</span>]*(cnt[rt,<span class="number">2</span>]-c[<span class="number">2</span>])+c[<span class="number">2</span>]*(cnt[rt,<span class="number">1</span>]-c[<span class="number">1</span>]));</span><br><span class="line">      tot:=size[l[k].ed];</span><br><span class="line">      max:=maxlongint;</span><br><span class="line">      find_root(l[k].ed,<span class="number">0</span>);</span><br><span class="line">      find(root);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b,w);</span><br><span class="line">    link(a,b,w <span class="keyword">mod</span> <span class="number">3</span>);</span><br><span class="line">    link(b,a,w <span class="keyword">mod</span> <span class="number">3</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  tot:=n;</span><br><span class="line">  max:=maxlongint;</span><br><span class="line">  fillchar(v,sizeof(v),false);</span><br><span class="line">  find_root(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  find(root);</span><br><span class="line">  up:=ans*<span class="number">2</span>+n;</span><br><span class="line">  dn:=sqr(n);</span><br><span class="line">  g:=gcd(up,dn);</span><br><span class="line">  writeln(up <span class="keyword">div</span> g,<span class="string">'/'</span>,dn <span class="keyword">div</span> g);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-tree"></i><br>]]>
    
    </summary>
    
      <category term="Divide and Conquer" scheme="http://platypuspro.github.io/tags/Divide-and-Conquer/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3932]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3932/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3932/</id>
    <published>2015-04-11T13:36:02.000Z</published>
    <updated>2015-04-29T00:31:17.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>还是太naive…</p>
</blockquote>
<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3932" target="_blank" rel="external">传送门</a></p>
<h3 id="题目描述">题目描述</h3><p>最近实验室正在为其管理的超级计算机编制一套任务管理系统，而你被安排完成其中的查询部分。<br>超级计算机中的任务用三元组$(S_i,E_i,P_i)$描述，$(S_i,E_i,P_i)$表示任务从第$S_i$秒开始，在第$E_i$秒后结束（第$S_i$秒和$E_i$秒任务也在运行），其优先级为$P_i$。同一时间可能有多个任务同时执行，它们的优先级可能相同，也可能不同。调度系统会经常向查询系统询问，第$X_i$秒正在运行的任务中，优先级最小的$K_i$个任务（即将任务按照优先级从小到大排序后取前$K_i$个）的优先级之和是多少。特别的，如果$K_i$大于第$X_i$秒正在运行的任务总数，则直接回答第$X_i$秒正在运行的任务优先级之和。上述所有参数均为整数，时间的范围在$1$到$n$之间（包含$1$和$n$）。</p>
<h3 id="输入格式">输入格式</h3><p>输入文件第一行包含两个空格分开的正整数$m$和$n$，分别表示任务总数和时间范围。<br>接下来$m$行，每行包含三个空格分开的正整数$S_i,E_i,P_i(S_i\leq E_i)$，描述一个任务。<br>接下来$n$行，每行包含四个空格分开的整数$X_i,A_i,B_i和C_i$，描述一次查询。查询的参数$K_i$需要由公式$K_i=1+(A_i\cdot Pre+B_i)mod\ C_i$计算得到。其中$Pre$表示上一次查询的结果，对于第一次查询，$Pre=1$。</p>
<h3 id="输出格式">输出格式</h3><p>输出共$n$行，每行一个整数，表示查询结果。</p>
<h3 id="输入样例">输入样例</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">43</span><br><span class="line">126</span><br><span class="line">233</span><br><span class="line">132</span><br><span class="line">334</span><br><span class="line">3132</span><br><span class="line">1134</span><br><span class="line">2243</span><br></pre></td></tr></table></figure>
<h3 id="输出样例">输出样例</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">8</span><br><span class="line">11</span><br></pre></td></tr></table></figure>
<h3 id="样例解释">样例解释</h3><p>$K_1=(1\times 1+3)mod\ 2+1=1$<br>$K_2=(1\times 2+3)mod\ 4+1=2$<br>$K_3=(2\times 8+4)mod\ 3+1=3$</p>
<h3 id="数据范围">数据范围</h3><p>对于$50%$的数据，$A_i=0$<br>对于$100%$的数据，$1\leq m,n,S_i,E_i,C_i\leq 100000,0\leq A_i,B_i\leq 100000,1\leq P_i\leq 10000000$,$X_i$为$1$到$n$的一个排列</p>
<p>主席树</p>
<p>题目说每次从$S_i$到$E_i$多了一个优先级，但是主席树怎么知道啥时候要多啥时候要少，所以对于每个任务，拆成从$S_i$到最后多一个优先级，从$E_i+1$到最后少一个优先级</p>
<p>然后把所有拆过的操作按照开始时间递增排序，而每个任务会对它的开始时间及之后的$root$数组产生影响，所以把每个任务依次插到主席树里就行了</p>
<blockquote>
<p>我来扯一扯我的坎坷经历…</p>
<p>刚开始写得挺开心…写呀写呀写完了…样例一遍过，然后往BZOJ上一交…卧槽0ms TLE 你™逗我？</p>
<p>然后以为BZOJ评测机抽了，又来了三发…还是一样的结果…无奈求助Orz lzy，得知是空间开得太大了把评测机吓尿了</p>
<p>然后求助Orz ZYK查了查哪里有问题，然后被科普了线段树中不记录左右端点的写法，于是乎改了改又交上去卧槽占了600M…</p>
<p>继续求助ZYK大爷…然后发现我开了一棵25000000大小的线段树……………………原谅我too yong too simple不会算内存…</p>
<p>这个是因为我一直以为主席树需要在$root[0]$建出来一整棵树…于是就开了这么大然后建啊建啊…但这道题并不需要$root[0]$的信息…所以就不用建了…</p>
<p>然后又改啊改啊 <del>其实没改多久</del> 然后交了上去…发现才用了100多M…QAQ</p>
</blockquote>
<p><i class="fa fa-code fa-2x"></i></p>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3932;</span><br><span class="line"><span class="keyword">type</span> op=<span class="keyword">record</span> st,p:longint; flag:boolean; <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">4900000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,size:longint; sum:int64; <span class="keyword">end</span>;</span><br><span class="line">    q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200000</span>]<span class="keyword">of</span> op;</span><br><span class="line">    n,m,x,a,b,c,k,i,j,maxp,tot:longint;</span><br><span class="line">    root:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    ans:int64;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line">    mid,p:op;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=q[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> q[i].st&lt;mid.st <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> q[j].st&gt;mid.st <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=q[i];</span><br><span class="line">      q[i]:=q[j];</span><br><span class="line">      q[j]:=p;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(<span class="keyword">var</span> t:longint;base,p,l,r:longint;flag:boolean)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  s[t]:=s[base];</span><br><span class="line">  <span class="keyword">if</span> flag <span class="keyword">then</span> inc(s[t].size) <span class="keyword">else</span> dec(s[t].size);</span><br><span class="line">  <span class="keyword">if</span> flag <span class="keyword">then</span> inc(s[t].sum,p) <span class="keyword">else</span> dec(s[t].sum,p);</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> p&lt;=mid <span class="keyword">then</span> insert(s[t].lc,s[base].lc,p,l,mid,flag) <span class="keyword">else</span> insert(s[t].rc,s[base].rc,p,mid+<span class="number">1</span>,r,flag);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(t,l,r,p:longint)</span>:</span>int64;</span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>(l*min(s[t].size,p));</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[t].lc].size <span class="keyword">then</span> <span class="keyword">exit</span>(s[s[t].lc].sum);</span><br><span class="line">  <span class="keyword">if</span> p&lt;=s[s[t].lc].size <span class="keyword">then</span> <span class="keyword">exit</span>(query(s[t].lc,l,mid,p)) <span class="keyword">else</span> <span class="keyword">exit</span>(s[s[t].lc].sum+query(s[t].rc,mid+<span class="number">1</span>,r,p-s[s[t].lc].size));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(m,n);</span><br><span class="line">  maxp:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b,c);</span><br><span class="line">    q[i&lt;&lt;<span class="number">1</span>-<span class="number">1</span>].st:=a;</span><br><span class="line">    q[i&lt;&lt;<span class="number">1</span>-<span class="number">1</span>].p:=c;</span><br><span class="line">    q[i&lt;&lt;<span class="number">1</span>-<span class="number">1</span>].flag:=true;</span><br><span class="line">    q[i&lt;&lt;<span class="number">1</span>].st:=b+<span class="number">1</span>;</span><br><span class="line">    q[i&lt;&lt;<span class="number">1</span>].p:=c;</span><br><span class="line">    q[i&lt;&lt;<span class="number">1</span>].flag:=false;</span><br><span class="line">    <span class="keyword">if</span> c&gt;maxp <span class="keyword">then</span> maxp:=c;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  qsort(<span class="number">1</span>,m&lt;&lt;<span class="number">1</span>);</span><br><span class="line">  tot:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> q[<span class="number">1</span>].st <span class="keyword">do</span> root[i]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m&lt;&lt;<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    insert(root[q[i].st],root[q[i].st],q[i].p,<span class="number">1</span>,maxp,q[i].flag);</span><br><span class="line">    <span class="keyword">if</span> i&lt;m&lt;&lt;<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">for</span> j:=q[i].st <span class="keyword">to</span> q[i+<span class="number">1</span>].st <span class="keyword">do</span> root[j]:=root[q[i].st];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  ans:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(x,a,b,c);</span><br><span class="line">    k:=<span class="number">1</span>+(a*ans+b)<span class="keyword">mod</span> c;</span><br><span class="line">    ans:=query(root[x],<span class="number">1</span>,maxp,k);</span><br><span class="line">    writeln(ans);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>还是太naive…</p>
</blockquote>]]>
    
    </summary>
    
      <category term="Fotile Tree" scheme="http://platypuspro.github.io/tags/Fotile-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 1492]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-1492/"/>
    <id>http://platypuspro.github.io/posts/bzoj-1492/</id>
    <published>2015-04-11T13:35:56.000Z</published>
    <updated>2015-04-13T07:54:32.000Z</updated>
    <content type="html"><![CDATA[<p>Orz CDQ<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1492" target="_blank" rel="external">传送门</a></p>
<p>设$f_i$为第$i$天能获得的最大钱数，$F_i$为第$i$天持有的最大的$B$券数目，则</p>
<h4 id="$$F_i=\frac{f_i}{A_i\times_Rate_i+B_i}$$">$$F_i=\frac{f_i}{A_i\times Rate_i+B_i}$$</h4><h4 id="$$f_i=max\lbrace_f_{i-1},A_i\cdot_Rate_j_\cdot_F_j+B_i\cdot_F_j\rbrace_(1\leq_j&lt;i)$$">$$f_i=max\lbrace f_{i-1},A_i\cdot Rate_j \cdot F_j+B_i\cdot F_j\rbrace (1\leq j&lt;i)$$</h4><p>($f_0$即为初始钱数)</p>
<p>若决策$j$优于决策$k(1\leq j,k&lt;i-1)$，则</p>
<h4 id="$$A_i\cdot_Rate_j_\cdot_F_j+B_i\cdot_F_j&gt;A_i\cdot_Rate_k_\cdot_F_k+B_i\cdot_F_k$$">$$A_i\cdot Rate_j \cdot F_j+B_i\cdot F_j&gt;A_i\cdot Rate_k \cdot F_k+B_i\cdot F_k$$</h4><h4 id="$$A_i(F_j\cdot_Rate_j-F_k\cdot_Rate_k)&gt;-B_i(F_j-F_k)$$">$$A_i(F_j\cdot Rate_j-F_k\cdot Rate_k)&gt;-B_i(F_j-F_k)$$</h4><h4 id="$$\frac{F_j-F_k}{F_j\cdot_Rate_j-F_k\cdot_Rate_k}&gt;-\frac{A_i}{B_i}$$">$$\frac{F_j-F_k}{F_j\cdot Rate_j-F_k\cdot Rate_k}&gt;-\frac{A_i}{B_i}$$</h4><p>设$G_i=F_i\cdot Rate_i$</p>
<h4 id="$$\frac{F_j-F_k}{G_j-G_k}&gt;-\frac{A_i}{B_i}$$">$$\frac{F_j-F_k}{G_j-G_k}&gt;-\frac{A_i}{B_i}$$</h4><p>左边那一坨就是$(G_j,F_j),(G_k,F_k)$两点连线的斜率</p>
<h4 id="$$f_i=max(f_{i-1},max\lbrace_A_i\cdot_G_j+B_i\cdot_F_j\rbrace)_(1\leq_j&lt;i)$$">$$f_i=max(f_{i-1},max\lbrace A_i\cdot G_j+B_i\cdot F_j\rbrace) (1\leq j&lt;i)$$</h4><p>实际上就是求所有$j\in [1,i)$中的点$(G_j,F_j)$代入直线$A_i\cdot x+B_i\cdot y+d=0$后最小的$d$（最大的$-d$）</p>
<p>也就是说拿这条直线一点点往下移，从上往下碰到的第一个点$(G_j,F_j)$使得截距最大的就是答案，而这个点显然是在凸包上的</p>
<p><del>$p14y 2333</del>Splay的写法有空了再慢慢写，先贴CDQ分治的…</p>
<p>具体搞法大概是这个姿势：</p>
<ul>
<li>首先把所有询问按$-\frac{A_i}{B_i}$递减排序（斜率由近似水平逐渐顺时针变到近似垂直，这样好切凸包）</li>
<li>定义一个$Solve(l,r)$函数，然后分成$Solve(l,mid)$与$Solve(mid+1,r)$</li>
<li>对于$Solve(l,mid)$，继续递归处理，然后搞一个$(l,mid)$的上凸壳来更新$(mid+1,r)$的决策</li>
<li>递归$Solve(mid+1,r)$</li>
</ul>
<blockquote>
<p><strong>Tips</strong></p>
<p>每个$Solve$过程在更新答案后需要把区间里的询问先回复到原顺序依次处理</p>
<p>$Solve$结束时把$(l,r)$里的按照$F$值排序，使$F$保持递增，好更新后面的答案</p>
</blockquote>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1492;</span><br><span class="line"><span class="keyword">const</span> eps=<span class="number">1</span>e-<span class="number">6</span>;</span><br><span class="line"><span class="keyword">type</span> rec=<span class="keyword">record</span> a,b,r,k,f,g:extended; id:longint; <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> p,t:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110000</span>]<span class="keyword">of</span> rec;</span><br><span class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">110000</span>]<span class="keyword">of</span> extended;</span><br><span class="line">    s:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">110000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,i,top:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">(a,b:extended)</span>:</span>extended;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&gt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">k</span><span class="params">(a,b:longint)</span>:</span>extended;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(-<span class="number">1</span>e20);</span><br><span class="line">  <span class="keyword">if</span> abs(p[a].g-p[b].g)&lt;eps <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">1</span>e20);</span><br><span class="line">  <span class="keyword">exit</span>((p[a].f-p[b].f)/(p[a].g-p[b].g));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line">    mid,t:rec;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=p[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> p[i].k&gt;mid.k <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> p[j].k&lt;mid.k <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      t:=p[i];</span><br><span class="line">      p[i]:=p[j];</span><br><span class="line">      p[j]:=t;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">solve</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> l1,l2,mid,i,j:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    f[l]:=max(f[l],f[l-<span class="number">1</span>]);</span><br><span class="line">    p[l].f:=f[l]/(p[l].a*p[l].r+p[l].b);</span><br><span class="line">    p[l].g:=p[l].f*p[l].r;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  l1:=l;</span><br><span class="line">  l2:=mid+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=l <span class="keyword">to</span> r <span class="keyword">do</span> <span class="keyword">if</span> p[i].id&lt;=mid <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    t[l1]:=p[i];</span><br><span class="line">    inc(l1);</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    t[l2]:=p[i];</span><br><span class="line">    inc(l2);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=l <span class="keyword">to</span> r <span class="keyword">do</span> p[i]:=t[i];</span><br><span class="line">  solve(l,mid);</span><br><span class="line">  top:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=l <span class="keyword">to</span> mid <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">while</span>(top&gt;<span class="number">1</span>)<span class="keyword">and</span>(k(s[top-<span class="number">1</span>],s[top])&lt;k(s[top],i)+eps) <span class="keyword">do</span> dec(top);</span><br><span class="line">    inc(top);</span><br><span class="line">    s[top]:=i;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  inc(top);</span><br><span class="line">  s[top]:=<span class="number">0</span>;</span><br><span class="line">  j:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=mid+<span class="number">1</span> <span class="keyword">to</span> r <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">while</span> (j&lt;top)<span class="keyword">and</span>(k(s[j],s[j+<span class="number">1</span>])&gt;p[i].k+eps) <span class="keyword">do</span> inc(j);</span><br><span class="line">    f[p[i].id]:=max(f[p[i].id],p[s[j]].g*p[i].a+p[s[j]].f*p[i].b);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  solve(mid+<span class="number">1</span>,r);</span><br><span class="line">  l1:=l;</span><br><span class="line">  l2:=mid+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=l <span class="keyword">to</span> r <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> ((((abs(p[l1].g-p[l2].g)&lt;eps)<span class="keyword">and</span>(p[l1].f&lt;p[l2].f))<span class="keyword">or</span>(p[l1].g&lt;p[l2].g))<span class="keyword">or</span>(l2&gt;r))<span class="keyword">and</span>(l1&lt;=mid) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    t[i]:=p[l1];</span><br><span class="line">    inc(l1);</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    t[i]:=p[l2];</span><br><span class="line">    inc(l2);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=l <span class="keyword">to</span> r <span class="keyword">do</span> p[i]:=t[i];</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,f[<span class="number">0</span>]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">with</span> p[i] <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b,r);</span><br><span class="line">    k:=-a/b;</span><br><span class="line">    id:=i;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  qsort(<span class="number">1</span>,n);</span><br><span class="line">  solve(<span class="number">1</span>,n);</span><br><span class="line">  writeln(f[n]:<span class="number">0</span>:<span class="number">3</span>);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>Orz CDQ<br>]]>
    
    </summary>
    
      <category term="Divide and Conquer" scheme="http://platypuspro.github.io/tags/Divide-and-Conquer/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3931]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3931/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3931/</id>
    <published>2015-04-09T13:37:01.000Z</published>
    <updated>2015-04-10T04:54:52.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-tasks"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3931" target="_blank" rel="external">传送门</a></p>
<p><del>BZOJ上又没贴题…</del></p>
<h3 id="题目描述">题目描述</h3><p>路由是指通过计算机网络把信息从源地址传输到目的地址的活动，也是计算机网络设计中的重点和难点。网络中实现路由转发的硬件设备称为路由器。为了使数据包最快的到达目的地，路由器需要选择最优的路径转发数据包。例如，在常用的路由算法OSPF(开放式最短路径优先)中，路由器会使用经典的Dijkstra算法计算最短路径，然后尽量沿最短路径转发数据包。<br>现在，若已知一个计算机网络中各路由器间的连接情况，以及各个路由器的最大吞吐量（即每秒能转发的数据包数量），假设所有数据包一定沿最短路径转发，试计算从路由器$1$到路由器$n$的网络的最大吞吐量。计算中忽略转发及传输的时间开销，不考虑链路的带宽限制，即认为数据包可以瞬间通过网络。路由器$1$到路由器$n$作为起点和终点，自身的吞吐量不用考虑，网络上也不存在将$1$和$n$直接相连的链路。</p>
<h3 id="输入格式">输入格式</h3><p>输入文件第一行包含两个空格分开的正整数$n$和$m$，分别表示路由器数量和链路的数量。网络中的路由器使用$1$到$n$编号。<br>接下来$m$行，每行包含三个空格分开的正整数$a$、$b$和$d$，表示从路由器$a$到路由器$b$存在一条距离为$d$的双向链路。<br>接下来$n$行，每行包含一个正整数$c$，分别给出每一个路由器的吞吐量。</p>
<h3 id="输出格式">输出格式</h3><p>输出一个整数，为题目所求吞吐量。</p>
<h3 id="输入样例">输入样例</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">7 10</span><br><span class="line">1 2 2</span><br><span class="line">1 5 2</span><br><span class="line">2 4 1</span><br><span class="line">2 3 3</span><br><span class="line">3 7 1</span><br><span class="line">4 5 4</span><br><span class="line">4 3 1</span><br><span class="line">4 6 1</span><br><span class="line">5 6 2</span><br><span class="line">6 7 1</span><br><span class="line">1</span><br><span class="line">00</span><br><span class="line">20</span><br><span class="line">50</span><br><span class="line">20</span><br><span class="line">60</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<h3 id="输出样例">输出样例</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">70</span><br></pre></td></tr></table></figure>
<h3 id="样例解释">样例解释</h3><p><img src="http://i1.tietuku.com/4e49691e7c20f9b9.png" alt=""></p>
<h3 id="数据范围">数据范围</h3><p>对于$30%$的数据，$n\leq 100,m\leq 1000$<br>对于$100%$的数据，$n\leq 500,m\leq 100000,d,c\leq 10^9$</p>
<blockquote>
<p>Q: 比裸题更裸的是什么？<br>A: BZOJ 3931</p>
</blockquote>
<p>先一正一反两遍最短路</p>
<p>然后对于某条边，若$1$到它的一个端点的距离与它的另一个端点到$n$的距离之和再加上这条边的长度等于$1$到$n$的长度的话，(也就是说$dis_{1,a}+dis_{b,n}+dis_{a,b}=dis_{1,n}$)，说明这条边属于最短路图</p>
<p>这样搞出最短路图，然后拆点裸上最大流就是答案</p>
<p><i class="fa fa-code fa-2x"></i></p>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3931;</span><br><span class="line"><span class="keyword">const</span> inf=maxlongint&lt;&lt;<span class="number">16</span>;</span><br><span class="line"><span class="keyword">var</span> d:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">2</span>,<span class="number">1</span>..<span class="number">500</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l,ll:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">200000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; f:int64; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,tot,a,b,c,k,ss,tt:longint;</span><br><span class="line">    lst,st:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1000</span>]<span class="keyword">of</span> longint;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:int64)</span>:</span>int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint;d:int64)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  ll[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  ll[tot].ed:=b;</span><br><span class="line">  ll[tot].f:=d;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(a,b:longint;f:int64)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=st[a];</span><br><span class="line">  st[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line">  l[tot].f:=f;</span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=st[b];</span><br><span class="line">  st[b]:=tot;</span><br><span class="line">  l[tot].ed:=a;</span><br><span class="line">  l[tot].f:=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">spfa</span><span class="params">(t,st:longint)</span>;</span></span><br><span class="line"><span class="keyword">const</span> qs=<span class="number">500</span>;</span><br><span class="line"><span class="keyword">var</span> q:<span class="keyword">array</span>[<span class="number">1</span>..qs]<span class="keyword">of</span> longint;</span><br><span class="line">    v:<span class="keyword">array</span>[<span class="number">1</span>..qs]<span class="keyword">of</span> boolean;</span><br><span class="line">    hd,tl,k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  hd:=<span class="number">0</span>;</span><br><span class="line">  tl:=<span class="number">1</span>;</span><br><span class="line">  d[t,st]:=<span class="number">0</span>;</span><br><span class="line">  q[<span class="number">1</span>]:=st;</span><br><span class="line">  fillchar(v,sizeof(v),false);</span><br><span class="line">  v[st]:=true;</span><br><span class="line">  <span class="keyword">while</span> hd&lt;&gt;tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(hd);</span><br><span class="line">    <span class="keyword">if</span> hd&gt;qs <span class="keyword">then</span> hd:=<span class="number">1</span>;</span><br><span class="line">    k:=lst[q[hd]];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> d[t,q[hd]]+ll[k].f&lt;d[t,ll[k].ed] <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        d[t,ll[k].ed]:=d[t,q[hd]]+ll[k].f;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> v[ll[k].ed] <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          v[ll[k].ed]:=true;</span><br><span class="line">          inc(tl);</span><br><span class="line">          <span class="keyword">if</span> tl&gt;qs <span class="keyword">then</span> tl:=<span class="number">1</span>;</span><br><span class="line">          q[tl]:=ll[k].ed;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      k:=ll[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    v[q[hd]]:=false;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">push_flow</span>;</span></span><br><span class="line"><span class="keyword">const</span> qs=<span class="number">10000</span>;</span><br><span class="line"><span class="keyword">var</span> h,e:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1000</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    q:<span class="keyword">array</span>[<span class="number">1</span>..qs]<span class="keyword">of</span> longint;</span><br><span class="line">    hd,tl,k:longint;</span><br><span class="line">    maxf,f:int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(h,sizeof(h),<span class="number">0</span>);</span><br><span class="line">  fillchar(e,sizeof(e),<span class="number">0</span>);</span><br><span class="line">  fillchar(q,sizeof(q),<span class="number">0</span>);</span><br><span class="line">  maxf:=<span class="number">0</span>;</span><br><span class="line">  e[ss]:=inf;</span><br><span class="line">  e[tt]:=-inf;</span><br><span class="line">  h[ss]:=tt;</span><br><span class="line">  hd:=<span class="number">0</span>;</span><br><span class="line">  tl:=<span class="number">1</span>;</span><br><span class="line">  q[<span class="number">1</span>]:=ss;</span><br><span class="line">  <span class="keyword">while</span> hd&lt;&gt;tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(hd);</span><br><span class="line">    <span class="keyword">if</span> hd&gt;qs <span class="keyword">then</span> hd:=<span class="number">1</span>;</span><br><span class="line">    k:=st[q[hd]];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">while</span> (e[q[hd]]&gt;<span class="number">0</span>)<span class="keyword">and</span>(l[k].f&gt;<span class="number">0</span>)<span class="keyword">and</span>((q[hd]=ss)<span class="keyword">or</span>(h[q[hd]]=h[l[k].ed]+<span class="number">1</span>)) <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        f:=min(e[q[hd]],l[k].f);</span><br><span class="line">        dec(e[q[hd]],f);</span><br><span class="line">        inc(e[l[k].ed],f);</span><br><span class="line">        dec(l[k].f,f);</span><br><span class="line">        inc(l[k xor <span class="number">1</span>].f,f);</span><br><span class="line">        <span class="keyword">if</span> l[k].ed=tt <span class="keyword">then</span> inc(maxf,f);</span><br><span class="line">        <span class="keyword">if</span> (l[k].ed&lt;&gt;ss)<span class="keyword">and</span>(l[k].ed&lt;&gt;tt) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          inc(tl);</span><br><span class="line">          <span class="keyword">if</span> tl&gt;qs <span class="keyword">then</span> tl:=<span class="number">1</span>;</span><br><span class="line">          q[tl]:=l[k].ed;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> (e[q[hd]]&gt;<span class="number">0</span>)<span class="keyword">and</span>(q[hd]&lt;&gt;ss)<span class="keyword">and</span>(q[hd]&lt;&gt;tt) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(h[q[hd]]);</span><br><span class="line">      inc(tl);</span><br><span class="line">      <span class="keyword">if</span> tl&gt;qs <span class="keyword">then</span> tl:=<span class="number">1</span>;</span><br><span class="line">      q[tl]:=q[hd];</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(maxf);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b,c);</span><br><span class="line">    link(a,b,c);</span><br><span class="line">    link(b,a,c);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  fillchar(d,sizeof(d),$<span class="number">3</span>f);</span><br><span class="line">  spfa(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">  spfa(<span class="number">2</span>,n);</span><br><span class="line">  tot:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    k:=lst[i];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> d[<span class="number">1</span>,i]+ll[k].f+d[<span class="number">2</span>,ll[k].ed]=d[<span class="number">1</span>,n] <span class="keyword">then</span> insert(i&lt;&lt;<span class="number">1</span>,ll[k].ed&lt;&lt;<span class="number">1</span>-<span class="number">1</span>,inf&gt;&gt;<span class="number">8</span>);</span><br><span class="line">      k:=ll[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(c);</span><br><span class="line">    <span class="keyword">if</span> (i&lt;&gt;<span class="number">1</span>)<span class="keyword">and</span>(i&lt;&gt;n) <span class="keyword">then</span> insert(i&lt;&lt;<span class="number">1</span>-<span class="number">1</span>,i&lt;&lt;<span class="number">1</span>,c);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  ss:=<span class="number">2</span>;</span><br><span class="line">  tt:=n&lt;&lt;<span class="number">1</span>-<span class="number">1</span>;</span><br><span class="line">  push_flow;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-tasks"></i><br>]]>
    
    </summary>
    
      <category term="Max Flow" scheme="http://platypuspro.github.io/tags/Max-Flow/"/>
    
      <category term="Shortest Path" scheme="http://platypuspro.github.io/tags/Shortest-Path/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3930]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3930/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3930/</id>
    <published>2015-04-09T07:59:37.000Z</published>
    <updated>2015-04-09T11:29:44.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-bookmark"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3930" target="_blank" rel="external">传送门</a></p>
<p>Orz伟大领袖<a href="http://lzy-foenix.gitcafe.io/2015/04/09/BZOJ-3930-CQOI2015-%E9%80%89%E6%95%B0/" target="_blank" rel="external">lzy</a></p>
<p><del>BZOJ题被X了…我把题贴出来好了…</del></p>
<h3 id="题目描述">题目描述</h3><p>我们知道，从区间$[L,H]$（$L$和$H$为整数）中选取$N$个整数，总共有$(H-L+1)^N$种方案。小z很好奇这样选出的数的最大公约数的规律，他决定对每种方案选出的$N$个整数都求一次最大公约数，以便进一步研究。然而他很快发现工作量太大了，于是向你寻求帮助。<br>你的任务很简单，小z会告诉你一个整数$K$，你需要回答他最大公约数刚好为$K$的选取方案有多少个。由于方案数较大，你只需要输出其除以$1000000007$的余数即可。</p>
<h3 id="输入格式">输入格式</h3><p>输入一行，包含4个空格分开的正整数，依次为$N,K,L,H$</p>
<h3 id="输出格式">输出格式</h3><p>输出一个整数，为所求方案数。</p>
<h3 id="输入样例">输入样例</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 2 2 4</span><br></pre></td></tr></table></figure>
<h3 id="输出样例">输出样例</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<h3 id="样例解释">样例解释</h3><p>所有可能的选择方案：$(2,2),(2,3),(2,4),(3,2),(3,3),(3,4),(4,2),(4,3),(4,4)$<br>其中最大公约数等于$2$的只有$3$组：$(2,2),(2,4),(4,2)$</p>
<h3 id="数据范围">数据范围</h3><p>对于$30%$的数据，$N\leq 5，H-L\leq 5$<br>对于$100%$的数据，$1\leq N,K\leq 10^9,1\leq L\leq H\leq 10^9,H-L\leq 10^5$</p>
<p>从$[L,H]$中取$n$个数，设这$n$个数为$a_1,a_2,\cdots,a_n$,设</p>
<h4 id="$$F(k)=\sum_{a_1=L}^H_\sum_{a_2=L}^H_\cdots_\sum_{a_n=L}^H=[k_\mid_gcd(a_1,a_2,\cdots,a_n)]$$">$$F(k)=\sum_{a_1=L}^H \sum_{a_2=L}^H \cdots \sum_{a_n=L}^H=[k \mid gcd(a_1,a_2,\cdots,a_n)]$$</h4><h4 id="$$f(k)=\sum_{a_1=L}^H_\sum_{a_2=L}^H_\cdots_\sum_{a_n=L}^H=[k=gcd(a_1,a_2,\cdots,a_n)]$$">$$f(k)=\sum_{a_1=L}^H \sum_{a_2=L}^H \cdots \sum_{a_n=L}^H=[k=gcd(a_1,a_2,\cdots,a_n)]$$</h4><p>那么</p>
<h4 id="$$F(k)=\sum_{d_\mid_k}f(d)$$">$$F(k)=\sum_{d \mid k}f(d)$$</h4><h4 id="$$f(k)=\sum_{k_\mid_d}\mu(\frac{d}{k})F(d)$$">$$f(k)=\sum_{k \mid d}\mu(\frac{d}{k})F(d)$$</h4><p>然后搞一搞$F(k)$</p>
<h4 id="$$F(k)=\sum_{a_1=\lfloor\frac{L-1}{k}\rfloor}^{\lfloor\frac{H}{k}\rfloor}_\sum_{a_2=\lfloor\frac{L-1}{k}\rfloor}^{\lfloor\frac{H}{k}\rfloor}_\cdots_\sum_{a_n=\lfloor\frac{L-1}{k}\rfloor}^{\lfloor\frac{H}{k}\rfloor}[1_\mid_gcd(a_1,a_2,\cdots,a_n)]$$">$$F(k)=\sum_{a_1=\lfloor\frac{L-1}{k}\rfloor}^{\lfloor\frac{H}{k}\rfloor} \sum_{a_2=\lfloor\frac{L-1}{k}\rfloor}^{\lfloor\frac{H}{k}\rfloor} \cdots \sum_{a_n=\lfloor\frac{L-1}{k}\rfloor}^{\lfloor\frac{H}{k}\rfloor}[1 \mid gcd(a_1,a_2,\cdots,a_n)]$$</h4><h4 id="$$F(k)=(\lfloor\frac{H}{k}\rfloor-\lfloor\frac{L-1}{k}\rfloor)^n$$">$$F(k)=(\lfloor\frac{H}{k}\rfloor-\lfloor\frac{L-1}{k}\rfloor)^n$$</h4><p>然后</p>
<h4 id="$$f(k)=\sum_{d’=1}^{\lfloor\frac{H}{k}\rfloor}\mu(d’)(\lfloor\frac{H}{d’\cdot_k}\rfloor-\lfloor\frac{L-1}{d’\cdot_k}\rfloor)^n$$">$$f(k)=\sum_{d’=1}^{\lfloor\frac{H}{k}\rfloor}\mu(d’)(\lfloor\frac{H}{d’\cdot k}\rfloor-\lfloor\frac{L-1}{d’\cdot k}\rfloor)^n$$</h4><p>直接求当然会挂的很惨…</p>
<p>对此，<a href="http://blog.csdn.net/popoqqq/article/details/44917831" target="_blank" rel="external">PoPoQQQ的解法</a>是搞$\mu$的前缀和然后搞个阈值然后blabla…</p>
<p>然而…<a href="http://lzy-foenix.gitcafe.io/2015/04/09/BZOJ-3930-CQOI2015-%E9%80%89%E6%95%B0/" target="_blank" rel="external">lzy</a>早已看透了一切…</p>
<blockquote>
<p>后面那一坨是会出现很多$0$的，所以我们把$=0$的部分跳过去，光计算不等于$0$的时候的$\mu$值，直接用$\mu$的定义来算，而在极限数据中不等于$0$的最多就有$5w$个，所以这样的效率是$O(n^{1/2}+(5w)^{3/2})$效率是$0.2s$左右。  ——lzy</p>
</blockquote>
<p>跪烂了Orz…</p>
<p><i class="fa fa-code fa-2x"></i></p>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3930;</span><br><span class="line"><span class="keyword">const</span> mo=<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">var</span> n,k,l,h:int64;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:int64)</span>:</span>int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qp</span><span class="params">(x,k:int64)</span>:</span>int64;</span><br><span class="line"><span class="keyword">var</span> p:int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=x;</span><br><span class="line">  qp:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> k <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> qp:=(qp*p)<span class="keyword">mod</span> mo;</span><br><span class="line">    p:=(p*p)<span class="keyword">mod</span> mo;</span><br><span class="line">    k:=k&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mu</span><span class="params">(x:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  mu:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> trunc(sqrt(x)) <span class="keyword">do</span> <span class="keyword">while</span> x <span class="keyword">mod</span> i=<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    x:=x <span class="keyword">div</span> i;</span><br><span class="line">    mu:=-mu;</span><br><span class="line">    <span class="keyword">if</span> x <span class="keyword">mod</span> i=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> x&lt;&gt;<span class="number">1</span> <span class="keyword">then</span> mu:=-mu;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">calc</span>;</span></span><br><span class="line"><span class="keyword">var</span> i:longint;</span><br><span class="line">    ans,q:int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  i:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> i&lt;=h <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    q:=qp(h <span class="keyword">div</span>(i*k)-(l-<span class="number">1</span>)<span class="keyword">div</span>(i*k),n);</span><br><span class="line">    <span class="keyword">if</span> q&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> ans:=(ans+mu(i)*q+mo)<span class="keyword">mod</span> mo <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> (l-<span class="number">1</span>)<span class="keyword">div</span> i&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> i:=min(h <span class="keyword">div</span>(h <span class="keyword">div</span> i),(l-<span class="number">1</span>)<span class="keyword">div</span>((l-<span class="number">1</span>)<span class="keyword">div</span> i)) <span class="keyword">else</span> i:=h <span class="keyword">div</span>(h <span class="keyword">div</span> i);</span><br><span class="line">    inc(i);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,k,l,h);</span><br><span class="line">  calc;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-bookmark"></i><br>]]>
    
    </summary>
    
      <category term="Math" scheme="http://platypuspro.github.io/tags/Math/"/>
    
      <category term="Mobius_inversion" scheme="http://platypuspro.github.io/tags/Mobius-inversion/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 2301]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-2301/"/>
    <id>http://platypuspro.github.io/posts/bzoj-2301/</id>
    <published>2015-04-08T11:22:15.000Z</published>
    <updated>2015-04-08T13:19:30.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-rocket fa-spin"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2301" target="_blank" rel="external">传送门</a></p>
<p>先贴点资料 <del>然后跑</del></p>
<p><a href="http://zh.wikipedia.org/wiki/%E9%BB%98%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94%E5%85%AC%E5%BC%8F" target="_blank" rel="external">莫比乌斯反演</a></p>
<p><a href="http://zh.wikipedia.org/wiki/%E9%BB%98%E6%AF%94%E4%B9%8C%E6%96%AF%E5%87%BD%E6%95%B0" target="_blank" rel="external">莫比乌斯函数</a></p>
<p><a href="https://www.zybuluo.com/ZYK1997/note/83900" target="_blank" rel="external">Orz ZYK</a></p>
<p>题目要求$x\in[a,b]\ y\in[c,d]$的结果，根据容斥原理可知其实就是求$(x\in[1,b]\ y\in[1,d])+(x\in[1,a-1]\ y\in[1,c-1])-(x\in[1,a-1]\ y\in[c,d])-(x\in[a,b]\ y\in[1,c-1])$的结果</p>
<p>既然是莫XXX<del>繁衍</del>反演，就要搞两个函数出来 <del>(ZYK:你不证明怎么能用呢！)</del></p>
<p>设</p>
<h4 id="$$F(d)=\sum_{i=1}^n\sum_{j=1}^m[d\mid_gcd(i,j)]$$">$$F(d)=\sum_{i=1}^n\sum_{j=1}^m[d\mid gcd(i,j)]$$</h4><h4 id="$$f(d)=\sum_{i=1}^n\sum_{j=1}^m[d=gcd(i,j)]$$">$$f(d)=\sum_{i=1}^n\sum_{j=1}^m[d=gcd(i,j)]$$</h4><p>那么</p>
<h4 id="$$F(n)=\sum_{d\mid_n}_f(d)$$">$$F(n)=\sum_{d\mid n} f(d)$$</h4><p><del>求详细解释者请自行@ZYK1997</del></p>
<p>根据反演公式</p>
<h4 id="$$f(n)=\sum_{d\mid_n}\mu(d)F(\frac{n}{d})$$">$$f(n)=\sum_{d\mid n}\mu(d)F(\frac{n}{d})$$</h4><p>然后换个元$(d’=\frac{n}{d})$，得</p>
<h4 id="$$f(n)=\sum_{n\mid_d’}\mu(\frac{d’}{n})F(d’)$$">$$f(n)=\sum_{n\mid d’}\mu(\frac{d’}{n})F(d’)$$</h4><p>题目要求的东西搞定了，回过头看看$F(d)$怎么搞</p>
<h4 id="$$F(d)=\sum_{i=1}^n\sum_{j=1}^m[d\mid_gcd(i,j)]$$-1">$$F(d)=\sum_{i=1}^n\sum_{j=1}^m[d\mid gcd(i,j)]$$</h4><h4 id="$$F(d)=\sum_{i=1}^{\lfloor\frac{n}{d}\rfloor}\sum_{j=1}^{\lfloor\frac{m}{d}\rfloor}[1\mid_gcd(i,j)]$$">$$F(d)=\sum_{i=1}^{\lfloor\frac{n}{d}\rfloor}\sum_{j=1}^{\lfloor\frac{m}{d}\rfloor}[1\mid gcd(i,j)]$$</h4><p>(这一步我脑补了好久 = =)</p>
<h4 id="$$F(d)=\lfloor\frac{n}{d}\rfloor\cdot\lfloor\frac{m}{d}\rfloor$$">$$F(d)=\lfloor\frac{n}{d}\rfloor\cdot\lfloor\frac{m}{d}\rfloor$$</h4><p>$F(d)$也弄完了，下面看看怎么搞$\mu$(其实和筛法求$\varphi$的过程很相似…<del>所以我就不讲了 具体看代码吧2333</del>)</p>
<p>最后的$f(k)$大概是这样</p>
<h4 id="$$f(k)=\sum_{i=1}^{\lfloor\frac{min(n,m)}{k}\rfloor}\mu(i)\lfloor\frac{n}{i\cdot_k}\rfloor\lfloor\frac{m}{i\cdot_k}\rfloor$$">$$f(k)=\sum_{i=1}^{\lfloor\frac{min(n,m)}{k}\rfloor}\mu(i)\lfloor\frac{n}{i\cdot k}\rfloor\lfloor\frac{m}{i\cdot k}\rfloor$$</h4><p>但是只靠这一个式子会TLE <del>BZOJ我又卡了你1min我错了QAQ</del></p>
<p>因为后面那一坨下取整在某一段区间内的值是一定的，所以把每一段搞成$\mu$在这一段的和乘上这一段的值</p>
<p>以上求的是$x\in[1,n]\ y\in[1,m]$的$f(k)$，这样答案就可以搞出来了</p>
<blockquote>
<p>不注意int64会WA…</p>
</blockquote>
<p><i class="fa fa-code fa-2x"></i></p>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2301;</span><br><span class="line"><span class="keyword">const</span> maxn=<span class="number">50000</span>;</span><br><span class="line"><span class="keyword">var</span> prime:<span class="keyword">array</span>[<span class="number">1</span>..maxn]<span class="keyword">of</span> boolean;</span><br><span class="line">    sieve,mu:<span class="keyword">array</span>[<span class="number">0</span>..maxn]<span class="keyword">of</span> longint;</span><br><span class="line">    n,i,a,b,c,d,k,tot:longint;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">init_mu</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(prime,sizeof(prime),true);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  mu[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> maxn <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> prime[i] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(tot);</span><br><span class="line">      sieve[tot]:=i;</span><br><span class="line">      mu[i]:=-<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> tot <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> i*sieve[j]&gt;maxn <span class="keyword">then</span> break;</span><br><span class="line">      prime[i*sieve[j]]:=false;</span><br><span class="line">      <span class="keyword">if</span> i <span class="keyword">mod</span> sieve[j]=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        mu[i*sieve[j]]:=<span class="number">0</span>;</span><br><span class="line">        break;</span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">else</span> mu[i*sieve[j]]:=-mu[i];</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> maxn <span class="keyword">do</span> inc(mu[i],mu[i-<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solve</span><span class="params">(a,b:longint)</span>:</span>int64;</span><br><span class="line"><span class="keyword">var</span> d,i,j:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  a:=a <span class="keyword">div</span> k;</span><br><span class="line">  b:=b <span class="keyword">div</span> k;</span><br><span class="line">  d:=min(a,b);</span><br><span class="line">  solve:=<span class="number">0</span>;</span><br><span class="line">  i:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> i&lt;=d <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    j:=min(a <span class="keyword">div</span>(a <span class="keyword">div</span> i),b <span class="keyword">div</span>(b <span class="keyword">div</span> i));</span><br><span class="line">    inc(solve,(mu[j]-mu[i-<span class="number">1</span>])*int64(a <span class="keyword">div</span> i)*int64(b <span class="keyword">div</span> i));</span><br><span class="line">    i:=j+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n);</span><br><span class="line">  init_mu;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b,c,d,k);</span><br><span class="line">    writeln(solve(b,d)+solve(a-<span class="number">1</span>,c-<span class="number">1</span>)-solve(b,c-<span class="number">1</span>)-solve(a-<span class="number">1</span>,d));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-rocket fa-spin"></i><br>]]>
    
    </summary>
    
      <category term="Math" scheme="http://platypuspro.github.io/tags/Math/"/>
    
      <category term="Mobius_inversion" scheme="http://platypuspro.github.io/tags/Mobius-inversion/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3560]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3560/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3560/</id>
    <published>2015-04-03T10:14:12.000Z</published>
    <updated>2015-04-17T12:01:53.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-space-shuttle"></i> <i class="fa fa-times-circle"></i> <i class="fa fa-space-shuttle fa-flip-horizontal"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3560" target="_blank" rel="external">传送门</a></p>
<p>Orz <a href="http://blog.csdn.net/popoqqq/article/details/42739963" target="_blank" rel="external">PoPoQQQ</a> <del>里面似乎有些错误的说</del></p>
<p>首先把每个$a_i$分解质因数，分解成各个质因子的次幂相乘</p>
<p>假设分解后某个质数$p$在每个$a_i$中的次数分别是$b_i$，那么$p$对答案的贡献就是 (注意:这个式子及以下的式子仅对于<strong>一个</strong>质数$p$而言)</p>
<h2 id="$$\sum_{i_1=0}^{b_1}\sum_{i_2=0}^{b_2}\cdots_\sum_{i_n=0}^{b_n}\varphi(p^{\sum_{j=1}^n_i_j})$$">$$\sum_{i_1=0}^{b_1}\sum_{i_2=0}^{b_2}\cdots \sum_{i_n=0}^{b_n}\varphi(p^{\sum_{j=1}^n i_j})$$</h2><p>例如对于样例数据$6,10,15$，将三个数中的质因数$2,3,5$分开以后所有情况如下表所示</p>
<table>
<thead>
<tr>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">5</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">$2^0 2^0 2^0$</td>
<td style="text-align:center">$3^0 3^0 3^0$</td>
<td style="text-align:center">$5^0 5^0 5^0$</td>
</tr>
<tr>
<td style="text-align:center">$2^0 2^0 2^1$</td>
<td style="text-align:center">$3^0 3^0 3^1$</td>
<td style="text-align:center">$5^0 5^0 5^1$</td>
</tr>
<tr>
<td style="text-align:center">$2^0 2^1 2^0$</td>
<td style="text-align:center">$3^1 3^0 3^0$</td>
<td style="text-align:center">$5^0 5^1 5^0$</td>
</tr>
<tr>
<td style="text-align:center">$2^0 2^1 2^1$</td>
<td style="text-align:center">$3^1 3^0 3^1$</td>
<td style="text-align:center">$5^0 5^1 5^1$</td>
</tr>
</tbody>
</table>
<p>三列中每列挑一个三元组组合起来就是一组合法解 例如第一列第三行 第二列第一行 第三列第四行组合起来就是$(1,10,5)$</p>
<p>上表对应的$\varphi$为</p>
<table>
<thead>
<tr>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">5</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">$\varphi(1)=1$</td>
<td style="text-align:center">$\varphi(1)=1$</td>
<td style="text-align:center">$\varphi(1)=1$</td>
</tr>
<tr>
<td style="text-align:center">$\varphi(2)=1$</td>
<td style="text-align:center">$\varphi(3)=2$</td>
<td style="text-align:center">$\varphi(5)=4$</td>
</tr>
<tr>
<td style="text-align:center">$\varphi(2)=1$</td>
<td style="text-align:center">$\varphi(3)=2$</td>
<td style="text-align:center">$\varphi(5)=4$</td>
</tr>
<tr>
<td style="text-align:center">$\varphi(4)=2$</td>
<td style="text-align:center">$\varphi(9)=6$</td>
<td style="text-align:center">$\varphi(25)=20$</td>
</tr>
</tbody>
</table>
<p>因为$\varphi$是积性函数且质因数肯定两两互质，所以这些$\varphi$是可以直接相乘的，对于$(1,10,5)$的答案就是$1*1*20=20$</p>
<p>所以就得到了上面那个式子</p>
<p>根据$\varphi(x^k)=\varphi(x)*x^{k-1}=(x-1)*x^{k-1}$($x$为质数且$k\geq 1$)变形一下，原式搞成</p>
<h2 id="$$((\sum_{i_1=0}^{b_1}\sum_{i_2=0}^{b_2}\cdots_\sum_{i_n=0}^{b_n}p^{\sum_{j=1}^n_i_j})-1)\times_\frac{p-1}{p}+1$$">$$((\sum_{i_1=0}^{b_1}\sum_{i_2=0}^{b_2}\cdots \sum_{i_n=0}^{b_n}p^{\sum_{j=1}^n i_j})-1)\times \frac{p-1}{p}+1$$</h2><p>其中$-1$再$+1$是为了特判$p$的指数为$0$的情况</p>
<p>然后继续搞一搞，搞成</p>
<h2 id="$$((\prod_{i=1}^n_\sum_{j=0}^{b_i}_p^j)-1)\times_\frac{p-1}{p}+1$$">$$((\prod_{i=1}^n \sum_{j=0}^{b_i} p^j)-1)\times \frac{p-1}{p}+1$$</h2><p>咦,只跟当前的$p$有关耶,而且$p^j$似乎可以预处理吧…</p>
<p>那么问题就解决了</p>
<p>将$a_i(i\in [1,n])$每个都分解质因数，把质因数和它的指数存起来，然后放在一起排个序</p>
<p>每次处理一个质因子$p$(因为排过序了所以在数组里是连续的一段)，然后根据上面的式子搞一搞就出来了~</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3560;</span><br><span class="line"><span class="keyword">const</span> mo=<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">type</span> rec=<span class="keyword">record</span> a,p:longint; <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">2500000</span>]<span class="keyword">of</span> rec;</span><br><span class="line">    n,a,i,j,tot:longint;</span><br><span class="line">    ans:int64;</span><br><span class="line">    pre:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100</span>]<span class="keyword">of</span> int64;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">count</span><span class="params">(x:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> trunc(sqrt(x)) <span class="keyword">do</span> <span class="keyword">if</span> x <span class="keyword">mod</span> i=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(tot);</span><br><span class="line">    s[tot].a:=i;</span><br><span class="line">    <span class="keyword">while</span> x <span class="keyword">mod</span> i=<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(s[tot].p);</span><br><span class="line">      x:=x <span class="keyword">div</span> i;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> x&lt;&gt;<span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(tot);</span><br><span class="line">    s[tot].a:=x;</span><br><span class="line">    s[tot].p:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line">    mid,p:rec;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=s[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> (s[i].a&lt;mid.a)<span class="keyword">or</span>((s[i].a=mid.a)<span class="keyword">and</span>(s[i].p&lt;mid.p)) <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> (s[j].a&gt;mid.a)<span class="keyword">or</span>((s[j].a=mid.a)<span class="keyword">and</span>(s[j].p&gt;mid.p)) <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=s[i];</span><br><span class="line">      s[i]:=s[j];</span><br><span class="line">      s[j]:=p;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qp</span><span class="params">(x,p:longint)</span>:</span>int64;</span><br><span class="line"><span class="keyword">var</span> pre:int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  qp:=<span class="number">1</span>;</span><br><span class="line">  pre:=x;</span><br><span class="line">  <span class="keyword">while</span> p&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> p <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> qp:=(qp*pre)<span class="keyword">mod</span> mo;</span><br><span class="line">    pre:=(pre*pre)<span class="keyword">mod</span> mo;</span><br><span class="line">    p:=p&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">calc</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i:longint;</span><br><span class="line">    p:int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  pre[<span class="number">0</span>]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> s[r].p <span class="keyword">do</span> pre[i]:=(pre[i-<span class="number">1</span>]*s[l].a)<span class="keyword">mod</span> mo;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> s[r].p <span class="keyword">do</span> pre[i]:=(pre[i]+pre[i-<span class="number">1</span>])<span class="keyword">mod</span> mo;</span><br><span class="line">  p:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=l <span class="keyword">to</span> r <span class="keyword">do</span> p:=(p*pre[s[i].p])<span class="keyword">mod</span> mo;</span><br><span class="line">  <span class="keyword">if</span> p=<span class="number">1</span> <span class="keyword">then</span> p:=mo <span class="keyword">else</span> dec(p);</span><br><span class="line">  p:=(((p*qp(s[l].a,mo-<span class="number">2</span>))<span class="keyword">mod</span> mo)*(s[l].a-<span class="number">1</span>)+<span class="number">1</span>)<span class="keyword">mod</span> mo;</span><br><span class="line">  ans:=(ans*p)<span class="keyword">mod</span> mo;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a);</span><br><span class="line">    count(a);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  qsort(<span class="number">1</span>,tot);</span><br><span class="line">  i:=<span class="number">1</span>;</span><br><span class="line">  ans:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> i&lt;=tot <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    j:=i;</span><br><span class="line">    <span class="keyword">while</span> (j&lt;tot)<span class="keyword">and</span>(s[j+<span class="number">1</span>].a=s[i].a) <span class="keyword">do</span> inc(j);</span><br><span class="line">    calc(i,j);</span><br><span class="line">    i:=j+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-space-shuttle"></i> <i class="fa fa-times-circle"></i> <i class="fa fa-space-shuttle fa-flip-horizontal"></i><br>]]>
    
    </summary>
    
      <category term="Math" scheme="http://platypuspro.github.io/tags/Math/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3884]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3884/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3884/</id>
    <published>2015-04-03T08:49:30.000Z</published>
    <updated>2015-04-03T10:11:52.000Z</updated>
    <content type="html"><![CDATA[<p><i class="fa fa-btc fa-spin"></i><br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3884" target="_blank" rel="external">传送门</a></p>
<h1 id="$$2^{2^{2^{2^{2\cdots}}}}\_mod\_p$$">$$2^{2^{2^{2^{2\cdots}}}}\ mod\ p$$</h1><p>Orz <a href="http://blog.csdn.net/PoPoQQQ/article/details/43951401" target="_blank" rel="external">PoPoQQQ</a></p>
<p>将$p$分解为$2^k$与一个奇数的积: $p=2^k \cdot q$，原式即为</p>
<h2 id="$$2^k(2^{(2^{2^{2^{2\cdots}}}-k)}mod\_q)mod\_p$$">$$2^k(2^{(2^{2^{2^{2\cdots}}}-k)}mod\ q)mod\ p$$</h2><p>由<a href="http://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E5%AE%9A%E7%90%86_(%E6%95%B0%E8%AE%BA)" target="_blank" rel="external">欧拉定理</a>得</p>
<h2 id="$$2^k(2^{(2^{2^{2^{2\cdots}}}-k)mod\_\varphi(q)}mod\_q)mod\_p$$">$$2^k(2^{(2^{2^{2^{2\cdots}}}-k)mod\ \varphi(q)}mod\ q)mod\ p$$</h2><p>发现上面的一坨$(2^{2^{2^{2\cdots}}}-k)mod\ \varphi(q)$似乎和原式有点像啊</p>
<blockquote>
<p>Tips: 经打表可得：似乎奇数的欧拉函数都是偶数的说</p>
</blockquote>
<p>然后先把$mod\ \varphi(q)$意义下的$-k$扔到一边一会再算，递归化简这个式子，发现递归的终点是$(2^{2^{2^{2^{2\cdots}}}}-k)\ mod\ 1$</p>
<p>而任何数$mod\ 1$都是$0$，然后…就搞完了…回溯算算就行了</p>
<p><i class="fa fa-code fa-2x"></i></p>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3884;</span><br><span class="line"><span class="keyword">var</span> t,p:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calc_phi</span><span class="params">(x:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> cnt,i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  cnt:=x;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> trunc(sqrt(x)) <span class="keyword">do</span> <span class="keyword">if</span> x <span class="keyword">mod</span> i=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    cnt:=cnt <span class="keyword">div</span> i*(i-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span> x <span class="keyword">mod</span> i=<span class="number">0</span> <span class="keyword">do</span> x:=x <span class="keyword">div</span> i;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> x=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">exit</span>(cnt) <span class="keyword">else</span> <span class="keyword">exit</span>(cnt <span class="keyword">div</span> x*(x-<span class="number">1</span>));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qp</span><span class="params">(x,k,m:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> p:int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  qp:=<span class="number">1</span>;</span><br><span class="line">  p:=x;</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> k <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> qp:=(qp*p)<span class="keyword">mod</span> m;</span><br><span class="line">    p:=(p*p)<span class="keyword">mod</span> m;</span><br><span class="line">    k:=k&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">count</span><span class="params">(p:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> k,phi,ans:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> p=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">  k:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> p <span class="keyword">and</span> <span class="number">1</span>=<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    p:=p&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    inc(k);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  phi:=calc_phi(p);</span><br><span class="line">  ans:=(count(phi)+phi-k <span class="keyword">mod</span> phi)<span class="keyword">mod</span> phi;</span><br><span class="line">  <span class="keyword">exit</span>((qp(<span class="number">2</span>,ans,p)<span class="keyword">mod</span> p)&lt;&lt;k);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(t);</span><br><span class="line">  <span class="keyword">for</span> t:=<span class="number">1</span> <span class="keyword">to</span> t <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(p);</span><br><span class="line">    writeln(count(p));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p><i class="fa fa-btc fa-spin"></i><br>]]>
    
    </summary>
    
      <category term="Math" scheme="http://platypuspro.github.io/tags/Math/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 1010]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-1010/"/>
    <id>http://platypuspro.github.io/posts/bzoj-1010/</id>
    <published>2015-03-20T23:42:33.000Z</published>
    <updated>2015-03-21T00:59:06.000Z</updated>
    <content type="html"><![CDATA[<p>$\Xi$<br><a id="more"></a><br>若将第$j+1$件到第$i$件放在一起，则<strong>总共</strong>(算上之前的决策)需要花费$f_i=f_j+(\sum_{k=j+1}^{i}C_k+i-j-L-1)^2$</p>
<p>所以方程为$f_i=min{\lbrace}f_j+(sum_i-sum_j+i-j-L-1)^2\rbrace\ (sum_x=\sum_{i=1}^{x}C_i)$</p>
<p>若决策$k$优于决策$j(0{\leq}k,j&lt;i)$，则$f_k+(sum_i+i-sum_k-k-L-1)^2&lt;f_j+(sum_i+i-sum_j-j-L-1)^2$</p>
<p>整理一下，设$P_i=sum_i+i$，把含$i$的都扔到一边，得$f_k+(P_k+L+1)^2-f_j-(P_j+L+1)^2&lt;P_i(P_k-P_j)$</p>
<p>把$(P_k-P_j)$除过去，得到了一个类似计算斜率的式子，设$G_i=f_i+(P_i+L+1)^2$，得到$\frac{G_k-G_j}{P_k-P_j}&lt;P_i$</p>
<p>因为$P_i$单调递增，所以斜率单调递增，成了下凸壳，用单调队列搞一下就行了</p>
<p>对于每次决策$f_i$，由上面的公式可知，最优解就在下凸壳上最后一个满足斜率小于$P_i$的线段的右端点</p>
<p>所以对于每次决策，在单调队列中找到最优解，更新$f_i$，维护下凸壳性质并加入当前点就好了</p>
<blockquote>
<p>注意int64</p>
</blockquote>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1010;</span><br><span class="line"><span class="keyword">var</span> q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,i,l,hd,tl:longint;</span><br><span class="line">    f,pre:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50000</span>]<span class="keyword">of</span> int64;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calc</span><span class="params">(i,j:longint)</span>:</span>extended;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">exit</span>((f[i]-f[j]+sqr(pre[i]+l+<span class="number">1</span>)-sqr(pre[j]+l+<span class="number">1</span>))/((pre[i]-pre[j])*<span class="number">2</span>));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,l);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(pre[i]);</span><br><span class="line">    inc(pre[i],pre[i-<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(pre[i],i);</span><br><span class="line">  hd:=<span class="number">0</span>;</span><br><span class="line">  tl:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">while</span> (hd&lt;tl)<span class="keyword">and</span>(calc(q[hd],q[hd+<span class="number">1</span>])&lt;pre[i]) <span class="keyword">do</span> inc(hd);</span><br><span class="line">    f[i]:=f[q[hd]]+sqr(pre[i]-pre[q[hd]]-l-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span> (tl&gt;hd)<span class="keyword">and</span>(calc(q[tl-<span class="number">1</span>],q[tl])&gt;calc(q[tl],i)) <span class="keyword">do</span> dec(tl);</span><br><span class="line">    inc(tl);</span><br><span class="line">    q[tl]:=i;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(f[n]);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>$\Xi$<br>]]>
    
    </summary>
    
      <category term="Dynamic Programming" scheme="http://platypuspro.github.io/tags/Dynamic-Programming/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3289]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3289/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3289/</id>
    <published>2015-03-20T12:39:02.000Z</published>
    <updated>2015-03-20T13:51:52.000Z</updated>
    <content type="html"><![CDATA[<p>$\Omega$<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3289" target="_blank" rel="external">传送门</a></p>
<p><del>莫队尼玛26s才过</del></p>
<p>因为这题没给数据范围，树状数组不知道开多大，所以先离散化一下 <del>P党程序里写了俩快排真长…TAT</del></p>
<p>首先还是分块+排序，节省转移时的消耗，然后转移时要注意这些：</p>
<ul>
<li><p>修改区间左端点就查询比左端点的数小的，右端点就查询比右端点的数大的（逆序对判断条件：$i&lt;j且a[i]&gt;a[j]$）</p>
</li>
<li><p>当前区间向询问的区间转移时要注意<code>for</code>循环的顺序，一定是当前区间端点向询问区间端点逐个转移，否则有的情况会考虑不到（例如样例这样）</p>
</li>
</ul>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3289;</span><br><span class="line"><span class="keyword">type</span> qu=<span class="keyword">record</span> l,r,id,ans:longint; <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> bit,pos,bl,a,s:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">50000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    ask:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">50000</span>]<span class="keyword">of</span> qu;</span><br><span class="line">    n,q,i,block,tot,cnt:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">c</span><span class="params">(x:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">exit</span>(x <span class="keyword">and</span> -x);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sml</span><span class="params">(a,b:qu)</span>:</span>boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> bl[a.l]=bl[b.l] <span class="keyword">then</span> <span class="keyword">exit</span>(a.r&lt;b.r);</span><br><span class="line">  <span class="keyword">exit</span>(a.l&lt;b.l);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line">    mid,p:qu;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=ask[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> sml(ask[i],mid) <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> sml(mid,ask[j]) <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=ask[i];</span><br><span class="line">      ask[i]:=ask[j];</span><br><span class="line">      ask[j]:=p;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort_</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j,mid,p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=a[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> a[i]&lt;mid <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> a[j]&gt;mid <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=a[i];</span><br><span class="line">      a[i]:=a[j];</span><br><span class="line">      a[j]:=p;</span><br><span class="line">      p:=pos[i];</span><br><span class="line">      pos[i]:=pos[j];</span><br><span class="line">      pos[j]:=p;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort_(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort_(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(p:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  query:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> p&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(query,bit[p]);</span><br><span class="line">    dec(p,c(p));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(p,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">while</span> p&lt;=cnt <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(bit[p],d);</span><br><span class="line">    inc(p,c(p));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">solve</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j,l,r:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(bit,sizeof(bit),<span class="number">0</span>);</span><br><span class="line">  l:=<span class="number">1</span>;</span><br><span class="line">  r:=<span class="number">0</span>;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> q <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> j:=l <span class="keyword">to</span> ask[i].l-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      dec(tot,query(s[j]-<span class="number">1</span>));</span><br><span class="line">      modify(s[j],-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">for</span> j:=l-<span class="number">1</span> <span class="keyword">downto</span> ask[i].l <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(tot,query(s[j]-<span class="number">1</span>));</span><br><span class="line">      modify(s[j],<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">for</span> j:=r+<span class="number">1</span> <span class="keyword">to</span> ask[i].r <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(tot,query(cnt)-query(s[j]));</span><br><span class="line">      modify(s[j],<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">for</span> j:=r <span class="keyword">downto</span> ask[i].r+<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      dec(tot,query(cnt)-query(s[j]));</span><br><span class="line">      modify(s[j],-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    l:=ask[i].l;</span><br><span class="line">    r:=ask[i].r;</span><br><span class="line">    ask[i].ans:=tot;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n);</span><br><span class="line">  block:=trunc(sqrt(n));</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> bl[i]:=(i-<span class="number">1</span>) <span class="keyword">div</span> block+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> pos[i]:=i;</span><br><span class="line">  qsort_(<span class="number">1</span>,n);</span><br><span class="line">  cnt:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (i=<span class="number">1</span>)<span class="keyword">or</span>(a[i]&lt;&gt;a[i-<span class="number">1</span>]) <span class="keyword">then</span> inc(cnt);</span><br><span class="line">    s[pos[i]]:=cnt;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  readln(q);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> q <span class="keyword">do</span> <span class="keyword">with</span> ask[i] <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(l,r);</span><br><span class="line">    id:=i;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  qsort(<span class="number">1</span>,q);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> q <span class="keyword">do</span> pos[ask[i].id]:=i;</span><br><span class="line">  solve;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> q <span class="keyword">do</span> writeln(ask[pos[i]].ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>$\Omega$<br>]]>
    
    </summary>
    
      <category term="Mo Algorithm" scheme="http://platypuspro.github.io/tags/Mo-Algorithm/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
</feed>