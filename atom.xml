<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Platypus's Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://platypuspro.github.io/"/>
  <updated>2015-06-09T09:12:49.000Z</updated>
  <id>http://platypuspro.github.io/</id>
  
  <author>
    <name><![CDATA[Platypus]]></name>
    <email><![CDATA[1293705262@qq.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[BZOJ 2242]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-2242/"/>
    <id>http://platypuspro.github.io/posts/bzoj-2242/</id>
    <published>2015-06-09T07:46:28.000Z</published>
    <updated>2015-06-09T09:12:49.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2242" target="_blank" rel="external">传送门</a></p>
<p>尼玛每次BSGS忘了清空哈希一直冲突搞了我一上午 <del>然而还是会冲突，所以要拉链…</del></p>
<p>第一问…直接快速幂</p>
<p>第二问…费马小定理，所以快速幂 <del>因为我又忘了扩展欧几里得怎么写啊QAQ</del></p>
<p>第三问…BSGS，搞法如下</p>
<p>设$m=\lceil sqrt(p)\rceil,x=i\times m+j,j\in[0,m)$</p>
<p>$Y^x=Y^{i\times m+j}$</p>
<p>$Y^{i\times m+j}\equiv Z(mod\ p)$</p>
<p>$Y^j\equiv Z\times Y^{-i\times m}(mod\ p)$</p>
<p>处理出来$j\in[1,m)$的所有$Y^j$，存到哈希表里，然后枚举后面那一坨中的$i$，若哈希表中出现过就输出答案跳出</p>
<p>那么问题来了，求$Y^m$逆元技术哪家强？</p>
<p>它的逆元即为$(Y^m)^{p-2}$</p>
<p>$(Y^m)^{p-2}=Y^{m\times(p-2)}$</p>
<p>因为$p$为质数，由欧拉定理得$Y^{m\times(p-2)}=Y^{(m\times(p-2))mod\ \varphi(p)}=Y^{(m\times(p-2))mod\ (p-1)}=Y^{(m\times(p-1)-m)mod\ (p-1)}=Y^{p-m-1}$</p>
<p>这样就能求后面那一项了</p>
<p>我的哈希不拉链会冲突 = = 没有map的P党你们伤不起啊QAQ</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2242;</span><br><span class="line"><span class="keyword">const</span> mo=<span class="number">100007</span>;</span><br><span class="line"><span class="keyword">var</span> t,k,i:longint;</span><br><span class="line">    y,z,p:int64;</span><br><span class="line">    h:<span class="keyword">array</span>[<span class="number">0</span>..mo,<span class="number">1</span>..<span class="number">2</span>]<span class="keyword">of</span> <span class="keyword">record</span> p:longint; k:int64; <span class="keyword">end</span>;</span><br><span class="line">    cnt:<span class="keyword">array</span>[<span class="number">0</span>..mo]<span class="keyword">of</span> longint;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mul</span><span class="params">(a,b:int64)</span>:</span>int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  mul:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> b&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> b <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> mul:=(mul+a)<span class="keyword">mod</span> p;</span><br><span class="line">    a:=a&lt;&lt;<span class="number">1</span> <span class="keyword">mod</span> p;</span><br><span class="line">    b:=b&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qpower</span><span class="params">(x,k:int64)</span>:</span>int64;</span><br><span class="line"><span class="keyword">var</span> ans:int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ans:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> k&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> k <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> ans:=mul(ans,x);</span><br><span class="line">    x:=mul(x,x);</span><br><span class="line">    k:=k&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hash</span><span class="params">(x:int64)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> h:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  h:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> x&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    h:=(h*<span class="number">31</span>+x <span class="keyword">mod</span> <span class="number">10</span>)<span class="keyword">mod</span> mo;</span><br><span class="line">    x:=x <span class="keyword">div</span> <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(h);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">BSGS</span>;</span></span><br><span class="line"><span class="keyword">var</span> m,t,yy,zz:int64;</span><br><span class="line">    i,j,s:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(cnt,sizeof(cnt),<span class="number">0</span>);</span><br><span class="line">  m:=trunc(sqrt(p)+<span class="number">1</span>-(<span class="number">1</span>e-<span class="number">3</span>));</span><br><span class="line">  t:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    t:=mul(t,y);</span><br><span class="line">    s:=hash(t);</span><br><span class="line">    inc(cnt[s]);</span><br><span class="line">    h[s,cnt[s]].p:=i;</span><br><span class="line">    h[s,cnt[s]].k:=t;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  yy:=qpower(y,p-m-<span class="number">1</span>);</span><br><span class="line">  zz:=z;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> m-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    s:=hash(zz);</span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> cnt[s] <span class="keyword">do</span> <span class="keyword">if</span> h[s,j].k=zz <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      writeln(m*i+h[s,j].p);</span><br><span class="line">      <span class="keyword">exit</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    zz:=mul(zz,yy);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(<span class="string">'Orz, I cannot find x!'</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(t,k);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> t <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(y,z,p);</span><br><span class="line">    <span class="keyword">if</span> k=<span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      writeln(qpower(y,z));</span><br><span class="line">      continue;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    y:=y <span class="keyword">mod</span> p;</span><br><span class="line">    z:=z <span class="keyword">mod</span> p;</span><br><span class="line">    <span class="keyword">if</span> (y=<span class="number">0</span>)<span class="keyword">and</span>(z&lt;&gt;<span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      writeln(<span class="string">'Orz, I cannot find x!'</span>);</span><br><span class="line">      continue;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> k=<span class="number">2</span> <span class="keyword">then</span> writeln(mul(qpower(y,p-<span class="number">2</span>),z));</span><br><span class="line">    <span class="keyword">if</span> k=<span class="number">3</span> <span class="keyword">then</span> <span class="keyword">if</span> y=<span class="number">0</span> <span class="keyword">then</span> writeln(<span class="string">'1'</span>) <span class="keyword">else</span> BSGS;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2242" target="_blank" rel="external">传送门</a></p>
<p>尼玛每次BSGS忘了]]>
    </summary>
    
      <category term="BSGS" scheme="http://platypuspro.github.io/tags/BSGS/"/>
    
      <category term="Math" scheme="http://platypuspro.github.io/tags/Math/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4105]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-4105/"/>
    <id>http://platypuspro.github.io/posts/bzoj-4105/</id>
    <published>2015-06-09T07:46:19.000Z</published>
    <updated>2015-06-09T08:38:19.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4105" target="_blank" rel="external">不稳定的传送门</a></p>
<h3 id="Description">Description</h3><p>现有一个长度为$N$的序列$ \lbrace X_1,X_2,…,X_N\rbrace $，要求支持两种操作：<br>$1.\ 0\ l\ r$  表示将$\forall i\in [l,r],X_i = X_i^2\ {\rm mod}\ p$<br>$2.\ 1\ l\ r$  询问$\sum_{l\leq i\leq r}X_i$</p>
<h3 id="Input">Input</h3><p>第一行有三个整数$N，M，p$，分别代表序列的长度、平方操作与询问操作的总次数以及在平方操作中所要模的数。<br>接下来一行$N$个数代表一开始的序列$\lbrace X_1,X_2,…,X_N\rbrace $。<br>接下来$M$行，每行三个整数$op,l,r$。其中$op$代表本次操作的类型。若$op=0$，代表这是一次平方操作，平方的区间为$[l,r]$；如果$op=1$，代表这是一次询问操作，询问的区间为$[l,r]$。</p>
<h3 id="Output">Output</h3><p>对于每次的询问操作，输出一行代表这段区间内数的总和。注意：答案没有对任何数取模。</p>
<h3 id="Sample_Input">Sample Input</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3 3 11</span><br><span class="line">1 2 3</span><br><span class="line">1 1 3</span><br><span class="line">0 1 3</span><br><span class="line">1 1 3</span><br></pre></td></tr></table></figure>
<h3 id="Sample_Output">Sample Output</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">14</span><br></pre></td></tr></table></figure>
<h3 id="Hint">Hint</h3><p>对于$100\%$的数据，保证$\forall i, X_i\in[0, P)$, $l, r\in[1, n]$</p>
<table>
<thead>
<tr>
<th style="text-align:center">测试点</th>
<th style="text-align:center">N</th>
<th style="text-align:center">M</th>
<th style="text-align:center">P</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">$\leq 1000$</td>
<td style="text-align:center">$\leq 1000$</td>
<td style="text-align:center">$=233$</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">$\leq 1000$</td>
<td style="text-align:center">$\leq 1000$</td>
<td style="text-align:center">$=2332$</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">$\leq 100000$</td>
<td style="text-align:center">$\leq 100000$</td>
<td style="text-align:center">$=5$</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">$\leq 100000$</td>
<td style="text-align:center">$\leq 100000$</td>
<td style="text-align:center">$=8192$</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">$\leq 100000$</td>
<td style="text-align:center">$\leq 100000$</td>
<td style="text-align:center">$=23$</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">$\leq 100000$</td>
<td style="text-align:center">$\leq 100000$</td>
<td style="text-align:center">$=45$</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">$\leq 100000$</td>
<td style="text-align:center">$\leq 100000$</td>
<td style="text-align:center">$=37$</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">$\leq 55000$</td>
<td style="text-align:center">$\leq 55000$</td>
<td style="text-align:center">$=4185$</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">$\leq 55000$</td>
<td style="text-align:center">$\leq 55000$</td>
<td style="text-align:center">$=5850$</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td style="text-align:center">$\leq 55000$</td>
<td style="text-align:center">$\leq 55000$</td>
<td style="text-align:center">$=2975$</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td style="text-align:center">$\leq 55000$</td>
<td style="text-align:center">$\leq 55000$</td>
<td style="text-align:center">$=2542$</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td style="text-align:center">$\leq 55000$</td>
<td style="text-align:center">$\leq 55000$</td>
<td style="text-align:center">$=2015$</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td style="text-align:center">$\leq 60000$</td>
<td style="text-align:center">$\leq 60000$</td>
<td style="text-align:center">$=2003$</td>
</tr>
<tr>
<td style="text-align:center">14</td>
<td style="text-align:center">$\leq 65000$</td>
<td style="text-align:center">$\leq 65000$</td>
<td style="text-align:center">$=2010$</td>
</tr>
<tr>
<td style="text-align:center">15</td>
<td style="text-align:center">$\leq 70000$</td>
<td style="text-align:center">$\leq 70000$</td>
<td style="text-align:center">$=4593$</td>
</tr>
<tr>
<td style="text-align:center">16</td>
<td style="text-align:center">$\leq 75000$</td>
<td style="text-align:center">$\leq 75000$</td>
<td style="text-align:center">$=4562$</td>
</tr>
<tr>
<td style="text-align:center">17</td>
<td style="text-align:center">$\leq 80000$</td>
<td style="text-align:center">$\leq 80000$</td>
<td style="text-align:center">$=1034$</td>
</tr>
<tr>
<td style="text-align:center">18</td>
<td style="text-align:center">$\leq 85000$</td>
<td style="text-align:center">$\leq 85000$</td>
<td style="text-align:center">$=5831$</td>
</tr>
<tr>
<td style="text-align:center">19</td>
<td style="text-align:center">$\leq 90000$</td>
<td style="text-align:center">$\leq 90000$</td>
<td style="text-align:center">$=9905$</td>
</tr>
<tr>
<td style="text-align:center">20</td>
<td style="text-align:center">$\leq 100000$</td>
<td style="text-align:center">$\leq 100000$</td>
<td style="text-align:center">$=9977$</td>
</tr>
</tbody>
</table>
<p>在模意义下，任何数字一直平方都会进入$\rho$或$O$型循环</p>
<p>打表可以发现这些模数的所有循环节长度的${\rm LCM}$都是$\leq 60$的（本来想贴上每个的长度的…发现打表的程序删了T T）</p>
<p>那么线段树中每个节点维护一个环，修改时转一下就行了</p>
<p>注意$\rho$型循环中还没真正进入循环（也就是还在柄上）的情况，还没进循环时先不存，等转进循环时再算</p>
<p>先处理出$[0,p-1]$中真正在循环中的数，然后建树，线段树合并时长度取左右儿子长度的${\rm LCM}$，环上每个点的数值取左右儿子这一位的和</p>
<p>别的操作自行YY即可</p>
<p>顺便贴一发<a href="http://zyk1997.github.io/2015/06/04/THOI2015/" target="_blank" rel="external">题解</a>…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4105;</span><br><span class="line"><span class="keyword">type</span> circ=<span class="keyword">record</span> nxt,k:longint; <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200000</span>]<span class="keyword">of</span> <span class="keyword">record</span> l,r,len,sum,lc,rc,mk,cir:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,m,mo,i,op,l,r,tot,rt,cir:longint;</span><br><span class="line">    v:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    incir:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    x:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    c:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">12000000</span>]<span class="keyword">of</span> circ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gcd</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> b=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(gcd(b,a <span class="keyword">mod</span> b));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">find_cir</span><span class="params">(x:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> v[x]&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> v[x]=tot <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      t:=x;</span><br><span class="line">      <span class="keyword">repeat</span></span><br><span class="line">        incir[t]:=true;</span><br><span class="line">        t:=t*t <span class="keyword">mod</span> mo;</span><br><span class="line">      <span class="keyword">until</span> t=x;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  v[x]:=tot;</span><br><span class="line">  find_cir(x*x <span class="keyword">mod</span> mo);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">get_cir</span><span class="params">(<span class="keyword">var</span> p,len:longint;k:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> st,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  len:=<span class="number">1</span>;</span><br><span class="line">  inc(cir);</span><br><span class="line">  p:=cir;</span><br><span class="line">  c[p].k:=k;</span><br><span class="line">  st:=p;</span><br><span class="line">  t:=k*k <span class="keyword">mod</span> mo;</span><br><span class="line">  <span class="keyword">while</span> t&lt;&gt;k <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(len);</span><br><span class="line">    inc(cir);</span><br><span class="line">    c[p].nxt:=cir;</span><br><span class="line">    p:=c[p].nxt;</span><br><span class="line">    c[p].k:=t;</span><br><span class="line">    t:=t*t <span class="keyword">mod</span> mo;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  c[p].nxt:=st;</span><br><span class="line">  p:=st;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">add</span><span class="params">(<span class="keyword">var</span> t:longint;c1,c2,len:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,st,p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(cir);</span><br><span class="line">  t:=cir;</span><br><span class="line">  st:=cir;</span><br><span class="line">  p:=st;</span><br><span class="line">  c[cir].k:=c[c1].k+c[c2].k;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(cir);</span><br><span class="line">    c[p].nxt:=cir;</span><br><span class="line">    p:=cir;</span><br><span class="line">    c1:=c[c1].nxt;</span><br><span class="line">    c2:=c[c2].nxt;</span><br><span class="line">    c[p].k:=c[c1].k+c[c2].k;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  c[p].nxt:=st;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">merge</span><span class="params">(t,c1,c2,len:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    c[t].k:=c[c1].k+c[c2].k;</span><br><span class="line">    t:=c[t].nxt;</span><br><span class="line">    c1:=c[c1].nxt;</span><br><span class="line">    c2:=c[c2].nxt;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">update</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> ll,rl:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  s[t].sum:=s[s[t].lc].sum+s[s[t].rc].sum;</span><br><span class="line">  ll:=s[s[t].lc].len;</span><br><span class="line">  rl:=s[s[t].rc].len;</span><br><span class="line">  <span class="keyword">if</span> (s[t].len=<span class="number">0</span>)<span class="keyword">and</span>(ll&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(rl&lt;&gt;<span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    s[t].len:=ll*rl <span class="keyword">div</span> gcd(ll,rl);</span><br><span class="line">    add(s[t].cir,s[s[t].lc].cir,s[s[t].rc].cir,s[t].len);</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span> merge(s[t].cir,s[s[t].lc].cir,s[s[t].rc].cir,s[t].len);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span><span class="params">(<span class="keyword">var</span> t:longint;l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  s[t].lc:=<span class="number">0</span>;</span><br><span class="line">  s[t].rc:=<span class="number">0</span>;</span><br><span class="line">  s[t].sum:=<span class="number">0</span>;</span><br><span class="line">  s[t].len:=<span class="number">0</span>;</span><br><span class="line">  s[t].mk:=<span class="number">0</span>;</span><br><span class="line">  s[t].l:=l;</span><br><span class="line">  s[t].r:=r;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> incir[x[l]] <span class="keyword">then</span> get_cir(s[t].cir,s[t].len,x[l]);</span><br><span class="line">    s[t].sum:=x[l];</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  build(s[t].lc,l,mid);</span><br><span class="line">  build(s[t].rc,mid+<span class="number">1</span>,r);</span><br><span class="line">  update(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">rotate</span><span class="params">(t,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> t=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  d:=d <span class="keyword">mod</span> s[t].len;</span><br><span class="line">  inc(s[t].mk,d);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> d <span class="keyword">do</span> s[t].cir:=c[s[t].cir].nxt;</span><br><span class="line">  s[t].sum:=c[s[t].cir].k;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[t].mk=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  rotate(s[t].lc,s[t].mk);</span><br><span class="line">  rotate(s[t].rc,s[t].mk);</span><br><span class="line">  s[t].mk:=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(t,l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[t].mk&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;=s[t].l)<span class="keyword">and</span>(r&gt;=s[t].r) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> s[t].len&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> rotate(t,<span class="number">1</span>) <span class="keyword">else</span> <span class="keyword">if</span> s[t].l=s[t].r <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      s[t].sum:=sqr(s[t].sum)<span class="keyword">mod</span> mo;</span><br><span class="line">      <span class="keyword">if</span> incir[s[t].sum] <span class="keyword">then</span> get_cir(s[t].cir,s[t].len,s[t].sum);</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      modify(s[t].lc,l,r);</span><br><span class="line">      modify(s[t].rc,l,r);</span><br><span class="line">      update(t);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(s[t].l+s[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> modify(s[t].lc,l,r);</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> modify(s[t].rc,l,r);</span><br><span class="line">  update(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(t,l,r:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[t].mk&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;=s[t].l)<span class="keyword">and</span>(r&gt;=s[t].r) <span class="keyword">then</span> <span class="keyword">exit</span>(s[t].sum);</span><br><span class="line">  mid:=(s[t].l+s[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  query:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> inc(query,query(s[t].lc,l,r));</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> inc(query,query(s[t].rc,l,r));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m,mo);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> mo-<span class="number">1</span> <span class="keyword">do</span> incir[i]:=false;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> mo-<span class="number">1</span> <span class="keyword">do</span> v[i]:=<span class="number">0</span>;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> mo-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">if</span> v[i]=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(tot);</span><br><span class="line">    find_cir(i);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(x[i]);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  cir:=<span class="number">0</span>;</span><br><span class="line">  build(rt,<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(op,l,r);</span><br><span class="line">    <span class="keyword">if</span> op=<span class="number">0</span> <span class="keyword">then</span> modify(<span class="number">1</span>,l,r) <span class="keyword">else</span> writeln(query(<span class="number">1</span>,l,r));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4105" target="_blank" rel="external">不稳定的传送门</a></p>
<h3 id="D]]>
    </summary>
    
      <category term="Segment Tree" scheme="http://platypuspro.github.io/tags/Segment-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4103]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-4103/"/>
    <id>http://platypuspro.github.io/posts/bzoj-4103/</id>
    <published>2015-06-09T07:46:14.000Z</published>
    <updated>2015-06-09T08:12:31.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4103" target="_blank" rel="external">不稳定的传送门</a></p>
<h3 id="Description">Description</h3><p>给定长度为$n$的数列$ X = \lbrace x_1,x_2,…,x_n\rbrace $和长度为$m$的数列$Y=\lbrace y_1,y_2,…,y_m\rbrace $，令矩阵$A$中第$i$行第$j$列的值$A_{ij}=x_i\bigoplus y_j$，每次询问给定矩形区域$i\in[u,d],j\in[l,r]$，找出第$k$大的$A_{ij}$。</p>
<h3 id="Input">Input</h3><p>第一行包含两个正整数$n,m$，分别表示两个数列的长度<br>第二行包含$n$个非负整数$x_i$<br>第三行包含$m$个非负整数$y_j$<br>第四行包含一个正整数$p$，表示询问次数<br>随后$p$行，每行均包含$5$个正整数，用来描述一次询问，每行包含五个正整数$u,d,l,r,k$，含义如题意所述。</p>
<h3 id="Output">Output</h3><p>共$p$行，每行包含一个非负整数，表示此次询问的答案。</p>
<h3 id="Sample_Input">Sample Input</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3 3</span><br><span class="line">1 2 4</span><br><span class="line">7 6 5</span><br><span class="line">3</span><br><span class="line">1 2 1 2 2</span><br><span class="line">1 2 1 3 4</span><br><span class="line">2 3 2 3 4</span><br></pre></td></tr></table></figure>
<h3 id="Sample_Output">Sample Output</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">5</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<h3 id="Hint">Hint</h3><p>对于$100\%$的数据，$0&lt;=X_i,Y_j&lt;2^{31}$,<br>$1\leq u\leq d\leq n\leq 1000$,<br>$1\leq l\leq r\leq m\leq 300000$,<br>$1\leq k\leq (d-u+1)*(r-l+1)$,<br>$1\leq p\leq 500$</p>
<p>按照$m$这一维度建可持久化Trie</p>
<p>每个询问中的每个$n$维度的点单独决定是走$1$还是走$0$，找第$k$大的方法直接仿照找别的树第$k$大那样就行了</p>
<p>刚开始总想把$n$维度的点都合在一起找，后来发现不行的说</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4103;</span><br><span class="line"><span class="keyword">const</span> log=<span class="number">31</span>;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">9900000</span>]<span class="keyword">of</span> <span class="keyword">record</span> son:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>]<span class="keyword">of</span> longint; size:longint; <span class="keyword">end</span>;</span><br><span class="line">    root:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">300000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,i,j,tot,p,b,x1,y1,x2,y2,k,len:longint;</span><br><span class="line">    a:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    seq:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1000</span>]<span class="keyword">of</span> <span class="keyword">record</span> l,r,k:longint; <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(<span class="keyword">var</span> t:longint;st,pos,base:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> x:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  s[t]:=s[base];</span><br><span class="line">  inc(s[t].size);</span><br><span class="line">  <span class="keyword">if</span> pos&lt;<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  x:=st&gt;&gt;pos <span class="keyword">and</span> <span class="number">1</span>;</span><br><span class="line">  insert(s[t].son[x],st,pos-<span class="number">1</span>,s[base].son[x]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(pos,k:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> i,x,cnt,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> pos&lt;<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">  cnt:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    x:=(seq[i].k&gt;&gt;pos <span class="keyword">and</span> <span class="number">1</span>)xor <span class="number">1</span>;</span><br><span class="line">    inc(cnt,s[s[seq[i].r].son[x]].size-s[s[seq[i].l].son[x]].size);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  t:=ord(k&lt;=cnt);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    x:=(seq[i].k&gt;&gt;pos <span class="keyword">and</span> <span class="number">1</span>)xor t;</span><br><span class="line">    seq[i].l:=s[seq[i].l].son[x];</span><br><span class="line">    seq[i].r:=s[seq[i].r].son[x];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(t&lt;&lt;pos <span class="keyword">or</span> query(pos-<span class="number">1</span>,k-(t xor <span class="number">1</span>)*cnt));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  root[<span class="number">0</span>]:=<span class="number">0</span>;</span><br><span class="line">  s[<span class="number">0</span>].son[<span class="number">0</span>]:=<span class="number">0</span>;</span><br><span class="line">  s[<span class="number">0</span>].son[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">  s[<span class="number">0</span>].size:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(b);</span><br><span class="line">    insert(root[i],b,log,root[i-<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  readln(p);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> p <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(x1,x2,y1,y2,k);</span><br><span class="line">    len:=x2-x1+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> j:=x1 <span class="keyword">to</span> x2 <span class="keyword">do</span> <span class="keyword">with</span> seq[j-x1+<span class="number">1</span>] <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      l:=root[y1-<span class="number">1</span>];</span><br><span class="line">      r:=root[y2];</span><br><span class="line">      k:=a[j];</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    writeln(query(log,k));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4103" target="_blank" rel="external">不稳定的传送门</a></p>
<h3 id="D]]>
    </summary>
    
      <category term="Persistent Trie" scheme="http://platypuspro.github.io/tags/Persistent-Trie/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3261]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3261/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3261/</id>
    <published>2015-06-05T03:15:31.000Z</published>
    <updated>2015-06-09T07:58:32.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3261" target="_blank" rel="external">不稳定的传送门</a></p>
<p>设$b[i]=a[1] \bigoplus a[2] \bigoplus \cdots \bigoplus a[i-1],b[1]=0$</p>
<p>$a[i] \bigoplus a[i+1] \bigoplus \cdots \bigoplus a[n] \bigoplus x=b[i] \bigoplus b[n+1] \bigoplus x$</p>
<p>后面的$b[n+1] \bigoplus x$是定值，所以题目就成了求$[l,r]$中使上面的式子最大的$i$</p>
<p>因为求的是最大，所以在可持久化Trie中往下走时，先看当前这一位能不能为$1$，能为$1$就走儿子$1$，否则走儿子$0$</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3261;</span><br><span class="line"><span class="keyword">const</span> log=<span class="number">23</span>;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">7500000</span>*<span class="number">2</span>]<span class="keyword">of</span> <span class="keyword">record</span> son:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1</span>]<span class="keyword">of</span> longint; size:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,a,x,tot,l,r:longint;</span><br><span class="line">    b,root:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">600001</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    c:char;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(<span class="keyword">var</span> t:longint;st,pos,base:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> x:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  s[t]:=s[base];</span><br><span class="line">  inc(s[t].size);</span><br><span class="line">  <span class="keyword">if</span> pos&lt;<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  x:=st&gt;&gt;pos <span class="keyword">and</span> <span class="number">1</span>;</span><br><span class="line">  insert(s[t].son[x],st,pos-<span class="number">1</span>,s[base].son[x]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(t1,t2,pos,st:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> x,y:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> pos&lt;<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">  x:=((st&gt;&gt;pos)<span class="keyword">and</span> <span class="number">1</span>)xor <span class="number">1</span>;</span><br><span class="line">  y:=x xor <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> s[s[t2].son[x]].size=s[s[t1].son[x]].size <span class="keyword">then</span> x:=x xor <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">exit</span>((x xor y)&lt;&lt;pos+query(s[t1].son[x],s[t2].son[x],pos-<span class="number">1</span>,st));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  b[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">  inc(n);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  s[<span class="number">0</span>].son[<span class="number">0</span>]:=<span class="number">0</span>;</span><br><span class="line">  s[<span class="number">0</span>].son[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">  s[<span class="number">0</span>].size:=<span class="number">0</span>;</span><br><span class="line">  insert(root[<span class="number">1</span>],<span class="number">0</span>,log,<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(a);</span><br><span class="line">    b[i]:=b[i-<span class="number">1</span>] xor a;</span><br><span class="line">    insert(root[i],b[i],log,root[i-<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  readln;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(c);</span><br><span class="line">    <span class="keyword">if</span> c=<span class="string">'A'</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      readln(a);</span><br><span class="line">      inc(n);</span><br><span class="line">      b[n]:=b[n-<span class="number">1</span>]xor a;</span><br><span class="line">      insert(root[n],b[n],log,root[n-<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      readln(l,r,x);</span><br><span class="line">      writeln(query(root[l-<span class="number">1</span>],root[r],log,b[n] xor x));</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3261" target="_blank" rel="external">不稳定的传送门</a></p>
<p>设$b[i]]]>
    </summary>
    
      <category term="Persistent Trie" scheme="http://platypuspro.github.io/tags/Persistent-Trie/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 1026]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-1026/"/>
    <id>http://platypuspro.github.io/posts/bzoj-1026/</id>
    <published>2015-06-05T03:15:21.000Z</published>
    <updated>2015-06-09T07:53:13.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1026" target="_blank" rel="external">传送门</a></p>
<p>Orz <a href="http://zyk1997.github.io/2015/03/20/ShuWeiDP/" target="_blank" rel="external">ZYK</a></p>
<p>数位DP过程中记录下上一位是啥，然后…不会了TAT 还是去戳上面那篇大爷的题解吧 = =</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1026;</span><br><span class="line"><span class="keyword">var</span> d:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">10</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    a,b:longint;</span><br><span class="line">    f:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">10</span>,<span class="number">0</span>..<span class="number">9</span>,<span class="number">0</span>..<span class="number">1</span>]<span class="keyword">of</span> longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dfs</span><span class="params">(p,pre:longint;flag,lim:boolean)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> limit,i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> p&lt;<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">exit</span>(ord(flag));</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">not</span> lim)<span class="keyword">and</span>(f[p,pre,ord(flag)]&lt;&gt;-<span class="number">1</span>) <span class="keyword">then</span> <span class="keyword">exit</span>(f[p,pre,ord(flag)]);</span><br><span class="line">  <span class="keyword">if</span> lim <span class="keyword">then</span> limit:=d[p] <span class="keyword">else</span> limit:=<span class="number">9</span>;</span><br><span class="line">  dfs:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> limit <span class="keyword">do</span> <span class="keyword">if</span> (abs(i-pre)&gt;=<span class="number">2</span>)<span class="keyword">or</span>(<span class="keyword">not</span> flag) <span class="keyword">then</span> inc(dfs,dfs(p-<span class="number">1</span>,i,flag <span class="keyword">or</span> (i&lt;&gt;<span class="number">0</span>),lim <span class="keyword">and</span>(i=limit)));</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> lim <span class="keyword">then</span> f[p,pre,ord(flag)]:=dfs;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solve</span><span class="params">(x:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> len:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> x=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">  len:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> x&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(len);</span><br><span class="line">    d[len]:=x <span class="keyword">mod</span> <span class="number">10</span>;</span><br><span class="line">    x:=x <span class="keyword">div</span> <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  fillchar(f,sizeof(f),<span class="number">255</span>);</span><br><span class="line">  <span class="keyword">exit</span>(dfs(len,<span class="number">0</span>,false,true));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(a,b);</span><br><span class="line">  writeln(solve(b)-solve(a-<span class="number">1</span>));</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1026" target="_blank" rel="external">传送门</a></p>
<p>Orz <a hre]]>
    </summary>
    
      <category term="Dynamic Programming" scheme="http://platypuspro.github.io/tags/Dynamic-Programming/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3926]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3926/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3926/</id>
    <published>2015-06-05T03:15:16.000Z</published>
    <updated>2015-06-09T07:52:49.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3926" target="_blank" rel="external">传送门</a></p>
<p>陈老师语文水平高超+1 2333</p>
<p><strong>太阳花田的结构比较特殊，只与一个空地相邻的空地数量不超过20个。</strong>（因为很重要所以再发一遍）</p>
<p>找到这20个叶子节点，然后DFS20遍，把遇到的节点扔到自动机里就行了</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3926;</span><br><span class="line"><span class="keyword">const</span> maxn=<span class="number">100000</span>;</span><br><span class="line"><span class="keyword">var</span> n,c,i,tot,a,b,np,q,nq:longint;</span><br><span class="line">    mx,fa:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">2</span>*maxn*<span class="number">20</span>+<span class="number">1</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    son:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">2</span>*maxn*<span class="number">20</span>+<span class="number">1</span>,<span class="number">0</span>..<span class="number">9</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..maxn*<span class="number">2</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    lst,col,cnt:<span class="keyword">array</span>[<span class="number">1</span>..maxn]<span class="keyword">of</span> longint;</span><br><span class="line">    ans:int64;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">extend</span><span class="params">(p,c:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  np:=tot;</span><br><span class="line">  mx[np]:=mx[p]+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> (p&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(son[p,c]=<span class="number">0</span>) <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    son[p,c]:=np;</span><br><span class="line">    p:=fa[p];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> p=<span class="number">0</span> <span class="keyword">then</span> fa[np]:=<span class="number">1</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    q:=son[p,c];</span><br><span class="line">    <span class="keyword">if</span> mx[p]+<span class="number">1</span>=mx[q] <span class="keyword">then</span> fa[np]:=q <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(tot);</span><br><span class="line">      nq:=tot;</span><br><span class="line">      <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">9</span> <span class="keyword">do</span> son[nq,i]:=son[q,i];</span><br><span class="line">      fa[nq]:=fa[q];</span><br><span class="line">      fa[q]:=nq;</span><br><span class="line">      fa[np]:=nq;</span><br><span class="line">      mx[nq]:=mx[p]+<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">while</span> (p&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(son[p,c]=q) <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        son[p,c]:=nq;</span><br><span class="line">        p:=fa[p];</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(np);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(i,fa,p:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k,np:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  np:=extend(p,col[i]);</span><br><span class="line">  k:=lst[i];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;fa <span class="keyword">then</span> dfs(l[k].ed,i,np);</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,c);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(col[i]);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> cnt[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b);</span><br><span class="line">    link(a,b);</span><br><span class="line">    link(b,a);</span><br><span class="line">    inc(cnt[a]);</span><br><span class="line">    inc(cnt[b]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  tot:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> cnt[i]=<span class="number">1</span> <span class="keyword">then</span> dfs(i,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> tot <span class="keyword">do</span> inc(ans,mx[i]-mx[fa[i]]);</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3926" target="_blank" rel="external">传送门</a></p>
<p>陈老师语文水平高超+]]>
    </summary>
    
      <category term="Suffix Automaton" scheme="http://platypuspro.github.io/tags/Suffix-Automaton/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3993]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3993/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3993/</id>
    <published>2015-06-05T03:15:12.000Z</published>
    <updated>2015-06-09T02:56:06.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3993" target="_blank" rel="external">传送门</a></p>
<p>二分答案，然后网络流验证是否可行</p>
<ul>
<li>源点向每个武器连容量为时间*攻击力的边</li>
<li>每个武器向能攻击的机器人连容量为攻击力的边</li>
<li>每个机器人向汇点连容量为血量的边</li>
</ul>
<p>若最大流=总血量则说明当前方案可行</p>
<p><del>刚开始用的数组直接赋值好慢好慢…所以改成每次重新连</del></p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3993;</span><br><span class="line"><span class="keyword">const</span> inf=maxlongint&gt;&gt;<span class="number">1</span>;</span><br><span class="line">      qs=<span class="number">5201</span>;</span><br><span class="line">      eps=<span class="number">1</span>e-<span class="number">3</span>;</span><br><span class="line"><span class="keyword">var</span> n,m,i,j,t,ss,tt,tot,tota,len:longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">5201</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; f:extended; <span class="keyword">end</span>;</span><br><span class="line">    lst:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">102</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    a,b:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">50</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    lnk:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">50</span>,<span class="number">1</span>..<span class="number">50</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    q,d,seq:<span class="keyword">array</span>[<span class="number">1</span>..qs]<span class="keyword">of</span> longint;</span><br><span class="line">    ll,rr,mid,maxf:extended;</span><br><span class="line">    v:<span class="keyword">array</span>[<span class="number">1</span>..qs]<span class="keyword">of</span> boolean;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint;f:extended)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line">  l[tot].f:=f;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(a,b:longint;f:extended)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  link(a,b,f);</span><br><span class="line">  link(b,a,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bfs</span>:</span>boolean;</span><br><span class="line"><span class="keyword">var</span> hd,tl,k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  hd:=<span class="number">0</span>;</span><br><span class="line">  tl:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> tt <span class="keyword">do</span> d[i]:=inf;</span><br><span class="line">  d[ss]:=<span class="number">0</span>;</span><br><span class="line">  q[<span class="number">1</span>]:=ss;</span><br><span class="line">  <span class="keyword">while</span> hd&lt;&gt;tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    hd:=hd <span class="keyword">mod</span> qs+<span class="number">1</span>;</span><br><span class="line">    k:=lst[q[hd]];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> (l[k].f&gt;<span class="number">0</span>)<span class="keyword">and</span>(d[q[hd]]+<span class="number">1</span>&lt;d[l[k].ed]) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        d[l[k].ed]:=d[q[hd]]+<span class="number">1</span>;</span><br><span class="line">        v[l[k].ed]:=true;</span><br><span class="line">        tl:=tl <span class="keyword">mod</span> qs+<span class="number">1</span>;</span><br><span class="line">        q[tl]:=l[k].ed;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  fillchar(v,sizeof(v),false);</span><br><span class="line">  <span class="keyword">exit</span>(d[tt]&lt;inf);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">expand</span>;</span></span><br><span class="line"><span class="keyword">var</span> i:longint;</span><br><span class="line">    f:extended;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  f:=inf;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> <span class="keyword">if</span> l[seq[i]].f&lt;f <span class="keyword">then</span> f:=l[seq[i]].f;</span><br><span class="line">  maxf:=maxf+f;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    l[seq[i]].f:=l[seq[i]].f-f;</span><br><span class="line">    l[seq[i] xor <span class="number">1</span>].f:=l[seq[i] xor <span class="number">1</span>].f+f;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  v[t]:=true;</span><br><span class="line">  <span class="keyword">if</span> t=tt <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    expand;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (l[k].f&gt;<span class="number">0</span>)<span class="keyword">and</span>(d[t]+<span class="number">1</span>=d[l[k].ed])<span class="keyword">and</span>(<span class="keyword">not</span> v[l[k].ed]) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(len);</span><br><span class="line">      seq[len]:=k;</span><br><span class="line">      dfs(l[k].ed);</span><br><span class="line">      dec(len);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  ss:=n+m+<span class="number">1</span>;</span><br><span class="line">  tt:=n+m+<span class="number">2</span>;</span><br><span class="line">  tota:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(a[i]);</span><br><span class="line">    inc(tota,a[i]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">read</span>(b[i]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(t);</span><br><span class="line">    lnk[i,j]:=(t=<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  ll:=<span class="number">0</span>;</span><br><span class="line">  rr:=tota;</span><br><span class="line">  len:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> ll+eps&lt;rr <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    mid:=(ll+rr)/<span class="number">2</span>;</span><br><span class="line">    tot:=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n+m+<span class="number">2</span> <span class="keyword">do</span> lst[i]:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> insert(ss,i,b[i]*mid);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> insert(m+i,tt,a[i]);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> lnk[i,j] <span class="keyword">then</span> insert(i,m+j,inf);</span><br><span class="line">    maxf:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> bfs <span class="keyword">do</span> dfs(ss);</span><br><span class="line">    <span class="keyword">if</span> maxf+eps&gt;tota <span class="keyword">then</span> rr:=mid <span class="keyword">else</span> ll:=mid;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(ll:<span class="number">0</span>:<span class="number">4</span>);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3993" target="_blank" rel="external">传送门</a></p>
<p>二分答案，然后网络流]]>
    </summary>
    
      <category term="Binary Divide" scheme="http://platypuspro.github.io/tags/Binary-Divide/"/>
    
      <category term="Max Flow" scheme="http://platypuspro.github.io/tags/Max-Flow/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3172]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3172/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3172/</id>
    <published>2015-06-05T03:15:06.000Z</published>
    <updated>2015-06-05T03:21:52.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3172" target="_blank" rel="external">传送门</a></p>
<p>额…建出来SAM，然后直接统计就行了</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3172;</span><br><span class="line"><span class="keyword">const</span> maxn=<span class="number">1000200</span>&lt;&lt;<span class="number">1</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> son:<span class="keyword">array</span>[<span class="number">1</span>..maxn,<span class="number">0</span>..<span class="number">26</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    fa:<span class="keyword">array</span>[<span class="number">0</span>..maxn,<span class="number">0</span>..<span class="number">20</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l,cnt,pos,seq,c:<span class="keyword">array</span>[<span class="number">0</span>..maxn]<span class="keyword">of</span> longint;</span><br><span class="line">    n,i,j,tot,p,q,np,nq,last,logn,totlen,len:longint;</span><br><span class="line">    ed:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">200</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    ch:char;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">extend</span><span class="params">(c,t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  np:=tot;</span><br><span class="line">  p:=last;</span><br><span class="line">  last:=tot;</span><br><span class="line">  l[np]:=l[p]+<span class="number">1</span>;</span><br><span class="line">  cnt[np]:=<span class="number">1</span>;</span><br><span class="line">  pos[t]:=tot;</span><br><span class="line">  <span class="keyword">while</span> (p&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(son[p,c]=<span class="number">0</span>) <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    son[p,c]:=np;</span><br><span class="line">    p:=fa[p,<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> p=<span class="number">0</span> <span class="keyword">then</span> fa[np,<span class="number">0</span>]:=<span class="number">1</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    q:=son[p,c];</span><br><span class="line">    <span class="keyword">if</span> l[p]+<span class="number">1</span>=l[q] <span class="keyword">then</span> fa[np,<span class="number">0</span>]:=q <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(tot);</span><br><span class="line">      nq:=tot;</span><br><span class="line">      l[nq]:=l[p]+<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> <span class="number">26</span> <span class="keyword">do</span> son[nq,i]:=son[q,i];</span><br><span class="line">      fa[nq,<span class="number">0</span>]:=fa[q,<span class="number">0</span>];</span><br><span class="line">      fa[q,<span class="number">0</span>]:=nq;</span><br><span class="line">      fa[np,<span class="number">0</span>]:=nq;</span><br><span class="line">      <span class="keyword">while</span> (p&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(son[p,c]=q) <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        son[p,c]:=nq;</span><br><span class="line">        p:=fa[p,<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">init</span>;</span></span><br><span class="line"><span class="keyword">var</span> i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  logn:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> <span class="number">1</span>&lt;&lt;logn&lt;=totlen <span class="keyword">do</span> inc(logn);</span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> logn <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> tot <span class="keyword">do</span> fa[i,j]:=fa[fa[i,j-<span class="number">1</span>],j-<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> totlen <span class="keyword">do</span> c[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> tot <span class="keyword">do</span> inc(c[l[i]]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> totlen <span class="keyword">do</span> inc(c[i],c[i-<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">for</span> i:=tot <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    seq[c[l[i]]]:=i;</span><br><span class="line">    dec(c[l[i]]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=tot <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">if</span> fa[seq[i],<span class="number">0</span>]&gt;<span class="number">1</span> <span class="keyword">then</span> inc(cnt[fa[seq[i],<span class="number">0</span>]],cnt[seq[i]]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(st,ed:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> i,p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=pos[ed];</span><br><span class="line">  <span class="keyword">for</span> i:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> <span class="keyword">if</span> l[fa[p,i]]&gt;=ed-st+<span class="number">1</span> <span class="keyword">then</span> p:=fa[p,i];</span><br><span class="line">  <span class="keyword">exit</span>(cnt[p]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n);</span><br><span class="line">  tot:=<span class="number">1</span>;</span><br><span class="line">  l[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">  fa[<span class="number">1</span>,<span class="number">0</span>]:=<span class="number">0</span>;</span><br><span class="line">  last:=<span class="number">1</span>;</span><br><span class="line">  totlen:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    len:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> eoln <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(len);</span><br><span class="line">      <span class="keyword">read</span>(ch);</span><br><span class="line">      extend(ord(ch)-<span class="number">96</span>,totlen+len);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    inc(totlen,len);</span><br><span class="line">    ed[i]:=totlen;</span><br><span class="line">    <span class="keyword">if</span> i&lt;&gt;n <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(totlen);</span><br><span class="line">      extend(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    readln;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  init;</span><br><span class="line">  ed[<span class="number">0</span>]:=-<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> writeln(query(ed[i-<span class="number">1</span>]+<span class="number">2</span>,ed[i]));</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3172" target="_blank" rel="external">传送门</a></p>
<p>额…建出来SAM，然]]>
    </summary>
    
      <category term="Suffix Automaton" scheme="http://platypuspro.github.io/tags/Suffix-Automaton/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3998]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3998/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3998/</id>
    <published>2015-05-25T13:33:47.000Z</published>
    <updated>2015-06-10T02:09:54.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3998" target="_blank" rel="external">传送门</a></p>
<p><img src="http://i1.tietuku.com/3b96536c5f066fa2.png" alt=""><br>我就放图不说话… <del>喂，110吗？真是日了评测机了…</del></p>
<p>恩…首先后缀自动机是要建的吧…</p>
<p>设$Cnt_i$为以$i$为结尾的子串个数</p>
<p>然后若$T=0$，则以后缀自动机的一个节点为结尾的子串再多也只能算一个，所以$Cnt_i$全部赋为$1$</p>
<p>若$T=1$<br>$$Cnt_i=\sum_{fa_j=i}Cnt_j+1$$</p>
<p>然后统计一下经过每个节点的子串个数，设它为$Sum_i$<br>$$Sum_i=Cnt_i+\sum_{j=son_i}Cnt_j$$</p>
<p>然后对自动机进行一遍DFS，先挑字典序小的走，若能走就输出并继续，这样就可以了…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3998;</span><br><span class="line"><span class="keyword">const</span> maxn=<span class="number">1000005</span>;</span><br><span class="line"><span class="keyword">var</span> fa,cnt,sum,l,seq,c:<span class="keyword">array</span>[<span class="number">0</span>..maxn]<span class="keyword">of</span> longint;</span><br><span class="line">    son:<span class="keyword">array</span>[<span class="number">0</span>..maxn,<span class="number">1</span>..<span class="number">26</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,t,k,tot,last,p,q,np,nq:longint;</span><br><span class="line">    ch:char;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(c:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  np:=tot;</span><br><span class="line">  cnt[np]:=<span class="number">1</span>;</span><br><span class="line">  p:=last;</span><br><span class="line">  last:=tot;</span><br><span class="line">  l[np]:=l[p]+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> (p&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(son[p,c]=<span class="number">0</span>) <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    son[p,c]:=np;</span><br><span class="line">    p:=fa[p];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> p=<span class="number">0</span> <span class="keyword">then</span> fa[np]:=<span class="number">1</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    q:=son[p,c];</span><br><span class="line">    <span class="keyword">if</span> l[p]+<span class="number">1</span>=l[q] <span class="keyword">then</span> fa[np]:=q <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(tot);</span><br><span class="line">      nq:=tot;</span><br><span class="line">      son[nq]:=son[q];</span><br><span class="line">      fa[nq]:=fa[q];</span><br><span class="line">      fa[q]:=nq;</span><br><span class="line">      fa[np]:=nq;</span><br><span class="line">      l[nq]:=l[p]+<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">while</span> (p&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(son[p,c]=q) <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        son[p,c]:=nq;</span><br><span class="line">        p:=fa[p];</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">init</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> tot <span class="keyword">do</span> c[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> tot <span class="keyword">do</span> inc(c[l[i]]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(c[i],c[i-<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">for</span> i:=tot <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    seq[c[l[i]]]:=i;</span><br><span class="line">    dec(c[l[i]]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=tot <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    p:=seq[i];</span><br><span class="line">    <span class="keyword">if</span> t=<span class="number">1</span> <span class="keyword">then</span> inc(cnt[fa[p]],cnt[p]) <span class="keyword">else</span> cnt[p]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  cnt[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=tot <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    p:=seq[i];</span><br><span class="line">    sum[p]:=cnt[p];</span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">26</span> <span class="keyword">do</span> <span class="keyword">if</span> son[p,j]&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> inc(sum[p],sum[son[p,j]]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t,k:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> k&lt;=cnt[t] <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  dec(k,cnt[t]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">26</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> son[t,i]&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> k&lt;=sum[son[t,i]] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">write</span>(chr(i+<span class="number">96</span>));</span><br><span class="line">      dfs(son[t,i],k);</span><br><span class="line">      <span class="keyword">exit</span>;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span> dec(k,sum[son[t,i]]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  n:=<span class="number">0</span>;</span><br><span class="line">  tot:=<span class="number">1</span>;</span><br><span class="line">  last:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> <span class="keyword">not</span> eoln <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(n);</span><br><span class="line">    <span class="keyword">read</span>(ch);</span><br><span class="line">    insert(ord(ch)-<span class="number">96</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  readln(t,k);</span><br><span class="line">  init;</span><br><span class="line">  <span class="keyword">if</span> k&gt;sum[<span class="number">1</span>] <span class="keyword">then</span> <span class="keyword">write</span>(<span class="string">'-1'</span>) <span class="keyword">else</span> dfs(<span class="number">1</span>,k);</span><br><span class="line">  writeln;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3998" target="_blank" rel="external">传送门</a></p>
<p><img src="]]>
    </summary>
    
      <category term="Suffix Automaton" scheme="http://platypuspro.github.io/tags/Suffix-Automaton/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3676]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3676/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3676/</id>
    <published>2015-05-25T13:27:57.000Z</published>
    <updated>2015-05-25T23:21:34.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3676" target="_blank" rel="external">传送门</a></p>
<p>首先搞出来后缀自动机并统计以后缀自动机中每个节点为结尾的子串个数</p>
<p>然后用manacher找回文串，将每个找到的回文串用自动机统计出出现次数</p>
<p>然后就没了…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3676;</span><br><span class="line"><span class="keyword">const</span> maxn=<span class="number">300001</span>;</span><br><span class="line"><span class="keyword">var</span> fa:<span class="keyword">array</span>[<span class="number">0</span>..maxn*<span class="number">2</span>,<span class="number">0</span>..<span class="number">20</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    cnt:<span class="keyword">array</span>[<span class="number">0</span>..maxn*<span class="number">2</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    son:<span class="keyword">array</span>[<span class="number">0</span>..maxn*<span class="number">2</span>,<span class="number">1</span>..<span class="number">26</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,tot,last,logn:longint;</span><br><span class="line">    str:<span class="keyword">array</span>[<span class="number">0</span>..maxn]<span class="keyword">of</span> char;</span><br><span class="line">    l,tmp,seq,p:<span class="keyword">array</span>[<span class="number">0</span>..maxn*<span class="number">2</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    pos:<span class="keyword">array</span>[<span class="number">1</span>..maxn]<span class="keyword">of</span> longint;</span><br><span class="line">    ans:int64;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">(a,b:int64)</span>:</span>int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&gt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">extend</span><span class="params">(c,t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,p,q,np,nq:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=last;</span><br><span class="line">  inc(tot);</span><br><span class="line">  np:=tot;</span><br><span class="line">  last:=tot;</span><br><span class="line">  l[np]:=l[p]+<span class="number">1</span>;</span><br><span class="line">  cnt[np]:=<span class="number">1</span>;</span><br><span class="line">  pos[t]:=tot;</span><br><span class="line">  <span class="keyword">while</span> (p&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(son[p,c]=<span class="number">0</span>) <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    son[p,c]:=np;</span><br><span class="line">    p:=fa[p,<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> p=<span class="number">0</span> <span class="keyword">then</span> fa[np,<span class="number">0</span>]:=<span class="number">1</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    q:=son[p,c];</span><br><span class="line">    <span class="keyword">if</span> l[p]+<span class="number">1</span>=l[q] <span class="keyword">then</span> fa[np,<span class="number">0</span>]:=q <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(tot);</span><br><span class="line">      nq:=tot;</span><br><span class="line">      l[nq]:=l[p]+<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">26</span> <span class="keyword">do</span> son[nq,i]:=son[q,i];</span><br><span class="line">      fa[nq,<span class="number">0</span>]:=fa[q,<span class="number">0</span>];</span><br><span class="line">      fa[q,<span class="number">0</span>]:=nq;</span><br><span class="line">      fa[np,<span class="number">0</span>]:=nq;</span><br><span class="line">      <span class="keyword">while</span> (p&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(son[p,c]=q) <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        son[p,c]:=nq;</span><br><span class="line">        p:=fa[p,<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">init</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span> tmp[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> tot <span class="keyword">do</span> inc(tmp[l[i]]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(tmp[i],tmp[i-<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">for</span> i:=tot <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    seq[tmp[l[i]]]:=i;</span><br><span class="line">    dec(tmp[l[i]]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=tot <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">if</span> fa[seq[i],<span class="number">0</span>]&gt;<span class="number">1</span> <span class="keyword">then</span> inc(cnt[fa[seq[i],<span class="number">0</span>]],cnt[seq[i]]);</span><br><span class="line">  logn:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> <span class="number">1</span>&lt;&lt;logn&lt;=n <span class="keyword">do</span> inc(logn);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> tot <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> logn <span class="keyword">do</span> fa[i,j]:=fa[fa[i,j-<span class="number">1</span>],j-<span class="number">1</span>];</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">query</span><span class="params">(st,ed:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p,i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=pos[ed];</span><br><span class="line">  <span class="keyword">for</span> i:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> <span class="keyword">if</span> l[fa[p,i]]&gt;=ed-st+<span class="number">1</span> <span class="keyword">then</span> p:=fa[p,i];</span><br><span class="line">  ans:=max(ans,int64(cnt[p])*int64(ed-st+<span class="number">1</span>));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">manacher</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,mx,id:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  str[<span class="number">0</span>]:=<span class="string">'_'</span>;</span><br><span class="line">  str[n+<span class="number">1</span>]:=<span class="string">'-'</span>;</span><br><span class="line">  mx:=<span class="number">0</span>;</span><br><span class="line">  id:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> mx&gt;i <span class="keyword">then</span> p[i]:=min(p[id&lt;&lt;<span class="number">1</span>-i],mx-i) <span class="keyword">else</span> p[i]:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> str[i+p[i]]=str[i-p[i]] <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      query(i-p[i],i+p[i]);</span><br><span class="line">      inc(p[i]);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> i+p[i]&gt;mx <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      mx:=i+p[i];</span><br><span class="line">      id:=i;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mx:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> mx&gt;i <span class="keyword">then</span> p[i]:=min(p[id&lt;&lt;<span class="number">1</span>-i],mx-i-<span class="number">1</span>) <span class="keyword">else</span> p[i]:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> str[i+p[i]+<span class="number">1</span>]=str[i-p[i]] <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      query(i-p[i],i+p[i]+<span class="number">1</span>);</span><br><span class="line">      inc(p[i]);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> i+p[i]&gt;mx <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      mx:=i+p[i];</span><br><span class="line">      id:=i;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  n:=<span class="number">0</span>;</span><br><span class="line">  tot:=<span class="number">1</span>;</span><br><span class="line">  l[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">  last:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> <span class="keyword">not</span> eoln <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(n);</span><br><span class="line">    <span class="keyword">read</span>(str[n]);</span><br><span class="line">    extend(ord(str[n])-<span class="number">96</span>,n);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  init;</span><br><span class="line">  manacher;</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3676" target="_blank" rel="external">传送门</a></p>
<p>首先搞出来后缀自动机]]>
    </summary>
    
      <category term="Manacher" scheme="http://platypuspro.github.io/tags/Manacher/"/>
    
      <category term="Suffix Automaton" scheme="http://platypuspro.github.io/tags/Suffix-Automaton/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[vimrc]]></title>
    <link href="http://platypuspro.github.io/posts/vimrc/"/>
    <id>http://platypuspro.github.io/posts/vimrc/</id>
    <published>2015-05-21T23:49:50.000Z</published>
    <updated>2015-05-22T00:10:16.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p>Orz Vim…</p>
<p>听说SC只有Vim没有gdb?…肿么办啊QAQ<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">colorscheme Tomorrow-Night-Eighties "主题</span><br><span class="line"></span><br><span class="line">syntax on "代码高亮 *</span><br><span class="line"></span><br><span class="line">set bs=indent,eol,start "backspace 启用退格 *</span><br><span class="line">set nocp "nocompatible 去掉Vi兼容性 *</span><br><span class="line">set gfn=Source_Code_Pro:h15 "guifont 字体</span><br><span class="line">set nu "number 开启行号 *</span><br><span class="line">set ai "autoindent 自动缩进 *</span><br><span class="line">set ts=2 "tabstop 缩进长度 *</span><br><span class="line">set sw=2 "shiftwidth 自动缩进长度 *</span><br><span class="line">set nobk "nobackup 禁用备份</span><br><span class="line">set et "expandtab tab转空格</span><br><span class="line">set ar "autoread 自动加载更改</span><br><span class="line">set acd "autochangedir 自动切换目录到当前文件目录</span><br><span class="line"></span><br><span class="line">map &lt;F7&gt; :!gdb %&lt; &lt;CR&gt; "gdb调试 *</span><br><span class="line">map &lt;F9&gt; :w&lt;CR&gt; :!fpc % -g -O2 &lt;CR&gt; "编译 *</span><br><span class="line">map &lt;C-F9&gt; :!%&lt; &lt;CR&gt; "运行 *</span><br></pre></td></tr></table></figure></p>
<p><code>&quot;</code>后面的是全称和说明，直接写前面的简写就够了</p>
<p>其实考试的时候用不到这么多，只用加<code>*</code>的那些就够了…这些只是我本地用的…</p>
<blockquote>
<p><strong>附</strong>：</p>
<ul>
<li><a href="https://github.com/chriskempson/tomorrow-theme" target="_blank" rel="external">tomorrow主题官方项目主页</a></li>
<li><a href="https://github.com/adobe-fonts/source-code-pro" target="_blank" rel="external">Source Code Pro官方项目主页</a><br>需要的自己下</li>
</ul>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p>Orz Vim…</p>
<p>听说SC只有Vim没有gdb?…肿么办啊QAQ<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="li]]>
    </summary>
    
      <category term="Others" scheme="http://platypuspro.github.io/categories/others/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4006]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-4006/"/>
    <id>http://platypuspro.github.io/posts/bzoj-4006/</id>
    <published>2015-05-20T13:19:04.000Z</published>
    <updated>2015-05-20T14:00:41.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4006" target="_blank" rel="external">传送门</a></p>
<p>注意到题上的$p\leq 10$，所以可以把所有情报站间的连通状态压到一个<code>longint</code>里表示</p>
<p>设$d_{i,j}$为包含$i$点的斯坦纳树，连通状态为$j$时的最小代价，$d_{i,j}=min\lbrace d_{i,k}+d_{i,j-k}\rbrace(k是j的子状态，所以j-k也是j的子状态)$</p>
<p>若$i$是情报站且$j$仅包含$i$一个点的状态则$d_{i,j}=0$</p>
<p>转移方程$d_{i,j}=min(d_{i,j},d_{i’,j}+dis_{i,i’})$可以直接拿<code>SPFA</code>来转移</p>
<p>最后再把这些状态合并一下就行了</p>
<blockquote>
<p>Tips：枚举一个状态的所有子状态时的那个位运算的姿势比较神奇</p>
</blockquote>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4006;</span><br><span class="line"><span class="keyword">const</span> qs=<span class="number">1023</span>;</span><br><span class="line"><span class="keyword">var</span> channel:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">10</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    num,lst:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    d:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1000</span>,<span class="number">0</span>..<span class="number">1023</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">6000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre,w:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,m,p,i,j,k,a,b,c,tot,hd,tl,status:longint;</span><br><span class="line">    q:<span class="keyword">array</span>[<span class="number">1</span>..qs]<span class="keyword">of</span> longint;</span><br><span class="line">    v:<span class="keyword">array</span>[<span class="number">1</span>..qs]<span class="keyword">of</span> boolean;</span><br><span class="line">    f:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1023</span>]<span class="keyword">of</span> longint;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b,w:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line">  l[tot].w:=w;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">spfa</span><span class="params">(status:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  hd:=<span class="number">0</span>;</span><br><span class="line">  tl:=n;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> q[i]:=i;</span><br><span class="line">  fillchar(v,sizeof(v),false);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> v[i]:=true;</span><br><span class="line">  <span class="keyword">while</span> hd&lt;&gt;tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    hd:=hd <span class="keyword">mod</span> qs+<span class="number">1</span>;</span><br><span class="line">    k:=lst[q[hd]];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> d[l[k].ed,status]&gt;d[q[hd],status]+l[k].w <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        d[l[k].ed,status]:=d[q[hd],status]+l[k].w;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> v[l[k].ed] <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          tl:=tl <span class="keyword">mod</span> qs+<span class="number">1</span>;</span><br><span class="line">          q[tl]:=l[k].ed;</span><br><span class="line">          v[l[k].ed]:=true;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    v[q[hd]]:=false;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m,p);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b,c);</span><br><span class="line">    link(a,b,c);</span><br><span class="line">    link(b,a,c);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> p <span class="keyword">do</span> channel[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> num[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> p <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b);</span><br><span class="line">    inc(channel[a],<span class="number">1</span>&lt;&lt;(i-<span class="number">1</span>));</span><br><span class="line">    num[b]:=i;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  fillchar(d,sizeof(d),$<span class="number">3</span>f);</span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">1</span>&lt;&lt;p-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> (num[i]&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(<span class="number">1</span>&lt;&lt;(num[i]-<span class="number">1</span>)=j) <span class="keyword">then</span> d[i,j]:=<span class="number">0</span>;</span><br><span class="line">      k:=j <span class="keyword">and</span> (j-<span class="number">1</span>);</span><br><span class="line">      <span class="keyword">while</span> k&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span> d[i,k]+d[i,j-k]&lt;d[i,j] <span class="keyword">then</span> d[i,j]:=d[i,k]+d[i,j-k];</span><br><span class="line">        k:=j <span class="keyword">and</span> (k-<span class="number">1</span>);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    spfa(j);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">1</span>&lt;&lt;p-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    status:=<span class="number">0</span>;</span><br><span class="line">    f[j]:=maxlongint;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> p <span class="keyword">do</span> <span class="keyword">if</span> j <span class="keyword">and</span>(<span class="number">1</span>&lt;&lt;(i-<span class="number">1</span>))&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> status:=status <span class="keyword">or</span> channel[i];</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> d[i,status]&lt;f[j] <span class="keyword">then</span> f[j]:=d[i,status];</span><br><span class="line">    k:=j <span class="keyword">and</span> (j-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> f[k]+f[j-k]&lt;f[j] <span class="keyword">then</span> f[j]:=f[k]+f[j-k];</span><br><span class="line">      k:=j <span class="keyword">and</span> (k-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(f[<span class="number">1</span>&lt;&lt;p-<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4006" target="_blank" rel="external">传送门</a></p>
<p>注意到题上的$p\l]]>
    </summary>
    
      <category term="Dynamic Programming" scheme="http://platypuspro.github.io/tags/Dynamic-Programming/"/>
    
      <category term="Steiner Tree" scheme="http://platypuspro.github.io/tags/Steiner-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4007]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-4007/"/>
    <id>http://platypuspro.github.io/posts/bzoj-4007/</id>
    <published>2015-05-19T13:00:44.000Z</published>
    <updated>2015-05-20T13:30:24.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4007" target="_blank" rel="external">传送门</a></p>
<p>头一次见正解是DFS的题…</p>
<p>普通的搜索是枚举最下边一层的状态然后从下往上算</p>
<p>正解是从上往下枚举每个人是当军官还是管后勤，回溯时拿个树形DP来更新答案</p>
<p>这样大概减少了好多重复的计算吧…</p>
<p>设$F_{i,j}$为$i$的子树中选$j$个当兵的最大收益，然后直接算即可</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4007;</span><br><span class="line"><span class="keyword">var</span> warrior,farmer:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">512</span>,<span class="number">1</span>..<span class="number">9</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    f:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1024</span>,<span class="number">0</span>..<span class="number">1024</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    officer:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">512</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    n,m,i,j,ans:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&gt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t,size:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j,cnt:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> t&gt;=<span class="number">1</span>&lt;&lt;(n-<span class="number">1</span>) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    i:=<span class="number">1</span>;</span><br><span class="line">    f[t,<span class="number">0</span>]:=<span class="number">0</span>;</span><br><span class="line">    f[t,<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> t&gt;&gt;i&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> officer[t&gt;&gt;i] <span class="keyword">then</span> inc(f[t,<span class="number">1</span>],warrior[t-<span class="number">1</span>&lt;&lt;(n-<span class="number">1</span>)+<span class="number">1</span>,i]) <span class="keyword">else</span> inc(f[t,<span class="number">0</span>],farmer[t-<span class="number">1</span>&lt;&lt;(n-<span class="number">1</span>)+<span class="number">1</span>,i]);</span><br><span class="line">      inc(i);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  cnt:=min(size,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> cnt <span class="keyword">do</span> f[t,i]:=<span class="number">0</span>;</span><br><span class="line">  officer[t]:=false;</span><br><span class="line">  dfs(t&lt;&lt;<span class="number">1</span>,size&gt;&gt;<span class="number">1</span>);</span><br><span class="line">  dfs(t&lt;&lt;<span class="number">1</span>+<span class="number">1</span>,size&gt;&gt;<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> cnt <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=max(i-size&gt;&gt;<span class="number">1</span>,<span class="number">0</span>) <span class="keyword">to</span> min(i,size&gt;&gt;<span class="number">1</span>) <span class="keyword">do</span> f[t,i]:=max(f[t,i],f[t&lt;&lt;<span class="number">1</span>,j]+f[t&lt;&lt;<span class="number">1</span>+<span class="number">1</span>,i-j]);</span><br><span class="line">  officer[t]:=true;</span><br><span class="line">  dfs(t&lt;&lt;<span class="number">1</span>,size&gt;&gt;<span class="number">1</span>);</span><br><span class="line">  dfs(t&lt;&lt;<span class="number">1</span>+<span class="number">1</span>,size&gt;&gt;<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> cnt <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=max(i-size&gt;&gt;<span class="number">1</span>,<span class="number">0</span>) <span class="keyword">to</span> min(i,size&gt;&gt;<span class="number">1</span>) <span class="keyword">do</span> f[t,i]:=max(f[t,i],f[t&lt;&lt;<span class="number">1</span>,j]+f[t&lt;&lt;<span class="number">1</span>+<span class="number">1</span>,i-j]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">1</span>&lt;&lt;(n-<span class="number">1</span>) <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">read</span>(warrior[i,j]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">1</span>&lt;&lt;(n-<span class="number">1</span>) <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">read</span>(farmer[i,j]);</span><br><span class="line">  dfs(<span class="number">1</span>,<span class="number">1</span>&lt;&lt;(n-<span class="number">1</span>));</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> m <span class="keyword">do</span> ans:=max(ans,f[<span class="number">1</span>,i]);</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4007" target="_blank" rel="external">传送门</a></p>
<p>头一次见正解是DFS]]>
    </summary>
    
      <category term="Search" scheme="http://platypuspro.github.io/tags/Search/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4003]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-4003/"/>
    <id>http://platypuspro.github.io/posts/bzoj-4003/</id>
    <published>2015-05-19T01:03:22.000Z</published>
    <updated>2015-05-19T02:24:15.000Z</updated>
    <content type="html"><![CDATA[<p>Splay又被卡链了…尼玛…<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4003" target="_blank" rel="external">传送门</a></p>
<p>先把每个人插到他初始所在的堆里，然后从下往上逐级合并，每次删掉挂了的人并更新答案，打标记更新当前堆中的战斗力</p>
<p>凭什么所有PASCAL都要卡着时限过 TAT</p>
<p>这道题我先敲了个Splay…改了一下午然后被三组链的数据卡掉了 = = 尼玛丧心病狂啊</p>
<p>还以为启发式是个多高端的东西…就是一个if语句…</p>
<p>改了好久的Splay也扔在下面了…能搞70分呢…</p>
<h3 id="可并堆">可并堆</h3><p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4003;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">300000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,dis:longint; k,mul,plus:int64; <span class="keyword">end</span>;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">300000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    lst,tree,p,dep,cnt,dea:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">300001</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    def,v:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">300000</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    a:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">300000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    n,m,i,tot,t,fa:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=a;</span><br><span class="line">  a:=b;</span><br><span class="line">  b:=p;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">update</span><span class="params">(t:longint;mul,plus:int64)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  s[t].k:=s[t].k*mul+plus;</span><br><span class="line">  s[t].plus:=s[t].plus*mul+plus;</span><br><span class="line">  s[t].mul:=s[t].mul*mul;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> update(s[t].lc,s[t].mul,s[t].plus);</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> update(s[t].rc,s[t].mul,s[t].plus);</span><br><span class="line">  s[t].mul:=<span class="number">1</span>;</span><br><span class="line">  s[t].plus:=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">merge</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (a=<span class="number">0</span>)<span class="keyword">or</span>(b=<span class="number">0</span>) <span class="keyword">then</span> <span class="keyword">exit</span>(a+b);</span><br><span class="line">  <span class="keyword">if</span> s[a].k&gt;s[b].k <span class="keyword">then</span> swap(a,b);</span><br><span class="line">  <span class="keyword">if</span> (s[a].plus&lt;&gt;<span class="number">0</span>)<span class="keyword">or</span>(s[a].mul&lt;&gt;<span class="number">1</span>) <span class="keyword">then</span> pushdown(a);</span><br><span class="line">  s[a].rc:=merge(s[a].rc,b);</span><br><span class="line">  <span class="keyword">if</span> s[s[a].lc].dis&lt;s[s[a].rc].dis <span class="keyword">then</span> swap(s[a].lc,s[a].rc);</span><br><span class="line">  s[a].dis:=s[s[a].rc].dis+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">exit</span>(a);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    dep[l[k].ed]:=dep[t]+<span class="number">1</span>;</span><br><span class="line">    dfs(l[k].ed);</span><br><span class="line">    tree[t]:=merge(tree[t],tree[l[k].ed]);</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">while</span> (tree[t]&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(s[tree[t]].k&lt;def[t]) <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(cnt[t]);</span><br><span class="line">    <span class="keyword">if</span> (s[tree[t]].plus&lt;&gt;<span class="number">0</span>)<span class="keyword">or</span>(s[tree[t]].mul&lt;&gt;<span class="number">1</span>) <span class="keyword">then</span> pushdown(tree[t]);</span><br><span class="line">    dea[tree[t]]:=t;</span><br><span class="line">    tree[t]:=merge(s[tree[t]].lc,s[tree[t]].rc);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> tree[t]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> a[t] <span class="keyword">then</span> update(tree[t],v[t],<span class="number">0</span>) <span class="keyword">else</span> update(tree[t],<span class="number">1</span>,v[t]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(def[i]);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(fa,t,v[i]);</span><br><span class="line">    link(fa,i);</span><br><span class="line">    a[i]:=(t=<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> tree[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(s[i].k,p[i]);</span><br><span class="line">    s[i].plus:=<span class="number">0</span>;</span><br><span class="line">    s[i].mul:=<span class="number">1</span>;</span><br><span class="line">    tree[p[i]]:=merge(tree[p[i]],i);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  dep[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> cnt[i]:=<span class="number">0</span>;</span><br><span class="line">  dfs(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> writeln(cnt[i]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> writeln(dep[p[i]]-dep[dea[i]]);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<h3 id="Splay启发式合并">Splay启发式合并</h3><p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4003;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">300000</span>]<span class="keyword">of</span> <span class="keyword">record</span> fa,lc,rc,size,num:longint; k,plus,mul:int64; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,tot,k,top,fa,t:longint;</span><br><span class="line">    a:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">300000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    lst,seq,tree,stk,cnt,dep,dea,st:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">300000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    def,v:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">300000</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    atk:int64;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">600000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=a;</span><br><span class="line">  a:=b;</span><br><span class="line">  b:=p;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">bfs</span>;</span></span><br><span class="line"><span class="keyword">var</span> hd,tl,k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  hd:=<span class="number">0</span>;</span><br><span class="line">  tl:=<span class="number">1</span>;</span><br><span class="line">  seq[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  dep[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> hd&lt;&gt;tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(hd);</span><br><span class="line">    k:=lst[seq[hd]];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(tl);</span><br><span class="line">      seq[tl]:=l[k].ed;</span><br><span class="line">      dep[seq[tl]]:=dep[seq[hd]]+<span class="number">1</span>;</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> l,r:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  l:=s[t].lc;</span><br><span class="line">  r:=s[t].rc;</span><br><span class="line">  <span class="keyword">if</span> s[t].mul&lt;&gt;<span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      s[l].mul:=s[l].mul*s[t].mul;</span><br><span class="line">      s[l].k:=s[l].k*s[t].mul;</span><br><span class="line">      s[l].plus:=s[l].plus*s[t].mul;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> r&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      s[r].mul:=s[r].mul*s[t].mul;</span><br><span class="line">      s[r].k:=s[r].k*s[t].mul;</span><br><span class="line">      s[r].plus:=s[r].plus*s[t].mul;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    s[t].mul:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> s[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(s[l].plus,s[t].plus);</span><br><span class="line">      inc(s[l].k,s[t].plus);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> r&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(s[r].plus,s[t].plus);</span><br><span class="line">      inc(s[r].k,s[t].plus);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    s[t].plus:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">l_rotate</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=s[t].fa;</span><br><span class="line">  s[p].rc:=s[t].lc;</span><br><span class="line">  <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].lc].fa:=p;</span><br><span class="line">  s[t].fa:=s[p].fa;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].lc <span class="keyword">then</span> s[s[p].fa].lc:=t;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].rc <span class="keyword">then</span> s[s[p].fa].rc:=t;</span><br><span class="line">  s[p].fa:=t;</span><br><span class="line">  s[t].lc:=p;</span><br><span class="line">  s[t].size:=s[p].size;</span><br><span class="line">  s[p].size:=s[s[p].lc].size+s[s[p].rc].size+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">r_rotate</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=s[t].fa;</span><br><span class="line">  s[p].lc:=s[t].rc;</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].rc].fa:=p;</span><br><span class="line">  s[t].fa:=s[p].fa;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].lc <span class="keyword">then</span> s[s[p].fa].lc:=t;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].rc <span class="keyword">then</span> s[s[p].fa].rc:=t;</span><br><span class="line">  s[p].fa:=t;</span><br><span class="line">  s[t].rc:=p;</span><br><span class="line">  s[t].size:=s[p].size;</span><br><span class="line">  s[p].size:=s[s[p].lc].size+s[s[p].rc].size+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">splay</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">while</span> s[t].fa&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> t=s[s[t].fa].lc <span class="keyword">then</span> r_rotate(t) <span class="keyword">else</span> l_rotate(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(<span class="keyword">var</span> t:longint;k:int64;num:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> t=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> top&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      t:=stk[top];</span><br><span class="line">      dec(top);</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(tot);</span><br><span class="line">      t:=tot;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    s[t].size:=<span class="number">1</span>;</span><br><span class="line">    s[t].k:=k;</span><br><span class="line">    s[t].num:=num;</span><br><span class="line">    s[t].mul:=<span class="number">1</span>;</span><br><span class="line">    s[t].plus:=<span class="number">0</span>;</span><br><span class="line">    s[t].fa:=<span class="number">0</span>;</span><br><span class="line">    s[t].lc:=<span class="number">0</span>;</span><br><span class="line">    s[t].rc:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> (s[t].plus&lt;&gt;<span class="number">0</span>)<span class="keyword">or</span>(s[t].mul&lt;&gt;<span class="number">1</span>) <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  inc(s[t].size);</span><br><span class="line">  <span class="keyword">if</span> k&gt;=s[t].k <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    insert(s[t].lc,k,num);</span><br><span class="line">    s[s[t].lc].fa:=t;</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    insert(s[t].rc,k,num);</span><br><span class="line">    s[s[t].rc].fa:=t;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(t:longint;k:int64)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  find:=t;</span><br><span class="line">  <span class="keyword">while</span> t&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (s[t].plus&lt;&gt;<span class="number">0</span>)<span class="keyword">or</span>(s[t].mul&lt;&gt;<span class="number">1</span>) <span class="keyword">then</span> pushdown(t);</span><br><span class="line">    <span class="keyword">if</span> k&gt;s[t].k <span class="keyword">then</span> t:=s[t].lc <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      find:=t;</span><br><span class="line">      t:=s[t].rc;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">(t:longint)</span>:</span>int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">while</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (s[t].plus&lt;&gt;<span class="number">0</span>)<span class="keyword">or</span>(s[t].mul&lt;&gt;<span class="number">1</span>) <span class="keyword">then</span> pushdown(t);</span><br><span class="line">    t:=s[t].lc;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(s[t].k);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t,p:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> t=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> (s[t].plus&lt;&gt;<span class="number">0</span>)<span class="keyword">or</span>(s[t].mul&lt;&gt;<span class="number">1</span>) <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> dfs(s[t].lc,p);</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> dfs(s[t].rc,p);</span><br><span class="line">  insert(p,s[t].k,s[t].num);</span><br><span class="line">  inc(top);</span><br><span class="line">  stk[top]:=t;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">update</span><span class="params">(t,p:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> t=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> update(s[t].lc,p);</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> update(s[t].rc,p);</span><br><span class="line">  cnt[s[t].num]:=dep[st[s[t].num]]-dep[p];</span><br><span class="line">  inc(top);</span><br><span class="line">  stk[top]:=t;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">union</span><span class="params">(<span class="keyword">var</span> t1,t2:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[t1].size&lt;s[t2].size <span class="keyword">then</span> swap(t1,t2);</span><br><span class="line">  dfs(t2,t1);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">maintain</span><span class="params">(p:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> tree[p]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> max(tree[p])&gt;=def[p] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    t:=find(tree[p],def[p]);</span><br><span class="line">    splay(t);</span><br><span class="line">    tree[p]:=t;</span><br><span class="line">    dea[p]:=s[s[t].rc].size;</span><br><span class="line">    update(s[t].rc,p);</span><br><span class="line">    s[t].rc:=<span class="number">0</span>;</span><br><span class="line">    s[t].size:=s[s[t].lc].size+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    dea[p]:=s[tree[p]].size;</span><br><span class="line">    update(tree[p],p);</span><br><span class="line">    tree[p]:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> a[p] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    s[t].mul:=v[p];</span><br><span class="line">    s[t].k:=s[t].k*v[p];</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(s[t].plus,v[p]);</span><br><span class="line">    inc(s[t].k,v[p]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  pushdown(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(def[i]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(fa,t,v[i]);</span><br><span class="line">    a[i]:=(t=<span class="number">1</span>);</span><br><span class="line">    link(fa,i);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  bfs;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  top:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> tree[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(atk,st[i]);</span><br><span class="line">    insert(tree[st[i]],atk,i);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> cnt[i]:=dep[st[i]];</span><br><span class="line">  <span class="keyword">for</span> i:=n <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    k:=lst[seq[i]];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      union(tree[seq[i]],tree[l[k].ed]);</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    maintain(seq[i]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> writeln(dea[i]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> writeln(cnt[i]);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Splay又被卡链了…尼玛…<br>]]>
    
    </summary>
    
      <category term="Mergeable Heap" scheme="http://platypuspro.github.io/tags/Mergeable-Heap/"/>
    
      <category term="Splay" scheme="http://platypuspro.github.io/tags/Splay/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4002]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-4002/"/>
    <id>http://platypuspro.github.io/posts/bzoj-4002/</id>
    <published>2015-05-18T13:00:38.000Z</published>
    <updated>2015-05-20T00:55:29.000Z</updated>
    <content type="html"><![CDATA[<p>好坑啊QAQ<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4002" target="_blank" rel="external">传送门</a></p>
<p>Orz ZYK</p>
<p>构造出数列$a_n=b\times a_{n-1}+\frac{d-b^2}{4}\times a_{n-2}\ (a_0=2,a_1=b)$</p>
<p>题上说$b\mod 2=1,d\mod 4=1$，所以$\frac{d-b^2}{4}$是个整数，$a_n$就可以拿矩阵乘法搞出来</p>
<p>上面的递推式可以拿特征方程搞成这样<br>$a_n=(\frac{b+\sqrt d}2)^n+(\frac{b-\sqrt d}2)^n$</p>
<p>$(\frac{b+\sqrt d}2)^n=a_n-(\frac{b-\sqrt d}2)^n$</p>
<p>答案求的即为<br>$\lfloor(\frac{b+\sqrt d}2)^n\rfloor=\lfloor a_n-(\frac{b-\sqrt d}2)^n\rfloor$</p>
<p>根据题目可知，后边这坨$-(\frac{b-\sqrt d}2)^n$仅在$b\neq \sqrt d$且$n\mod 2=1$时会对答案产生影响</p>
<p>所以若$b\neq \sqrt d$且$n\mod 2=1$输出$a_n-1$，否则输出$a_n$</p>
<p>尼玛这道题必须用<code>qword(unsigned long long)</code>和快速乘…否则直接爆掉…坑我一晚上…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4002;</span><br><span class="line"><span class="keyword">const</span> mo:qword=<span class="number">7528443412579576937</span>;</span><br><span class="line"><span class="keyword">type</span> matrix=<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">2</span>,<span class="number">1</span>..<span class="number">2</span>]<span class="keyword">of</span> qword;</span><br><span class="line"><span class="keyword">var</span> a,e:matrix;</span><br><span class="line">    b,d,n,ans:qword;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mul</span><span class="params">(a,b:qword)</span>:</span>qword;</span><br><span class="line"><span class="keyword">var</span> ans:qword;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  a:=a <span class="keyword">mod</span> mo;</span><br><span class="line">  b:=b <span class="keyword">mod</span> mo;</span><br><span class="line">  <span class="keyword">while</span> b&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> b <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> ans:=(ans+a)<span class="keyword">mod</span> mo;</span><br><span class="line">    a:=a&lt;&lt;<span class="number">1</span> <span class="keyword">mod</span> mo;</span><br><span class="line">    b:=b&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line">operator *(a,b:matrix)c:matrix;</span><br><span class="line"><span class="keyword">var</span> i,j,k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(c,sizeof(c),<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">2</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">2</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">2</span> <span class="keyword">do</span> c[i,j]:=(c[i,j]+mul(a[i,k],b[k,j]))<span class="keyword">mod</span> mo;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qpower</span><span class="params">(n:qword)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:matrix;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  a[<span class="number">1</span>,<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  a[<span class="number">1</span>,<span class="number">2</span>]:=<span class="number">0</span>;</span><br><span class="line">  a[<span class="number">2</span>,<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">  a[<span class="number">2</span>,<span class="number">2</span>]:=<span class="number">1</span>;</span><br><span class="line">  p:=e;</span><br><span class="line">  <span class="keyword">while</span> n&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> n <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> a:=a*p;</span><br><span class="line">    p:=p*p;</span><br><span class="line">    n:=n&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(b,d,n);</span><br><span class="line">  <span class="keyword">if</span> n=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    writeln(<span class="number">1</span>);</span><br><span class="line">    halt;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  e[<span class="number">1</span>,<span class="number">1</span>]:=b;</span><br><span class="line">  e[<span class="number">1</span>,<span class="number">2</span>]:=<span class="number">1</span>;</span><br><span class="line">  e[<span class="number">2</span>,<span class="number">1</span>]:=(d-mul(b,b))<span class="keyword">div</span> <span class="number">4</span>;</span><br><span class="line">  e[<span class="number">2</span>,<span class="number">2</span>]:=<span class="number">0</span>;</span><br><span class="line">  qpower(n-<span class="number">1</span>);</span><br><span class="line">  ans:=(mul(b,a[<span class="number">1</span>,<span class="number">1</span>])+mul(<span class="number">2</span>,a[<span class="number">2</span>,<span class="number">1</span>]))<span class="keyword">mod</span> mo;</span><br><span class="line">  <span class="keyword">if</span> (mul(b,b)&lt;&gt;d)<span class="keyword">and</span>(n <span class="keyword">and</span> <span class="number">1</span>=<span class="number">0</span>) <span class="keyword">then</span> dec(ans);</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>好坑啊QAQ<br>]]>
    
    </summary>
    
      <category term="Matrix Multiplication" scheme="http://platypuspro.github.io/tags/Matrix-Multiplication/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3611]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3611/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3611/</id>
    <published>2015-05-17T01:04:00.000Z</published>
    <updated>2015-05-20T13:30:49.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3611" target="_blank" rel="external">传送门</a></p>
<p>先搞出来虚树，然后树形DP一下就没了…</p>
<p>本来打算还像消耗战那样把DP扔到建树过程里，后来发现似乎不行的说…</p>
<blockquote>
<h4 id="Tips">Tips</h4><p>$f(t)$为$t$子树中关键点个数<br>$g(t)$为$t$子树中所有关键点到$t$距离之和</p>
</blockquote>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3611;</span><br><span class="line"><span class="keyword">const</span> inf=maxlongint&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> n,i,j,a,b,q,tot,logn,len,top,minans,maxans:longint;</span><br><span class="line">    dep,lst,dfn,seq,s,min,max:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1000000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">2000000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    f,g:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1000000</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    fa:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1000000</span>,<span class="number">0</span>..<span class="number">20</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    key:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1000000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    sum:int64;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=a;</span><br><span class="line">  a:=b;</span><br><span class="line">  b:=p;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  dfn[t]:=tot;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;fa[t,<span class="number">0</span>] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      fa[l[k].ed,<span class="number">0</span>]:=t;</span><br><span class="line">      dep[l[k].ed]:=dep[t]+<span class="number">1</span>;</span><br><span class="line">      dfs(l[k].ed);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j,mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=dfn[seq[(l+r)&gt;&gt;<span class="number">1</span>]];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> dfn[seq[i]]&lt;mid <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> dfn[seq[j]]&gt;mid <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      swap(seq[i],seq[j]);</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lca</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> l:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> dep[a]&lt;dep[b] <span class="keyword">then</span> swap(a,b);</span><br><span class="line">  <span class="keyword">for</span> l:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> <span class="keyword">if</span> dep[fa[a,l]]&gt;=dep[b] <span class="keyword">then</span> a:=fa[a,l];</span><br><span class="line">  <span class="keyword">if</span> a=b <span class="keyword">then</span> <span class="keyword">exit</span>(a);</span><br><span class="line">  <span class="keyword">for</span> l:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> <span class="keyword">if</span> fa[a,l]&lt;&gt;fa[b,l] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    a:=fa[a,l];</span><br><span class="line">    b:=fa[b,l];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(fa[a,<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,l:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  qsort(<span class="number">1</span>,len);</span><br><span class="line">  top:=<span class="number">1</span>;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  s[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  key[<span class="number">1</span>]:=(seq[<span class="number">1</span>]=<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    l:=lca(seq[i],s[top]);</span><br><span class="line">    <span class="keyword">while</span> (top&gt;<span class="number">1</span>)<span class="keyword">and</span>(dep[l]&lt;=dep[s[top-<span class="number">1</span>]]) <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      link(s[top-<span class="number">1</span>],s[top]);</span><br><span class="line">      dec(top);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> l&lt;&gt;s[top] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      link(l,s[top]);</span><br><span class="line">      s[top]:=l;</span><br><span class="line">      key[l]:=false;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> s[top]&lt;&gt;seq[i] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(top);</span><br><span class="line">      s[top]:=seq[i];</span><br><span class="line">      key[seq[i]]:=true;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">while</span> top&gt;<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    link(s[top-<span class="number">1</span>],s[top]);</span><br><span class="line">    dec(top);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dp</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k,d:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> key[t] <span class="keyword">then</span> min[t]:=<span class="number">0</span> <span class="keyword">else</span> min[t]:=inf;</span><br><span class="line">  <span class="keyword">if</span> key[t] <span class="keyword">then</span> max[t]:=<span class="number">0</span> <span class="keyword">else</span> max[t]:=-inf;</span><br><span class="line">  f[t]:=ord(key[t]);</span><br><span class="line">  g[t]:=<span class="number">0</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;fa[t,<span class="number">0</span>] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      dp(l[k].ed);</span><br><span class="line">      d:=dep[l[k].ed]-dep[t];</span><br><span class="line">      <span class="keyword">if</span> min[t]+min[l[k].ed]+d&lt;minans <span class="keyword">then</span> minans:=min[t]+min[l[k].ed]+d;</span><br><span class="line">      <span class="keyword">if</span> max[t]+max[l[k].ed]+d&gt;maxans <span class="keyword">then</span> maxans:=max[t]+max[l[k].ed]+d;</span><br><span class="line">      inc(sum,int64(g[t]+f[t]*d)*int64(f[l[k].ed])+int64(g[l[k].ed])*int64(f[t]));</span><br><span class="line">      inc(f[t],f[l[k].ed]);</span><br><span class="line">      inc(g[t],g[l[k].ed]+f[l[k].ed]*int64(d));</span><br><span class="line">      <span class="keyword">if</span> min[l[k].ed]+d&lt;min[t] <span class="keyword">then</span> min[t]:=min[l[k].ed]+d;</span><br><span class="line">      <span class="keyword">if</span> max[l[k].ed]+d&gt;max[t] <span class="keyword">then</span> max[t]:=max[l[k].ed]+d;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  lst[t]:=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n);</span><br><span class="line">  logn:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> <span class="number">1</span>&lt;&lt;logn&lt;=n <span class="keyword">do</span> inc(logn);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b);</span><br><span class="line">    link(a,b);</span><br><span class="line">    link(b,a);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  dep[<span class="number">0</span>]:=-<span class="number">1</span>;</span><br><span class="line">  dep[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">  fa[<span class="number">1</span>,<span class="number">0</span>]:=<span class="number">0</span>;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  dfs(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> logn:=<span class="number">1</span> <span class="keyword">to</span> logn <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> fa[i,logn]:=fa[fa[i,logn-<span class="number">1</span>],logn-<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> lst[i]:=<span class="number">0</span>;</span><br><span class="line">  readln(q);</span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> q <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(len);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> <span class="keyword">read</span>(seq[i]);</span><br><span class="line">    build;</span><br><span class="line">    minans:=inf;</span><br><span class="line">    maxans:=-inf;</span><br><span class="line">    sum:=<span class="number">0</span>;</span><br><span class="line">    dp(<span class="number">1</span>);</span><br><span class="line">    writeln(sum,<span class="string">' '</span>,minans,<span class="string">' '</span>,maxans);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3611" target="_blank" rel="external">传送门</a></p>
<p>先搞出来虚树，然后树]]>
    </summary>
    
      <category term="Virtual Tree" scheme="http://platypuspro.github.io/tags/Virtual-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 2286]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-2286/"/>
    <id>http://platypuspro.github.io/posts/bzoj-2286/</id>
    <published>2015-05-14T12:37:38.000Z</published>
    <updated>2015-05-15T10:57:12.000Z</updated>
    <content type="html"><![CDATA[<p>我说这傻逼题我™改了一整天你信么…<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2286" target="_blank" rel="external">传送门</a></p>
<p>一大早回忆了一下老早之前看过的虚树写法…到了机房开始敲</p>
<p>敲了一个小时发现过不了样例于是找了个BUG，改了一会过了样例和对拍</p>
<p>发现稍微大一点的数据跑起来就像吃了*一样 <del>咦为什么还没有暴力快</del>，然后回头瞅了瞅代码</p>
<p>发现我这个傻逼干了这些事情：</p>
<ul>
<li>每次建虚树的函数中开了个250000大小的数组（此函数最多会调用250000次）</li>
<li>每次把好几个250000大小的数组fillchar</li>
</ul>
<p>改对了以后马上交了一发TLE = =</p>
<p>要来数据开始测 <del>卧槽本地21S+</del></p>
<p>卡了半天常…还写了我人生中第一发RMQ求LCA <del>按理说比倍增快不了多少啊</del></p>
<p>还尼玛TLE</p>
<p>去膜hzwer的代码，发现一个貌似能优化的东东，加上去之后继续T…（此时已到午饭点）</p>
<p>下午又卡了半天常无果，求助身边神犇被D一脸是自己写法有问题TAT</p>
<p>不管怎么改依旧本地压线过交上去毫无疑问TLE</p>
<p>无奈又各种膜代码，发现PoPoQQQ的建虚树过程和DP放在一起搞…好神奇的样子</p>
<p>然后改呀改呀最终本地4S+ BZOJ 12S+</p>
<p>UPD: 发现了罪魁祸首，在建虚树过程中我傻逼地写了个$O(n)$级别的循环来赋初始值 = = 改完以后BZOJ 10S+…</p>
<p><del>咦好像扯远了我还没讲题呢…</del></p>
<p>首先把要建到虚树中的点按照DFS序排序</p>
<p>然后维护一个栈，从栈顶到栈底深度递减（栈底是根），保证从栈顶到栈底是一条需要建进虚树的路径，路径中只保留必要的点（询问的点与询问的点的LCA），这些点间的其他边和点都缩到一条边里</p>
<p>每次加一个点时把不在新加点到根的路径中的点依次弹出去，然后再把在路径中的点扔进来</p>
<p>每次弹栈的时候连边（其实如果把DP和建树放在一起的话就不用连边了）</p>
<p>比如说对于样例的10和6，步骤如下</p>
<ul>
<li>初始化 栈中有{1}</li>
<li>将10加入栈中 栈中有{1,10}</li>
<li>找到新加点6与栈顶10的LCA 5 发现深度小于栈顶 连边(1,10)并弹掉10 栈中有{1}</li>
<li>将5加入栈中 栈中有{1,5}</li>
<li>将6加入栈中 栈中有{1,5,6}</li>
<li>依次连边(5,6),(1,5) 并依次弹 6,5,1</li>
</ul>
<p>关于树形DP就不用提了吧…自己YY就好了</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2286;</span><br><span class="line"><span class="keyword">var</span> dep,seq,lst,pos,s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">250000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">250000</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    fa,mn:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">500000</span>,<span class="number">0</span>..<span class="number">18</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">500000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,w,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,q,tot,a,b,c,len,logn:longint;</span><br><span class="line">    energy:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">250000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=a;</span><br><span class="line">  a:=b;</span><br><span class="line">  b:=p;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b,w:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line">  l[tot].w:=w;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(len);</span><br><span class="line">  pos[t]:=len;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;fa[t,<span class="number">0</span>] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      fa[l[k].ed,<span class="number">0</span>]:=t;</span><br><span class="line">      dep[l[k].ed]:=dep[t]+<span class="number">1</span>;</span><br><span class="line">      mn[l[k].ed,<span class="number">0</span>]:=l[k].w;</span><br><span class="line">      dfs(l[k].ed);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j,mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=pos[seq[(l+r)&gt;&gt;<span class="number">1</span>]];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> pos[seq[i]]&lt;mid <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> pos[seq[j]]&gt;mid <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      swap(seq[i],seq[j]);</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lca</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> l:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> dep[a]&lt;dep[b] <span class="keyword">then</span> swap(a,b);</span><br><span class="line">  <span class="keyword">for</span> l:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> dep[fa[a,l]]&gt;=dep[b] <span class="keyword">then</span> a:=fa[a,l];</span><br><span class="line">  <span class="keyword">if</span> a=b <span class="keyword">then</span> <span class="keyword">exit</span>(a);</span><br><span class="line">  <span class="keyword">for</span> l:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> <span class="keyword">if</span> fa[a,l]&lt;&gt;fa[b,l] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    a:=fa[a,l];</span><br><span class="line">    b:=fa[b,l];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(fa[a,<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getmin</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> l,ans:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ans:=maxlongint;</span><br><span class="line">  <span class="keyword">for</span> l:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> dep[fa[a,l]]&gt;=dep[b] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> mn[a,l]&lt;ans <span class="keyword">then</span> ans:=mn[a,l];</span><br><span class="line">    a:=fa[a,l];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span>;</span></span><br><span class="line"><span class="keyword">var</span> top,i,l,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  qsort(<span class="number">1</span>,len);</span><br><span class="line">  top:=<span class="number">1</span>;</span><br><span class="line">  s[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  f[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">  energy[<span class="number">1</span>]:=false;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    l:=lca(seq[i],s[top]);</span><br><span class="line">    <span class="keyword">while</span> (top&gt;<span class="number">1</span>)<span class="keyword">and</span>(dep[s[top-<span class="number">1</span>]]&gt;=dep[l]) <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      t:=getmin(s[top],s[top-<span class="number">1</span>]);</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">not</span> energy[top])<span class="keyword">and</span>(f[top]&lt;t) <span class="keyword">then</span> t:=f[top];</span><br><span class="line">      inc(f[top-<span class="number">1</span>],t);</span><br><span class="line">      dec(top);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> l&lt;&gt;s[top] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      t:=getmin(s[top],l);</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">not</span> energy[top])<span class="keyword">and</span>(f[top]&lt;t) <span class="keyword">then</span> t:=f[top];</span><br><span class="line">      f[top]:=t;</span><br><span class="line">      s[top]:=l;</span><br><span class="line">      energy[top]:=false;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    inc(top);</span><br><span class="line">    s[top]:=seq[i];</span><br><span class="line">    energy[top]:=true;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">while</span> top&gt;<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    t:=getmin(s[top],s[top-<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">not</span> energy[top])<span class="keyword">and</span>(f[top]&lt;t) <span class="keyword">then</span> t:=f[top];</span><br><span class="line">    inc(f[top-<span class="number">1</span>],t);</span><br><span class="line">    dec(top);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n);</span><br><span class="line">  logn:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> <span class="number">1</span>&lt;&lt;logn&lt;=n <span class="keyword">do</span> inc(logn);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b,c);</span><br><span class="line">    link(a,b,c);</span><br><span class="line">    link(b,a,c);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  dep[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  fa[<span class="number">1</span>,<span class="number">0</span>]:=<span class="number">0</span>;</span><br><span class="line">  len:=<span class="number">0</span>;</span><br><span class="line">  dfs(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> logn:=<span class="number">1</span> <span class="keyword">to</span> logn <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    fa[i,logn]:=fa[fa[i,logn-<span class="number">1</span>],logn-<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> mn[i,logn-<span class="number">1</span>]&lt;mn[fa[i,logn-<span class="number">1</span>],logn-<span class="number">1</span>] <span class="keyword">then</span> mn[i,logn]:=mn[i,logn-<span class="number">1</span>] <span class="keyword">else</span> mn[i,logn]:=mn[fa[i,logn-<span class="number">1</span>],logn-<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  readln(m);</span><br><span class="line">  <span class="keyword">for</span> q:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(len);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> <span class="keyword">read</span>(seq[i]);</span><br><span class="line">    build;</span><br><span class="line">    writeln(f[<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>我说这傻逼题我™改了一整天你信么…<br>]]>
    
    </summary>
    
      <category term="Virtual Tree" scheme="http://platypuspro.github.io/tags/Virtual-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3295]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3295/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3295/</id>
    <published>2015-05-14T12:37:26.000Z</published>
    <updated>2015-05-14T13:44:02.000Z</updated>
    <content type="html"><![CDATA[<p>论主席树の日常MLE…<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3295" target="_blank" rel="external">传送门</a></p>
<p>一个数的逆序对数=前面比它大的+后面比它小的</p>
<p>设这个数$k$是第$i$个，那么它的逆序对数就是$root[1]-root[i-1]$中范围在$[k+1,n]$里的数的个数+$root[i+1]-root[n]$中范围在$[1,k-1]$里的数的个数</p>
<p>每次删除时从答案中减去它的影响，并修改一下主席树就可以了</p>
<p>开始呢…我逗比地在每次修改时又完全新建了一条$\log n$长度的链…空间复杂度$(n+m)(\log n)^2$…</p>
<p>卡了半天内存发现完全可以利用老版本节点…QAQ</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3295;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10000000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,size:longint; <span class="keyword">end</span>;</span><br><span class="line">    root,pos,seq:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,i,tot,p,len,x:longint;</span><br><span class="line">    b:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">17</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    ans:int64;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lowbit</span><span class="params">(x:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">exit</span>(x <span class="keyword">and</span> -x);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">init</span><span class="params">(x:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  len:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> x&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(len);</span><br><span class="line">    b[len]:=root[x];</span><br><span class="line">    dec(x,lowbit(x));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(<span class="keyword">var</span> t:longint;l,r,p,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> t=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(tot);</span><br><span class="line">    t:=tot;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  inc(s[t].size,d);</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> p&lt;=mid <span class="keyword">then</span> modify(s[t].lc,l,mid,p,d) <span class="keyword">else</span> modify(s[t].rc,mid+<span class="number">1</span>,r,p,d);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(l,r,ll,rr:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> i,t,mid:longint;</span><br><span class="line">    p:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">17</span>]<span class="keyword">of</span> longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  t:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (ll&lt;=l)<span class="keyword">and</span>(rr&gt;=r) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> inc(t,s[b[i]].size);</span><br><span class="line">    <span class="keyword">exit</span>(t);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> p[i]:=b[i];</span><br><span class="line">  <span class="keyword">if</span> ll&lt;=mid <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> b[i]:=s[p[i]].lc;</span><br><span class="line">    inc(t,query(l,mid,ll,rr));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> rr&gt;mid <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> b[i]:=s[p[i]].rc;</span><br><span class="line">    inc(t,query(mid+<span class="number">1</span>,r,ll,rr));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> b[i]:=p[i];</span><br><span class="line">  <span class="keyword">exit</span>(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">count</span><span class="params">(l,r,ll,rr:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> l&gt;r <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">  init(r);</span><br><span class="line">  count:=query(<span class="number">1</span>,n,ll,rr);</span><br><span class="line">  init(l-<span class="number">1</span>);</span><br><span class="line">  dec(count,query(<span class="number">1</span>,n,ll,rr));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  fillchar(root,sizeof(root),<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(seq[i]);</span><br><span class="line">    pos[seq[i]]:=i;</span><br><span class="line">    p:=i;</span><br><span class="line">    <span class="keyword">while</span> p&lt;=n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      modify(root[p],<span class="number">1</span>,n,seq[i],<span class="number">1</span>);</span><br><span class="line">      inc(p,lowbit(p));</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(ans,count(i+<span class="number">1</span>,n,<span class="number">1</span>,seq[i]));</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    writeln(ans);</span><br><span class="line">    readln(x);</span><br><span class="line">    dec(ans,count(<span class="number">1</span>,pos[x]-<span class="number">1</span>,x,n)+count(pos[x]+<span class="number">1</span>,n,<span class="number">1</span>,x));</span><br><span class="line">    p:=pos[x];</span><br><span class="line">    <span class="keyword">while</span> p&lt;=n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      modify(root[p],<span class="number">1</span>,n,x,-<span class="number">1</span>);</span><br><span class="line">      inc(p,lowbit(p));</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>论主席树の日常MLE…<br>]]>
    
    </summary>
    
      <category term="Fotile Tree" scheme="http://platypuspro.github.io/tags/Fotile-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3675]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-3675/"/>
    <id>http://platypuspro.github.io/posts/bzoj-3675/</id>
    <published>2015-05-02T11:00:26.000Z</published>
    <updated>2015-05-02T12:34:15.000Z</updated>
    <content type="html"><![CDATA[<p>PASCAL的常数啊QAQ<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3675" target="_blank" rel="external">传送门</a></p>
<p>设最后分成的各个子序列的和分别为$S_1,S_2,\cdots,S_{k+1}$，那么答案就是<br>$$\sum_{i=1}^kS_i\sum_{j=i+1}^{k+1}S_j$$</p>
<p>与分割的顺序无关，然后可以搞出DP方程<br>$$F_{i,k}=max\lbrace F_{j,k-1},j\in[1,i)\rbrace+sum_j\times(sum_i-sum_j)$$</p>
<p>取$0&lt;a,b&lt;i$，决策$a$优于决策$b$当且仅当</p>
<p>$$F_{a,k}+sum_a\cdot sum_i-{sum_a}^2&gt;F_{b,k}+sum_b\cdot sum_i-{sum_b}^2$$</p>
<p>$$\frac{(F_{a,k}-{sum_a}^2)-(F_{b,k}-{sum_b}^2)}{sum_a-sum_b}&gt;-sum_i$$</p>
<p>然后就是斜率优化的事了…（只用滚动数组就够了）</p>
<p><del>C++平均10s PASCAL最快25s（我30s）是要闹哪样</del></p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3675;</span><br><span class="line"><span class="keyword">const</span> eps=<span class="number">1</span>e-<span class="number">6</span>;</span><br><span class="line"><span class="keyword">var</span> f,g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>,<span class="number">0</span>..<span class="number">1</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    sum,q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,hd,tl,i,j,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  sum[<span class="number">0</span>]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(t);</span><br><span class="line">    sum[i]:=sum[i-<span class="number">1</span>]+t;</span><br><span class="line">    g[i,<span class="number">0</span>]:=-int64(sum[i])*int64(sum[i]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  t:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    hd:=<span class="number">1</span>;</span><br><span class="line">    tl:=<span class="number">1</span>;</span><br><span class="line">    q[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">    t:=t xor <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">while</span> (hd&lt;tl)<span class="keyword">and</span>(g[q[hd],t xor <span class="number">1</span>]-g[q[hd+<span class="number">1</span>],t xor <span class="number">1</span>]&lt;-int64(sum[i])*int64(sum[q[hd]]-sum[q[hd+<span class="number">1</span>]])+eps) <span class="keyword">do</span> inc(hd);</span><br><span class="line">      f[i,t]:=f[q[hd],t xor <span class="number">1</span>]+int64(sum[q[hd]])*int64(sum[i]-sum[q[hd]]);</span><br><span class="line">      g[i,t]:=f[i,t]-int64(sum[i])*int64(sum[i]);</span><br><span class="line">      <span class="keyword">while</span> (hd&lt;tl)<span class="keyword">and</span>((g[q[tl-<span class="number">1</span>],t xor <span class="number">1</span>]-g[q[tl],t xor <span class="number">1</span>])*int64(sum[i]-sum[q[tl]])+eps&gt;(g[q[tl],t xor <span class="number">1</span>]-g[i,t xor <span class="number">1</span>])*int64(sum[q[tl]]-sum[q[tl-<span class="number">1</span>]])) <span class="keyword">do</span> dec(tl);</span><br><span class="line">      inc(tl);</span><br><span class="line">      q[tl]:=i;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(f[n,t]);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>PASCAL的常数啊QAQ<br>]]>
    
    </summary>
    
      <category term="Dynamic Programming" scheme="http://platypuspro.github.io/tags/Dynamic-Programming/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4034]]></title>
    <link href="http://platypuspro.github.io/posts/bzoj-4034/"/>
    <id>http://platypuspro.github.io/posts/bzoj-4034/</id>
    <published>2015-05-02T11:00:19.000Z</published>
    <updated>2015-05-02T12:41:46.000Z</updated>
    <content type="html"><![CDATA[<p>考场上直接A掉了~啦啦啦~<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4034" target="_blank" rel="external">传送门</a></p>
<p>正解是俩树状数组…但是太弱了不会啊…于是只能拿树链剖分搞了…</p>
<p>考场上敲了40min+ 各种数据拍+调了一个小时找了仨错出来最后顺利AC啦啦啦</p>
<p>HA考场上好像没几个人A…但是挂到BZOJ上以后就被各种艹翻…QAQ</p>
<p>考场上敲的代码↓ OwO<br><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4034;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> <span class="keyword">record</span> fa,size,hev,l,r,w,bl,rk:longint; <span class="keyword">end</span>;</span><br><span class="line">    seq,lst,top:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">200000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    seg:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">200000</span>]<span class="keyword">of</span> <span class="keyword">record</span> l,r,lc,rc:longint; plus,sum:int64; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,a,b,tot,len,pcnt,cas:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs1</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k,max,p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  s[t].size:=<span class="number">1</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  s[t].hev:=<span class="number">0</span>;</span><br><span class="line">  max:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;s[t].fa <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      s[l[k].ed].fa:=t;</span><br><span class="line">      dfs1(l[k].ed);</span><br><span class="line">      inc(s[t].size,s[l[k].ed].size);</span><br><span class="line">      <span class="keyword">if</span> s[l[k].ed].size&gt;max <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        max:=s[l[k].ed].size;</span><br><span class="line">        s[t].hev:=l[k].ed;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;s[t].fa <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> l[k].ed=s[t].hev <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        s[t].bl:=s[l[k].ed].bl;</span><br><span class="line">        s[t].rk:=s[l[k].ed].rk+<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        p:=s[l[k].ed].bl;</span><br><span class="line">        top[p]:=l[k].ed;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> s[t].hev=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(pcnt);</span><br><span class="line">    s[t].bl:=pcnt;</span><br><span class="line">    s[t].rk:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs2</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(len);</span><br><span class="line">  s[t].l:=len;</span><br><span class="line">  seq[len]:=s[t].w;</span><br><span class="line">  <span class="keyword">if</span> s[t].hev&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    k:=lst[t];</span><br><span class="line">    <span class="keyword">while</span> (k&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(l[k].ed&lt;&gt;s[t].hev) <span class="keyword">do</span> k:=l[k].pre;</span><br><span class="line">    dfs2(l[k].ed);</span><br><span class="line">    k:=lst[t];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> (l[k].ed&lt;&gt;s[t].fa)<span class="keyword">and</span>(l[k].ed&lt;&gt;s[t].hev) <span class="keyword">then</span> dfs2(l[k].ed);</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  s[t].r:=len;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> l,r:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> seg[t].plus=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> seg[t].l=seg[t].r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    seg[t].plus:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  l:=seg[t].lc;</span><br><span class="line">  r:=seg[t].rc;</span><br><span class="line">  inc(seg[l].plus,seg[t].plus);</span><br><span class="line">  inc(seg[r].plus,seg[t].plus);</span><br><span class="line">  inc(seg[l].sum,seg[t].plus*int64(seg[l].r-seg[l].l+<span class="number">1</span>));</span><br><span class="line">  inc(seg[r].sum,seg[t].plus*int64(seg[r].r-seg[r].l+<span class="number">1</span>));</span><br><span class="line">  seg[t].plus:=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span><span class="params">(<span class="keyword">var</span> t:longint;l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  seg[t].l:=l;</span><br><span class="line">  seg[t].r:=r;</span><br><span class="line">  seg[t].plus:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    seg[t].sum:=seq[l];</span><br><span class="line">    seg[t].lc:=<span class="number">0</span>;</span><br><span class="line">    seg[t].rc:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  build(seg[t].lc,l,mid);</span><br><span class="line">  build(seg[t].rc,mid+<span class="number">1</span>,r);</span><br><span class="line">  seg[t].sum:=seg[seg[t].lc].sum+seg[seg[t].rc].sum;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">plus</span><span class="params">(t,l,r,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> seg[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;=seg[t].l)<span class="keyword">and</span>(r&gt;=seg[t].r) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(seg[t].plus,d);</span><br><span class="line">    inc(seg[t].sum,seg[t].plus*int64(seg[t].r-seg[t].l+<span class="number">1</span>));</span><br><span class="line">    pushdown(t);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> seg[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  mid:=(seg[t].l+seg[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> plus(seg[t].lc,l,r,d);</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> plus(seg[t].rc,l,r,d);</span><br><span class="line">  seg[t].sum:=seg[seg[t].lc].sum+seg[seg[t].rc].sum;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(t,l,r:longint)</span>:</span>int64;</span><br><span class="line"><span class="keyword">var</span> ans:int64;</span><br><span class="line">    mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> seg[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;=seg[t].l)<span class="keyword">and</span>(r&gt;=seg[t].r) <span class="keyword">then</span> <span class="keyword">exit</span>(seg[t].sum);</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  mid:=(seg[t].l+seg[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> inc(ans,query(seg[t].lc,l,r));</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> inc(ans,query(seg[t].rc,l,r));</span><br><span class="line">  <span class="keyword">exit</span>(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">ask</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> ans:int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> top[s[t].bl]&lt;&gt;<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(ans,query(<span class="number">1</span>,s[top[s[t].bl]].l,s[t].l));</span><br><span class="line">    t:=s[top[s[t].bl]].fa;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  inc(ans,query(<span class="number">1</span>,s[<span class="number">1</span>].l,s[t].l));</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(s[i].w);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b);</span><br><span class="line">    link(a,b);</span><br><span class="line">    link(b,a);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  len:=<span class="number">0</span>;</span><br><span class="line">  s[<span class="number">1</span>].fa:=<span class="number">0</span>;</span><br><span class="line">  pcnt:=<span class="number">0</span>;</span><br><span class="line">  dfs1(<span class="number">1</span>);</span><br><span class="line">  i:=s[<span class="number">1</span>].bl;</span><br><span class="line">  top[i]:=<span class="number">1</span>;</span><br><span class="line">  dfs2(<span class="number">1</span>);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  build(i,<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(cas);</span><br><span class="line">    <span class="keyword">case</span> cas <span class="keyword">of</span></span><br><span class="line">      <span class="number">1</span>:<span class="keyword">begin</span></span><br><span class="line">        readln(a,b);</span><br><span class="line">        plus(<span class="number">1</span>,s[a].l,s[a].l,b);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      <span class="number">2</span>:<span class="keyword">begin</span></span><br><span class="line">        readln(a,b);</span><br><span class="line">        plus(<span class="number">1</span>,s[a].l,s[a].r,b);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      <span class="number">3</span>:<span class="keyword">begin</span></span><br><span class="line">        readln(a);</span><br><span class="line">        ask(a);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>考场上直接A掉了~啦啦啦~<br>]]>
    
    </summary>
    
      <category term="Tree Chain Split" scheme="http://platypuspro.github.io/tags/Tree-Chain-Split/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.github.io/categories/BZOJ/"/>
    
  </entry>
  
</feed>