<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Platypus's Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://platypuspro.gitcafe.io/"/>
  <updated>2015-05-28T01:49:40.000Z</updated>
  <id>http://platypuspro.gitcafe.io/</id>
  
  <author>
    <name><![CDATA[Platypus]]></name>
    <email><![CDATA[1293705262@qq.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Problem 3]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/t3/"/>
    <id>http://platypuspro.gitcafe.io/posts/t3/</id>
    <published>2015-05-27T13:07:19.000Z</published>
    <updated>2015-05-28T01:49:40.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<h2 id="题目描述">题目描述</h2><p>给定一棵树，每条树边有权值，需要资瓷以下几种操作</p>
<ol>
<li>给定$k$个点，求$k$个点两两间距离的和、最小值、最大值（共$k\choose 2$条路径）</li>
<li>将两点间路径都加上一个值</li>
<li>将两点间路径权值全部取相反数</li>
<li>将一个点子树中路径都加上一个值</li>
<li>将一个点子树中路径权值全部取相反数</li>
</ol>
<h2 id="输入格式">输入格式</h2><p>第一行两个整数$n,m$<br>接下来$n-1$行，每行三个整数$u,v,w$，表示$u,v$之间有一条权值为$w$的边<br>接下来$m$行，每行第一个数$c$，为$[1,5]$之间的整数<br>若$c=1$，之后是一个正整数$k$，然后有$k$个正整数，表示选中的点<br>若$c=2$，之后有三个整数$u,v,w$，表示从$u$到$v$的路径权值都加上$w$<br>若$c=3$，之后有两个整数$u,v$，表示从$u$到$v$的路径权值全部取相反数<br>若$c=4$，之后有两个整数$u,w$，表示$u$子树中的路径权值都加上$w$<br>若$c=5$，之后有一个整数$u$，表示$u$子树中的路径权值全部取相反数</p>
<h2 id="输出格式">输出格式</h2><p>对于每个$c=1$的询问，输出一行三个整数，分别为和，最小值，最大值</p>
<h2 id="样例输入">样例输入</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">5 5</span><br><span class="line">2 1 1</span><br><span class="line">3 4 5</span><br><span class="line">5 3 9</span><br><span class="line">1 3 1</span><br><span class="line">1 1 2 5 4</span><br><span class="line">2 2 5 10</span><br><span class="line">1 1 2 5 4</span><br><span class="line">4 3</span><br><span class="line">1 1 2 5 4</span><br></pre></td></tr></table></figure>
<h2 id="样例输出">样例输出</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">49 1 14</span><br><span class="line">149 11 41</span><br><span class="line">5 -24 17</span><br></pre></td></tr></table></figure>
<h2 id="数据范围">数据范围</h2><p>对于$30%$的数据，$n,m\leq 1000$<br>对于$100%$的数据，$n\leq 50000,m\leq 100000,k\geq 2$，所有询问点数之和$\sum k\leq 400000$<br>数据大概会爆<code>longint</code>吧…我也不清楚</p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<h2 id="题目描述">题目描述</h2><p>给定一棵树，每条树边有权值，需要资瓷以下几种操作</p>
<ol>
<li>给定$k$个点，求$k$个点两两间距离的和、最小值、最大值（共$k\choose 2$条路径）</li>
<li>将]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Problem 2]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/t2/"/>
    <id>http://platypuspro.gitcafe.io/posts/t2/</id>
    <published>2015-05-27T13:07:15.000Z</published>
    <updated>2015-05-28T01:49:23.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<h2 id="题目描述">题目描述</h2><p>小A和小B在打炉石，双方都铺满了场，两边场上铺了$n$个随从</p>
<p>现在轮到了小A的回合，小A用第$i$个随从攻击小B的第$j$个随从会受到$d_{i,j}$的伤害（假设这里的一个随从攻击不同的随从所造成的伤害不一样 = =），并损失场面优势$e_{i,j}$</p>
<p>小A的每个随从只能攻击一次，小B的每个随从也只能被指定为攻击目标一次，也就是说这$2n$个随从是一对一配对的，小A的第$i$个随从的攻击目标是$aim[i]$</p>
<p>设小A这回合的损失为$(\sum d_{i,aim[i]})\times(\sum e_{i,aim[i]})$，求小A的最小损失</p>
<h2 id="输入格式">输入格式</h2><p>第一行一个正整数$n$</p>
<p>然后是一个$n\times n$的矩阵，第$i$行第$j$个代表$d_{i,j}$</p>
<p>然后还有一个$n\times n$的矩阵，第$i$行第$j$个代表$e_{i,j}$</p>
<h2 id="输出格式">输出格式</h2><p>仅一个正整数，代表小A的最小损失</p>
<h2 id="样例输入">样例输入</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 3 5 4</span><br><span class="line">2 3 4 4</span><br><span class="line">5 3 4 4</span><br><span class="line">2 1 2 3</span><br><span class="line">4 1 5 4</span><br><span class="line">1 1 1 4</span><br><span class="line">3 4 2 4</span><br><span class="line">2 3 4 5</span><br></pre></td></tr></table></figure>
<h2 id="样例输出">样例输出</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">104</span><br></pre></td></tr></table></figure>
<h2 id="数据范围">数据范围</h2><p>对于$30%$的数据，$n\leq 10$<br>对于$100%$的数据，$n\leq 100$，答案在<code>longint</code>范围内</p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<h2 id="题目描述">题目描述</h2><p>小A和小B在打炉石，双方都铺满了场，两边场上铺了$n$个随从</p>
<p>现在轮到了小A的回合，小A用第$i$个随从攻击小B的第$j$个随从会受到$d_{i,j}$的伤害（假设这里的一个随从]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3998]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-3998/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-3998/</id>
    <published>2015-05-25T13:33:47.000Z</published>
    <updated>2015-05-25T14:02:44.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3998" target="_blank" rel="external">传送门</a></p>
<p><img src="http://i1.tietuku.com/3b96536c5f066fa2.png" alt=""><br>我就放图不说话… <del>喂，110吗？真是日了评测机了…</del></p>
<p>恩…首先后缀自动机是要建的吧…</p>
<p>设$Cnt_i$为以$i$为结尾的子串个数</p>
<p>然后若$T=0$，则以后缀自动机的一个节点为结尾的子串再多也只能算一个，所以$Cnt_i$全部赋为$1$</p>
<p>若$T=1$<br>$$Cnt_i=\sum_{fa_j=i}Cnt_j+1$$</p>
<p>然后统计一下经过每个节点的子串个数，设它为$Sum_i$<br>$$Sum_i=Cnt_i+\sum_{j=son_i}Cnt_j$$</p>
<p>然后对自动机进行一遍DFS，先挑字典序小的走，若能走就输出并继续，这样就可以了…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3998;</span><br><span class="line"><span class="keyword">const</span> maxn=<span class="number">1000005</span>;</span><br><span class="line"><span class="keyword">var</span> fa,cnt,sum,l,seq,c:<span class="keyword">array</span>[<span class="number">0</span>..maxn]<span class="keyword">of</span> longint;</span><br><span class="line">    son:<span class="keyword">array</span>[<span class="number">0</span>..maxn,<span class="number">1</span>..<span class="number">26</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,t,k,tot,last,p,q,np,nq:longint;</span><br><span class="line">    ch:char;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(c:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  np:=tot;</span><br><span class="line">  cnt[np]:=<span class="number">1</span>;</span><br><span class="line">  p:=last;</span><br><span class="line">  last:=tot;</span><br><span class="line">  l[np]:=l[p]+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> (p&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(son[p,c]=<span class="number">0</span>) <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    son[p,c]:=np;</span><br><span class="line">    p:=fa[p];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> p=<span class="number">0</span> <span class="keyword">then</span> fa[np]:=<span class="number">1</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    q:=son[p,c];</span><br><span class="line">    <span class="keyword">if</span> l[p]+<span class="number">1</span>=l[q] <span class="keyword">then</span> fa[np]:=q <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(tot);</span><br><span class="line">      nq:=tot;</span><br><span class="line">      son[nq]:=son[q];</span><br><span class="line">      fa[nq]:=fa[q];</span><br><span class="line">      fa[q]:=nq;</span><br><span class="line">      fa[np]:=nq;</span><br><span class="line">      l[nq]:=l[p]+<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">while</span> (p&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(son[p,c]=q) <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        son[p,c]:=nq;</span><br><span class="line">        p:=fa[p];</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">init</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> tot <span class="keyword">do</span> c[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> tot <span class="keyword">do</span> inc(c[l[i]]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(c[i],c[i-<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">for</span> i:=tot <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    seq[c[l[i]]]:=i;</span><br><span class="line">    dec(c[l[i]]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=tot <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    p:=seq[i];</span><br><span class="line">    <span class="keyword">if</span> t=<span class="number">1</span> <span class="keyword">then</span> inc(cnt[fa[p]],cnt[p]) <span class="keyword">else</span> cnt[p]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  cnt[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=tot <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    p:=seq[i];</span><br><span class="line">    sum[p]:=cnt[p];</span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">26</span> <span class="keyword">do</span> <span class="keyword">if</span> son[p,j]&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> inc(sum[p],sum[son[p,j]]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t,k:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> k&lt;=cnt[t] <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  dec(k,cnt[t]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">26</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> son[t,i]&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> k&lt;=sum[son[t,i]] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">write</span>(chr(i+<span class="number">96</span>));</span><br><span class="line">      dfs(son[t,i],k);</span><br><span class="line">      <span class="keyword">exit</span>;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span> dec(k,sum[son[t,i]]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  n:=<span class="number">0</span>;</span><br><span class="line">  tot:=<span class="number">1</span>;</span><br><span class="line">  last:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> <span class="keyword">not</span> eoln <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(n);</span><br><span class="line">    <span class="keyword">read</span>(ch);</span><br><span class="line">    insert(ord(ch)-<span class="number">96</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  readln(t,k);</span><br><span class="line">  init;</span><br><span class="line">  <span class="keyword">if</span> k&gt;sum[<span class="number">1</span>] <span class="keyword">then</span> <span class="keyword">write</span>(<span class="string">'-1'</span>) <span class="keyword">else</span> dfs(<span class="number">1</span>,k);</span><br><span class="line">  writeln;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3998" target="_blank" rel="external">传送门</a></p>
<p><img src="]]>
    </summary>
    
      <category term="Suffix Automaton" scheme="http://platypuspro.gitcafe.io/tags/Suffix-Automaton/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3676]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-3676/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-3676/</id>
    <published>2015-05-25T13:27:57.000Z</published>
    <updated>2015-05-25T23:21:34.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3676" target="_blank" rel="external">传送门</a></p>
<p>首先搞出来后缀自动机并统计以后缀自动机中每个节点为结尾的子串个数</p>
<p>然后用manacher找回文串，将每个找到的回文串用自动机统计出出现次数</p>
<p>然后就没了…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3676;</span><br><span class="line"><span class="keyword">const</span> maxn=<span class="number">300001</span>;</span><br><span class="line"><span class="keyword">var</span> fa:<span class="keyword">array</span>[<span class="number">0</span>..maxn*<span class="number">2</span>,<span class="number">0</span>..<span class="number">20</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    cnt:<span class="keyword">array</span>[<span class="number">0</span>..maxn*<span class="number">2</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    son:<span class="keyword">array</span>[<span class="number">0</span>..maxn*<span class="number">2</span>,<span class="number">1</span>..<span class="number">26</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,tot,last,logn:longint;</span><br><span class="line">    str:<span class="keyword">array</span>[<span class="number">0</span>..maxn]<span class="keyword">of</span> char;</span><br><span class="line">    l,tmp,seq,p:<span class="keyword">array</span>[<span class="number">0</span>..maxn*<span class="number">2</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    pos:<span class="keyword">array</span>[<span class="number">1</span>..maxn]<span class="keyword">of</span> longint;</span><br><span class="line">    ans:int64;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">(a,b:int64)</span>:</span>int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&gt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">extend</span><span class="params">(c,t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,p,q,np,nq:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=last;</span><br><span class="line">  inc(tot);</span><br><span class="line">  np:=tot;</span><br><span class="line">  last:=tot;</span><br><span class="line">  l[np]:=l[p]+<span class="number">1</span>;</span><br><span class="line">  cnt[np]:=<span class="number">1</span>;</span><br><span class="line">  pos[t]:=tot;</span><br><span class="line">  <span class="keyword">while</span> (p&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(son[p,c]=<span class="number">0</span>) <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    son[p,c]:=np;</span><br><span class="line">    p:=fa[p,<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> p=<span class="number">0</span> <span class="keyword">then</span> fa[np,<span class="number">0</span>]:=<span class="number">1</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    q:=son[p,c];</span><br><span class="line">    <span class="keyword">if</span> l[p]+<span class="number">1</span>=l[q] <span class="keyword">then</span> fa[np,<span class="number">0</span>]:=q <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(tot);</span><br><span class="line">      nq:=tot;</span><br><span class="line">      l[nq]:=l[p]+<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">26</span> <span class="keyword">do</span> son[nq,i]:=son[q,i];</span><br><span class="line">      fa[nq,<span class="number">0</span>]:=fa[q,<span class="number">0</span>];</span><br><span class="line">      fa[q,<span class="number">0</span>]:=nq;</span><br><span class="line">      fa[np,<span class="number">0</span>]:=nq;</span><br><span class="line">      <span class="keyword">while</span> (p&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(son[p,c]=q) <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        son[p,c]:=nq;</span><br><span class="line">        p:=fa[p,<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">init</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> n <span class="keyword">do</span> tmp[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> tot <span class="keyword">do</span> inc(tmp[l[i]]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(tmp[i],tmp[i-<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">for</span> i:=tot <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    seq[tmp[l[i]]]:=i;</span><br><span class="line">    dec(tmp[l[i]]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=tot <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">if</span> fa[seq[i],<span class="number">0</span>]&gt;<span class="number">1</span> <span class="keyword">then</span> inc(cnt[fa[seq[i],<span class="number">0</span>]],cnt[seq[i]]);</span><br><span class="line">  logn:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> <span class="number">1</span>&lt;&lt;logn&lt;=n <span class="keyword">do</span> inc(logn);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> tot <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> logn <span class="keyword">do</span> fa[i,j]:=fa[fa[i,j-<span class="number">1</span>],j-<span class="number">1</span>];</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">query</span><span class="params">(st,ed:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p,i:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=pos[ed];</span><br><span class="line">  <span class="keyword">for</span> i:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> <span class="keyword">if</span> l[fa[p,i]]&gt;=ed-st+<span class="number">1</span> <span class="keyword">then</span> p:=fa[p,i];</span><br><span class="line">  ans:=max(ans,int64(cnt[p])*int64(ed-st+<span class="number">1</span>));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">manacher</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,mx,id:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  str[<span class="number">0</span>]:=<span class="string">'_'</span>;</span><br><span class="line">  str[n+<span class="number">1</span>]:=<span class="string">'-'</span>;</span><br><span class="line">  mx:=<span class="number">0</span>;</span><br><span class="line">  id:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> mx&gt;i <span class="keyword">then</span> p[i]:=min(p[id&lt;&lt;<span class="number">1</span>-i],mx-i) <span class="keyword">else</span> p[i]:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> str[i+p[i]]=str[i-p[i]] <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      query(i-p[i],i+p[i]);</span><br><span class="line">      inc(p[i]);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> i+p[i]&gt;mx <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      mx:=i+p[i];</span><br><span class="line">      id:=i;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mx:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> mx&gt;i <span class="keyword">then</span> p[i]:=min(p[id&lt;&lt;<span class="number">1</span>-i],mx-i-<span class="number">1</span>) <span class="keyword">else</span> p[i]:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> str[i+p[i]+<span class="number">1</span>]=str[i-p[i]] <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      query(i-p[i],i+p[i]+<span class="number">1</span>);</span><br><span class="line">      inc(p[i]);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> i+p[i]&gt;mx <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      mx:=i+p[i];</span><br><span class="line">      id:=i;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  n:=<span class="number">0</span>;</span><br><span class="line">  tot:=<span class="number">1</span>;</span><br><span class="line">  l[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">  last:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> <span class="keyword">not</span> eoln <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(n);</span><br><span class="line">    <span class="keyword">read</span>(str[n]);</span><br><span class="line">    extend(ord(str[n])-<span class="number">96</span>,n);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  init;</span><br><span class="line">  manacher;</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3676" target="_blank" rel="external">传送门</a></p>
<p>首先搞出来后缀自动机]]>
    </summary>
    
      <category term="Manacher" scheme="http://platypuspro.gitcafe.io/tags/Manacher/"/>
    
      <category term="Suffix Automaton" scheme="http://platypuspro.gitcafe.io/tags/Suffix-Automaton/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[vimrc]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/vimrc/"/>
    <id>http://platypuspro.gitcafe.io/posts/vimrc/</id>
    <published>2015-05-21T23:49:50.000Z</published>
    <updated>2015-05-22T00:10:16.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p>Orz Vim…</p>
<p>听说SC只有Vim没有gdb?…肿么办啊QAQ<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">colorscheme Tomorrow-Night-Eighties "主题</span><br><span class="line"></span><br><span class="line">syntax on "代码高亮 *</span><br><span class="line"></span><br><span class="line">set bs=indent,eol,start "backspace 启用退格 *</span><br><span class="line">set nocp "nocompatible 去掉Vi兼容性 *</span><br><span class="line">set gfn=Source_Code_Pro:h15 "guifont 字体</span><br><span class="line">set nu "number 开启行号 *</span><br><span class="line">set ai "autoindent 自动缩进 *</span><br><span class="line">set ts=2 "tabstop 缩进长度 *</span><br><span class="line">set sw=2 "shiftwidth 自动缩进长度 *</span><br><span class="line">set nobk "nobackup 禁用备份</span><br><span class="line">set et "expandtab tab转空格</span><br><span class="line">set ar "autoread 自动加载更改</span><br><span class="line">set acd "autochangedir 自动切换目录到当前文件目录</span><br><span class="line"></span><br><span class="line">map &lt;F7&gt; :!gdb %&lt; &lt;CR&gt; "gdb调试 *</span><br><span class="line">map &lt;F9&gt; :w&lt;CR&gt; :!fpc % -g -O2 &lt;CR&gt; "编译 *</span><br><span class="line">map &lt;C-F9&gt; :!%&lt; &lt;CR&gt; "运行 *</span><br></pre></td></tr></table></figure></p>
<p><code>&quot;</code>后面的是全称和说明，直接写前面的简写就够了</p>
<p>其实考试的时候用不到这么多，只用加<code>*</code>的那些就够了…这些只是我本地用的…</p>
<blockquote>
<p><strong>附</strong>：</p>
<ul>
<li><a href="https://github.com/chriskempson/tomorrow-theme" target="_blank" rel="external">tomorrow主题官方项目主页</a></li>
<li><a href="https://github.com/adobe-fonts/source-code-pro" target="_blank" rel="external">Source Code Pro官方项目主页</a><br>需要的自己下</li>
</ul>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p>Orz Vim…</p>
<p>听说SC只有Vim没有gdb?…肿么办啊QAQ<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="li]]>
    </summary>
    
      <category term="Others" scheme="http://platypuspro.gitcafe.io/categories/others/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4006]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-4006/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-4006/</id>
    <published>2015-05-20T13:19:04.000Z</published>
    <updated>2015-05-20T14:00:41.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4006" target="_blank" rel="external">传送门</a></p>
<p>注意到题上的$p\leq 10$，所以可以把所有情报站间的连通状态压到一个<code>longint</code>里表示</p>
<p>设$d_{i,j}$为包含$i$点的斯坦纳树，连通状态为$j$时的最小代价，$d_{i,j}=min\lbrace d_{i,k}+d_{i,j-k}\rbrace(k是j的子状态，所以j-k也是j的子状态)$</p>
<p>若$i$是情报站且$j$仅包含$i$一个点的状态则$d_{i,j}=0$</p>
<p>转移方程$d_{i,j}=min(d_{i,j},d_{i’,j}+dis_{i,i’})$可以直接拿<code>SPFA</code>来转移</p>
<p>最后再把这些状态合并一下就行了</p>
<blockquote>
<p>Tips：枚举一个状态的所有子状态时的那个位运算的姿势比较神奇</p>
</blockquote>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4006;</span><br><span class="line"><span class="keyword">const</span> qs=<span class="number">1023</span>;</span><br><span class="line"><span class="keyword">var</span> channel:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">10</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    num,lst:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    d:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1000</span>,<span class="number">0</span>..<span class="number">1023</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">6000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre,w:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,m,p,i,j,k,a,b,c,tot,hd,tl,status:longint;</span><br><span class="line">    q:<span class="keyword">array</span>[<span class="number">1</span>..qs]<span class="keyword">of</span> longint;</span><br><span class="line">    v:<span class="keyword">array</span>[<span class="number">1</span>..qs]<span class="keyword">of</span> boolean;</span><br><span class="line">    f:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1023</span>]<span class="keyword">of</span> longint;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b,w:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line">  l[tot].w:=w;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">spfa</span><span class="params">(status:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  hd:=<span class="number">0</span>;</span><br><span class="line">  tl:=n;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> q[i]:=i;</span><br><span class="line">  fillchar(v,sizeof(v),false);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> v[i]:=true;</span><br><span class="line">  <span class="keyword">while</span> hd&lt;&gt;tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    hd:=hd <span class="keyword">mod</span> qs+<span class="number">1</span>;</span><br><span class="line">    k:=lst[q[hd]];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> d[l[k].ed,status]&gt;d[q[hd],status]+l[k].w <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        d[l[k].ed,status]:=d[q[hd],status]+l[k].w;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> v[l[k].ed] <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          tl:=tl <span class="keyword">mod</span> qs+<span class="number">1</span>;</span><br><span class="line">          q[tl]:=l[k].ed;</span><br><span class="line">          v[l[k].ed]:=true;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    v[q[hd]]:=false;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m,p);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b,c);</span><br><span class="line">    link(a,b,c);</span><br><span class="line">    link(b,a,c);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> p <span class="keyword">do</span> channel[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> num[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> p <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b);</span><br><span class="line">    inc(channel[a],<span class="number">1</span>&lt;&lt;(i-<span class="number">1</span>));</span><br><span class="line">    num[b]:=i;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  fillchar(d,sizeof(d),$<span class="number">3</span>f);</span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">1</span>&lt;&lt;p-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> (num[i]&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(<span class="number">1</span>&lt;&lt;(num[i]-<span class="number">1</span>)=j) <span class="keyword">then</span> d[i,j]:=<span class="number">0</span>;</span><br><span class="line">      k:=j <span class="keyword">and</span> (j-<span class="number">1</span>);</span><br><span class="line">      <span class="keyword">while</span> k&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span> d[i,k]+d[i,j-k]&lt;d[i,j] <span class="keyword">then</span> d[i,j]:=d[i,k]+d[i,j-k];</span><br><span class="line">        k:=j <span class="keyword">and</span> (k-<span class="number">1</span>);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    spfa(j);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">1</span>&lt;&lt;p-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    status:=<span class="number">0</span>;</span><br><span class="line">    f[j]:=maxlongint;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> p <span class="keyword">do</span> <span class="keyword">if</span> j <span class="keyword">and</span>(<span class="number">1</span>&lt;&lt;(i-<span class="number">1</span>))&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> status:=status <span class="keyword">or</span> channel[i];</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">if</span> d[i,status]&lt;f[j] <span class="keyword">then</span> f[j]:=d[i,status];</span><br><span class="line">    k:=j <span class="keyword">and</span> (j-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> f[k]+f[j-k]&lt;f[j] <span class="keyword">then</span> f[j]:=f[k]+f[j-k];</span><br><span class="line">      k:=j <span class="keyword">and</span> (k-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(f[<span class="number">1</span>&lt;&lt;p-<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4006" target="_blank" rel="external">传送门</a></p>
<p>注意到题上的$p\l]]>
    </summary>
    
      <category term="Dynamic Programming" scheme="http://platypuspro.gitcafe.io/tags/Dynamic-Programming/"/>
    
      <category term="Steiner Tree" scheme="http://platypuspro.gitcafe.io/tags/Steiner-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4007]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-4007/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-4007/</id>
    <published>2015-05-19T13:00:44.000Z</published>
    <updated>2015-05-20T13:30:24.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4007" target="_blank" rel="external">传送门</a></p>
<p>头一次见正解是DFS的题…</p>
<p>普通的搜索是枚举最下边一层的状态然后从下往上算</p>
<p>正解是从上往下枚举每个人是当军官还是管后勤，回溯时拿个树形DP来更新答案</p>
<p>这样大概减少了好多重复的计算吧…</p>
<p>设$F_{i,j}$为$i$的子树中选$j$个当兵的最大收益，然后直接算即可</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4007;</span><br><span class="line"><span class="keyword">var</span> warrior,farmer:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">512</span>,<span class="number">1</span>..<span class="number">9</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    f:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1024</span>,<span class="number">0</span>..<span class="number">1024</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    officer:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">512</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    n,m,i,j,ans:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&gt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t,size:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j,cnt:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> t&gt;=<span class="number">1</span>&lt;&lt;(n-<span class="number">1</span>) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    i:=<span class="number">1</span>;</span><br><span class="line">    f[t,<span class="number">0</span>]:=<span class="number">0</span>;</span><br><span class="line">    f[t,<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> t&gt;&gt;i&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> officer[t&gt;&gt;i] <span class="keyword">then</span> inc(f[t,<span class="number">1</span>],warrior[t-<span class="number">1</span>&lt;&lt;(n-<span class="number">1</span>)+<span class="number">1</span>,i]) <span class="keyword">else</span> inc(f[t,<span class="number">0</span>],farmer[t-<span class="number">1</span>&lt;&lt;(n-<span class="number">1</span>)+<span class="number">1</span>,i]);</span><br><span class="line">      inc(i);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  cnt:=min(size,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> cnt <span class="keyword">do</span> f[t,i]:=<span class="number">0</span>;</span><br><span class="line">  officer[t]:=false;</span><br><span class="line">  dfs(t&lt;&lt;<span class="number">1</span>,size&gt;&gt;<span class="number">1</span>);</span><br><span class="line">  dfs(t&lt;&lt;<span class="number">1</span>+<span class="number">1</span>,size&gt;&gt;<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> cnt <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=max(i-size&gt;&gt;<span class="number">1</span>,<span class="number">0</span>) <span class="keyword">to</span> min(i,size&gt;&gt;<span class="number">1</span>) <span class="keyword">do</span> f[t,i]:=max(f[t,i],f[t&lt;&lt;<span class="number">1</span>,j]+f[t&lt;&lt;<span class="number">1</span>+<span class="number">1</span>,i-j]);</span><br><span class="line">  officer[t]:=true;</span><br><span class="line">  dfs(t&lt;&lt;<span class="number">1</span>,size&gt;&gt;<span class="number">1</span>);</span><br><span class="line">  dfs(t&lt;&lt;<span class="number">1</span>+<span class="number">1</span>,size&gt;&gt;<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> cnt <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=max(i-size&gt;&gt;<span class="number">1</span>,<span class="number">0</span>) <span class="keyword">to</span> min(i,size&gt;&gt;<span class="number">1</span>) <span class="keyword">do</span> f[t,i]:=max(f[t,i],f[t&lt;&lt;<span class="number">1</span>,j]+f[t&lt;&lt;<span class="number">1</span>+<span class="number">1</span>,i-j]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">1</span>&lt;&lt;(n-<span class="number">1</span>) <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">read</span>(warrior[i,j]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">1</span>&lt;&lt;(n-<span class="number">1</span>) <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span> <span class="keyword">read</span>(farmer[i,j]);</span><br><span class="line">  dfs(<span class="number">1</span>,<span class="number">1</span>&lt;&lt;(n-<span class="number">1</span>));</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> m <span class="keyword">do</span> ans:=max(ans,f[<span class="number">1</span>,i]);</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4007" target="_blank" rel="external">传送门</a></p>
<p>头一次见正解是DFS]]>
    </summary>
    
      <category term="Search" scheme="http://platypuspro.gitcafe.io/tags/Search/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4003]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-4003/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-4003/</id>
    <published>2015-05-19T01:03:22.000Z</published>
    <updated>2015-05-19T02:24:15.000Z</updated>
    <content type="html"><![CDATA[<p>Splay又被卡链了…尼玛…<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4003" target="_blank" rel="external">传送门</a></p>
<p>先把每个人插到他初始所在的堆里，然后从下往上逐级合并，每次删掉挂了的人并更新答案，打标记更新当前堆中的战斗力</p>
<p>凭什么所有PASCAL都要卡着时限过 TAT</p>
<p>这道题我先敲了个Splay…改了一下午然后被三组链的数据卡掉了 = = 尼玛丧心病狂啊</p>
<p>还以为启发式是个多高端的东西…就是一个if语句…</p>
<p>改了好久的Splay也扔在下面了…能搞70分呢…</p>
<h3 id="可并堆">可并堆</h3><p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4003;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">300000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,dis:longint; k,mul,plus:int64; <span class="keyword">end</span>;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">300000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    lst,tree,p,dep,cnt,dea:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">300001</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    def,v:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">300000</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    a:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">300000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    n,m,i,tot,t,fa:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=a;</span><br><span class="line">  a:=b;</span><br><span class="line">  b:=p;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">update</span><span class="params">(t:longint;mul,plus:int64)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  s[t].k:=s[t].k*mul+plus;</span><br><span class="line">  s[t].plus:=s[t].plus*mul+plus;</span><br><span class="line">  s[t].mul:=s[t].mul*mul;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> update(s[t].lc,s[t].mul,s[t].plus);</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> update(s[t].rc,s[t].mul,s[t].plus);</span><br><span class="line">  s[t].mul:=<span class="number">1</span>;</span><br><span class="line">  s[t].plus:=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">merge</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (a=<span class="number">0</span>)<span class="keyword">or</span>(b=<span class="number">0</span>) <span class="keyword">then</span> <span class="keyword">exit</span>(a+b);</span><br><span class="line">  <span class="keyword">if</span> s[a].k&gt;s[b].k <span class="keyword">then</span> swap(a,b);</span><br><span class="line">  <span class="keyword">if</span> (s[a].plus&lt;&gt;<span class="number">0</span>)<span class="keyword">or</span>(s[a].mul&lt;&gt;<span class="number">1</span>) <span class="keyword">then</span> pushdown(a);</span><br><span class="line">  s[a].rc:=merge(s[a].rc,b);</span><br><span class="line">  <span class="keyword">if</span> s[s[a].lc].dis&lt;s[s[a].rc].dis <span class="keyword">then</span> swap(s[a].lc,s[a].rc);</span><br><span class="line">  s[a].dis:=s[s[a].rc].dis+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">exit</span>(a);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    dep[l[k].ed]:=dep[t]+<span class="number">1</span>;</span><br><span class="line">    dfs(l[k].ed);</span><br><span class="line">    tree[t]:=merge(tree[t],tree[l[k].ed]);</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">while</span> (tree[t]&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(s[tree[t]].k&lt;def[t]) <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(cnt[t]);</span><br><span class="line">    <span class="keyword">if</span> (s[tree[t]].plus&lt;&gt;<span class="number">0</span>)<span class="keyword">or</span>(s[tree[t]].mul&lt;&gt;<span class="number">1</span>) <span class="keyword">then</span> pushdown(tree[t]);</span><br><span class="line">    dea[tree[t]]:=t;</span><br><span class="line">    tree[t]:=merge(s[tree[t]].lc,s[tree[t]].rc);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> tree[t]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> a[t] <span class="keyword">then</span> update(tree[t],v[t],<span class="number">0</span>) <span class="keyword">else</span> update(tree[t],<span class="number">1</span>,v[t]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(def[i]);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(fa,t,v[i]);</span><br><span class="line">    link(fa,i);</span><br><span class="line">    a[i]:=(t=<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> tree[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(s[i].k,p[i]);</span><br><span class="line">    s[i].plus:=<span class="number">0</span>;</span><br><span class="line">    s[i].mul:=<span class="number">1</span>;</span><br><span class="line">    tree[p[i]]:=merge(tree[p[i]],i);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  dep[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> cnt[i]:=<span class="number">0</span>;</span><br><span class="line">  dfs(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> writeln(cnt[i]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> writeln(dep[p[i]]-dep[dea[i]]);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<h3 id="Splay启发式合并">Splay启发式合并</h3><p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4003;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">300000</span>]<span class="keyword">of</span> <span class="keyword">record</span> fa,lc,rc,size,num:longint; k,plus,mul:int64; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,tot,k,top,fa,t:longint;</span><br><span class="line">    a:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">300000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    lst,seq,tree,stk,cnt,dep,dea,st:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">300000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    def,v:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">300000</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    atk:int64;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">600000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=a;</span><br><span class="line">  a:=b;</span><br><span class="line">  b:=p;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">bfs</span>;</span></span><br><span class="line"><span class="keyword">var</span> hd,tl,k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  hd:=<span class="number">0</span>;</span><br><span class="line">  tl:=<span class="number">1</span>;</span><br><span class="line">  seq[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  dep[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> hd&lt;&gt;tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(hd);</span><br><span class="line">    k:=lst[seq[hd]];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(tl);</span><br><span class="line">      seq[tl]:=l[k].ed;</span><br><span class="line">      dep[seq[tl]]:=dep[seq[hd]]+<span class="number">1</span>;</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> l,r:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  l:=s[t].lc;</span><br><span class="line">  r:=s[t].rc;</span><br><span class="line">  <span class="keyword">if</span> s[t].mul&lt;&gt;<span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      s[l].mul:=s[l].mul*s[t].mul;</span><br><span class="line">      s[l].k:=s[l].k*s[t].mul;</span><br><span class="line">      s[l].plus:=s[l].plus*s[t].mul;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> r&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      s[r].mul:=s[r].mul*s[t].mul;</span><br><span class="line">      s[r].k:=s[r].k*s[t].mul;</span><br><span class="line">      s[r].plus:=s[r].plus*s[t].mul;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    s[t].mul:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> s[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(s[l].plus,s[t].plus);</span><br><span class="line">      inc(s[l].k,s[t].plus);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> r&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(s[r].plus,s[t].plus);</span><br><span class="line">      inc(s[r].k,s[t].plus);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    s[t].plus:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">l_rotate</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=s[t].fa;</span><br><span class="line">  s[p].rc:=s[t].lc;</span><br><span class="line">  <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].lc].fa:=p;</span><br><span class="line">  s[t].fa:=s[p].fa;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].lc <span class="keyword">then</span> s[s[p].fa].lc:=t;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].rc <span class="keyword">then</span> s[s[p].fa].rc:=t;</span><br><span class="line">  s[p].fa:=t;</span><br><span class="line">  s[t].lc:=p;</span><br><span class="line">  s[t].size:=s[p].size;</span><br><span class="line">  s[p].size:=s[s[p].lc].size+s[s[p].rc].size+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">r_rotate</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=s[t].fa;</span><br><span class="line">  s[p].lc:=s[t].rc;</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> s[s[t].rc].fa:=p;</span><br><span class="line">  s[t].fa:=s[p].fa;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].lc <span class="keyword">then</span> s[s[p].fa].lc:=t;</span><br><span class="line">  <span class="keyword">if</span> p=s[s[p].fa].rc <span class="keyword">then</span> s[s[p].fa].rc:=t;</span><br><span class="line">  s[p].fa:=t;</span><br><span class="line">  s[t].rc:=p;</span><br><span class="line">  s[t].size:=s[p].size;</span><br><span class="line">  s[p].size:=s[s[p].lc].size+s[s[p].rc].size+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">splay</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">while</span> s[t].fa&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> t=s[s[t].fa].lc <span class="keyword">then</span> r_rotate(t) <span class="keyword">else</span> l_rotate(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(<span class="keyword">var</span> t:longint;k:int64;num:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> t=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> top&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      t:=stk[top];</span><br><span class="line">      dec(top);</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(tot);</span><br><span class="line">      t:=tot;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    s[t].size:=<span class="number">1</span>;</span><br><span class="line">    s[t].k:=k;</span><br><span class="line">    s[t].num:=num;</span><br><span class="line">    s[t].mul:=<span class="number">1</span>;</span><br><span class="line">    s[t].plus:=<span class="number">0</span>;</span><br><span class="line">    s[t].fa:=<span class="number">0</span>;</span><br><span class="line">    s[t].lc:=<span class="number">0</span>;</span><br><span class="line">    s[t].rc:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> (s[t].plus&lt;&gt;<span class="number">0</span>)<span class="keyword">or</span>(s[t].mul&lt;&gt;<span class="number">1</span>) <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  inc(s[t].size);</span><br><span class="line">  <span class="keyword">if</span> k&gt;=s[t].k <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    insert(s[t].lc,k,num);</span><br><span class="line">    s[s[t].lc].fa:=t;</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    insert(s[t].rc,k,num);</span><br><span class="line">    s[s[t].rc].fa:=t;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">(t:longint;k:int64)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  find:=t;</span><br><span class="line">  <span class="keyword">while</span> t&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (s[t].plus&lt;&gt;<span class="number">0</span>)<span class="keyword">or</span>(s[t].mul&lt;&gt;<span class="number">1</span>) <span class="keyword">then</span> pushdown(t);</span><br><span class="line">    <span class="keyword">if</span> k&gt;s[t].k <span class="keyword">then</span> t:=s[t].lc <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      find:=t;</span><br><span class="line">      t:=s[t].rc;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">(t:longint)</span>:</span>int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">while</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (s[t].plus&lt;&gt;<span class="number">0</span>)<span class="keyword">or</span>(s[t].mul&lt;&gt;<span class="number">1</span>) <span class="keyword">then</span> pushdown(t);</span><br><span class="line">    t:=s[t].lc;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(s[t].k);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t,p:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> t=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> (s[t].plus&lt;&gt;<span class="number">0</span>)<span class="keyword">or</span>(s[t].mul&lt;&gt;<span class="number">1</span>) <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> dfs(s[t].lc,p);</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> dfs(s[t].rc,p);</span><br><span class="line">  insert(p,s[t].k,s[t].num);</span><br><span class="line">  inc(top);</span><br><span class="line">  stk[top]:=t;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">update</span><span class="params">(t,p:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> t=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> s[t].lc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> update(s[t].lc,p);</span><br><span class="line">  <span class="keyword">if</span> s[t].rc&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> update(s[t].rc,p);</span><br><span class="line">  cnt[s[t].num]:=dep[st[s[t].num]]-dep[p];</span><br><span class="line">  inc(top);</span><br><span class="line">  stk[top]:=t;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">union</span><span class="params">(<span class="keyword">var</span> t1,t2:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[t1].size&lt;s[t2].size <span class="keyword">then</span> swap(t1,t2);</span><br><span class="line">  dfs(t2,t1);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">maintain</span><span class="params">(p:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> tree[p]=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> max(tree[p])&gt;=def[p] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    t:=find(tree[p],def[p]);</span><br><span class="line">    splay(t);</span><br><span class="line">    tree[p]:=t;</span><br><span class="line">    dea[p]:=s[s[t].rc].size;</span><br><span class="line">    update(s[t].rc,p);</span><br><span class="line">    s[t].rc:=<span class="number">0</span>;</span><br><span class="line">    s[t].size:=s[s[t].lc].size+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    dea[p]:=s[tree[p]].size;</span><br><span class="line">    update(tree[p],p);</span><br><span class="line">    tree[p]:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> a[p] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    s[t].mul:=v[p];</span><br><span class="line">    s[t].k:=s[t].k*v[p];</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(s[t].plus,v[p]);</span><br><span class="line">    inc(s[t].k,v[p]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  pushdown(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(def[i]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">2</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(fa,t,v[i]);</span><br><span class="line">    a[i]:=(t=<span class="number">1</span>);</span><br><span class="line">    link(fa,i);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  bfs;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  top:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> tree[i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(atk,st[i]);</span><br><span class="line">    insert(tree[st[i]],atk,i);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> cnt[i]:=dep[st[i]];</span><br><span class="line">  <span class="keyword">for</span> i:=n <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    k:=lst[seq[i]];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      union(tree[seq[i]],tree[l[k].ed]);</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    maintain(seq[i]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> writeln(dea[i]);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> writeln(cnt[i]);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Splay又被卡链了…尼玛…<br>]]>
    
    </summary>
    
      <category term="Mergeable Heap" scheme="http://platypuspro.gitcafe.io/tags/Mergeable-Heap/"/>
    
      <category term="Splay" scheme="http://platypuspro.gitcafe.io/tags/Splay/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4002]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-4002/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-4002/</id>
    <published>2015-05-18T13:00:38.000Z</published>
    <updated>2015-05-20T00:55:29.000Z</updated>
    <content type="html"><![CDATA[<p>好坑啊QAQ<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4002" target="_blank" rel="external">传送门</a></p>
<p>Orz ZYK</p>
<p>构造出数列$a_n=b\times a_{n-1}+\frac{d-b^2}{4}\times a_{n-2}\ (a_0=2,a_1=b)$</p>
<p>题上说$b\mod 2=1,d\mod 4=1$，所以$\frac{d-b^2}{4}$是个整数，$a_n$就可以拿矩阵乘法搞出来</p>
<p>上面的递推式可以拿特征方程搞成这样<br>$a_n=(\frac{b+\sqrt d}2)^n+(\frac{b-\sqrt d}2)^n$</p>
<p>$(\frac{b+\sqrt d}2)^n=a_n-(\frac{b-\sqrt d}2)^n$</p>
<p>答案求的即为<br>$\lfloor(\frac{b+\sqrt d}2)^n\rfloor=\lfloor a_n-(\frac{b-\sqrt d}2)^n\rfloor$</p>
<p>根据题目可知，后边这坨$-(\frac{b-\sqrt d}2)^n$仅在$b\neq \sqrt d$且$n\mod 2=1$时会对答案产生影响</p>
<p>所以若$b\neq \sqrt d$且$n\mod 2=1$输出$a_n-1$，否则输出$a_n$</p>
<p>尼玛这道题必须用<code>qword(unsigned long long)</code>和快速乘…否则直接爆掉…坑我一晚上…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4002;</span><br><span class="line"><span class="keyword">const</span> mo:qword=<span class="number">7528443412579576937</span>;</span><br><span class="line"><span class="keyword">type</span> matrix=<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">2</span>,<span class="number">1</span>..<span class="number">2</span>]<span class="keyword">of</span> qword;</span><br><span class="line"><span class="keyword">var</span> a,e:matrix;</span><br><span class="line">    b,d,n,ans:qword;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mul</span><span class="params">(a,b:qword)</span>:</span>qword;</span><br><span class="line"><span class="keyword">var</span> ans:qword;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  a:=a <span class="keyword">mod</span> mo;</span><br><span class="line">  b:=b <span class="keyword">mod</span> mo;</span><br><span class="line">  <span class="keyword">while</span> b&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> b <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> ans:=(ans+a)<span class="keyword">mod</span> mo;</span><br><span class="line">    a:=a&lt;&lt;<span class="number">1</span> <span class="keyword">mod</span> mo;</span><br><span class="line">    b:=b&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line">operator *(a,b:matrix)c:matrix;</span><br><span class="line"><span class="keyword">var</span> i,j,k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  fillchar(c,sizeof(c),<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">2</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">2</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">2</span> <span class="keyword">do</span> c[i,j]:=(c[i,j]+mul(a[i,k],b[k,j]))<span class="keyword">mod</span> mo;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qpower</span><span class="params">(n:qword)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:matrix;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  a[<span class="number">1</span>,<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  a[<span class="number">1</span>,<span class="number">2</span>]:=<span class="number">0</span>;</span><br><span class="line">  a[<span class="number">2</span>,<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">  a[<span class="number">2</span>,<span class="number">2</span>]:=<span class="number">1</span>;</span><br><span class="line">  p:=e;</span><br><span class="line">  <span class="keyword">while</span> n&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> n <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> a:=a*p;</span><br><span class="line">    p:=p*p;</span><br><span class="line">    n:=n&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(b,d,n);</span><br><span class="line">  <span class="keyword">if</span> n=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    writeln(<span class="number">1</span>);</span><br><span class="line">    halt;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  e[<span class="number">1</span>,<span class="number">1</span>]:=b;</span><br><span class="line">  e[<span class="number">1</span>,<span class="number">2</span>]:=<span class="number">1</span>;</span><br><span class="line">  e[<span class="number">2</span>,<span class="number">1</span>]:=(d-mul(b,b))<span class="keyword">div</span> <span class="number">4</span>;</span><br><span class="line">  e[<span class="number">2</span>,<span class="number">2</span>]:=<span class="number">0</span>;</span><br><span class="line">  qpower(n-<span class="number">1</span>);</span><br><span class="line">  ans:=(mul(b,a[<span class="number">1</span>,<span class="number">1</span>])+mul(<span class="number">2</span>,a[<span class="number">2</span>,<span class="number">1</span>]))<span class="keyword">mod</span> mo;</span><br><span class="line">  <span class="keyword">if</span> (mul(b,b)&lt;&gt;d)<span class="keyword">and</span>(n <span class="keyword">and</span> <span class="number">1</span>=<span class="number">0</span>) <span class="keyword">then</span> dec(ans);</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>好坑啊QAQ<br>]]>
    
    </summary>
    
      <category term="Matrix Multiplication" scheme="http://platypuspro.gitcafe.io/tags/Matrix-Multiplication/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3611]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-3611/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-3611/</id>
    <published>2015-05-17T01:04:00.000Z</published>
    <updated>2015-05-20T13:30:49.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3611" target="_blank" rel="external">传送门</a></p>
<p>先搞出来虚树，然后树形DP一下就没了…</p>
<p>本来打算还像消耗战那样把DP扔到建树过程里，后来发现似乎不行的说…</p>
<blockquote>
<h4 id="Tips">Tips</h4><p>$f(t)$为$t$子树中关键点个数<br>$g(t)$为$t$子树中所有关键点到$t$距离之和</p>
</blockquote>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3611;</span><br><span class="line"><span class="keyword">const</span> inf=maxlongint&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> n,i,j,a,b,q,tot,logn,len,top,minans,maxans:longint;</span><br><span class="line">    dep,lst,dfn,seq,s,min,max:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1000000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">2000000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    f,g:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1000000</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    fa:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">1000000</span>,<span class="number">0</span>..<span class="number">20</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    key:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">1000000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line">    sum:int64;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=a;</span><br><span class="line">  a:=b;</span><br><span class="line">  b:=p;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  dfn[t]:=tot;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;fa[t,<span class="number">0</span>] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      fa[l[k].ed,<span class="number">0</span>]:=t;</span><br><span class="line">      dep[l[k].ed]:=dep[t]+<span class="number">1</span>;</span><br><span class="line">      dfs(l[k].ed);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j,mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=dfn[seq[(l+r)&gt;&gt;<span class="number">1</span>]];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> dfn[seq[i]]&lt;mid <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> dfn[seq[j]]&gt;mid <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      swap(seq[i],seq[j]);</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lca</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> l:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> dep[a]&lt;dep[b] <span class="keyword">then</span> swap(a,b);</span><br><span class="line">  <span class="keyword">for</span> l:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> <span class="keyword">if</span> dep[fa[a,l]]&gt;=dep[b] <span class="keyword">then</span> a:=fa[a,l];</span><br><span class="line">  <span class="keyword">if</span> a=b <span class="keyword">then</span> <span class="keyword">exit</span>(a);</span><br><span class="line">  <span class="keyword">for</span> l:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> <span class="keyword">if</span> fa[a,l]&lt;&gt;fa[b,l] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    a:=fa[a,l];</span><br><span class="line">    b:=fa[b,l];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(fa[a,<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,l:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  qsort(<span class="number">1</span>,len);</span><br><span class="line">  top:=<span class="number">1</span>;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  s[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  key[<span class="number">1</span>]:=(seq[<span class="number">1</span>]=<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    l:=lca(seq[i],s[top]);</span><br><span class="line">    <span class="keyword">while</span> (top&gt;<span class="number">1</span>)<span class="keyword">and</span>(dep[l]&lt;=dep[s[top-<span class="number">1</span>]]) <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      link(s[top-<span class="number">1</span>],s[top]);</span><br><span class="line">      dec(top);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> l&lt;&gt;s[top] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      link(l,s[top]);</span><br><span class="line">      s[top]:=l;</span><br><span class="line">      key[l]:=false;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> s[top]&lt;&gt;seq[i] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(top);</span><br><span class="line">      s[top]:=seq[i];</span><br><span class="line">      key[seq[i]]:=true;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">while</span> top&gt;<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    link(s[top-<span class="number">1</span>],s[top]);</span><br><span class="line">    dec(top);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dp</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k,d:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> key[t] <span class="keyword">then</span> min[t]:=<span class="number">0</span> <span class="keyword">else</span> min[t]:=inf;</span><br><span class="line">  <span class="keyword">if</span> key[t] <span class="keyword">then</span> max[t]:=<span class="number">0</span> <span class="keyword">else</span> max[t]:=-inf;</span><br><span class="line">  f[t]:=ord(key[t]);</span><br><span class="line">  g[t]:=<span class="number">0</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;fa[t,<span class="number">0</span>] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      dp(l[k].ed);</span><br><span class="line">      d:=dep[l[k].ed]-dep[t];</span><br><span class="line">      <span class="keyword">if</span> min[t]+min[l[k].ed]+d&lt;minans <span class="keyword">then</span> minans:=min[t]+min[l[k].ed]+d;</span><br><span class="line">      <span class="keyword">if</span> max[t]+max[l[k].ed]+d&gt;maxans <span class="keyword">then</span> maxans:=max[t]+max[l[k].ed]+d;</span><br><span class="line">      inc(sum,int64(g[t]+f[t]*d)*int64(f[l[k].ed])+int64(g[l[k].ed])*int64(f[t]));</span><br><span class="line">      inc(f[t],f[l[k].ed]);</span><br><span class="line">      inc(g[t],g[l[k].ed]+f[l[k].ed]*int64(d));</span><br><span class="line">      <span class="keyword">if</span> min[l[k].ed]+d&lt;min[t] <span class="keyword">then</span> min[t]:=min[l[k].ed]+d;</span><br><span class="line">      <span class="keyword">if</span> max[l[k].ed]+d&gt;max[t] <span class="keyword">then</span> max[t]:=max[l[k].ed]+d;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  lst[t]:=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n);</span><br><span class="line">  logn:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> <span class="number">1</span>&lt;&lt;logn&lt;=n <span class="keyword">do</span> inc(logn);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b);</span><br><span class="line">    link(a,b);</span><br><span class="line">    link(b,a);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  dep[<span class="number">0</span>]:=-<span class="number">1</span>;</span><br><span class="line">  dep[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">  fa[<span class="number">1</span>,<span class="number">0</span>]:=<span class="number">0</span>;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  dfs(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> logn:=<span class="number">1</span> <span class="keyword">to</span> logn <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> fa[i,logn]:=fa[fa[i,logn-<span class="number">1</span>],logn-<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> lst[i]:=<span class="number">0</span>;</span><br><span class="line">  readln(q);</span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> q <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(len);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> <span class="keyword">read</span>(seq[i]);</span><br><span class="line">    build;</span><br><span class="line">    minans:=inf;</span><br><span class="line">    maxans:=-inf;</span><br><span class="line">    sum:=<span class="number">0</span>;</span><br><span class="line">    dp(<span class="number">1</span>);</span><br><span class="line">    writeln(sum,<span class="string">' '</span>,minans,<span class="string">' '</span>,maxans);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3611" target="_blank" rel="external">传送门</a></p>
<p>先搞出来虚树，然后树]]>
    </summary>
    
      <category term="Virtual Tree" scheme="http://platypuspro.gitcafe.io/tags/Virtual-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 2286]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-2286/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-2286/</id>
    <published>2015-05-14T12:37:38.000Z</published>
    <updated>2015-05-15T10:57:12.000Z</updated>
    <content type="html"><![CDATA[<p>我说这傻逼题我™改了一整天你信么…<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2286" target="_blank" rel="external">传送门</a></p>
<p>一大早回忆了一下老早之前看过的虚树写法…到了机房开始敲</p>
<p>敲了一个小时发现过不了样例于是找了个BUG，改了一会过了样例和对拍</p>
<p>发现稍微大一点的数据跑起来就像吃了*一样 <del>咦为什么还没有暴力快</del>，然后回头瞅了瞅代码</p>
<p>发现我这个傻逼干了这些事情：</p>
<ul>
<li>每次建虚树的函数中开了个250000大小的数组（此函数最多会调用250000次）</li>
<li>每次把好几个250000大小的数组fillchar</li>
</ul>
<p>改对了以后马上交了一发TLE = =</p>
<p>要来数据开始测 <del>卧槽本地21S+</del></p>
<p>卡了半天常…还写了我人生中第一发RMQ求LCA <del>按理说比倍增快不了多少啊</del></p>
<p>还尼玛TLE</p>
<p>去膜hzwer的代码，发现一个貌似能优化的东东，加上去之后继续T…（此时已到午饭点）</p>
<p>下午又卡了半天常无果，求助身边神犇被D一脸是自己写法有问题TAT</p>
<p>不管怎么改依旧本地压线过交上去毫无疑问TLE</p>
<p>无奈又各种膜代码，发现PoPoQQQ的建虚树过程和DP放在一起搞…好神奇的样子</p>
<p>然后改呀改呀最终本地4S+ BZOJ 12S+</p>
<p>UPD: 发现了罪魁祸首，在建虚树过程中我傻逼地写了个$O(n)$级别的循环来赋初始值 = = 改完以后BZOJ 10S+…</p>
<p><del>咦好像扯远了我还没讲题呢…</del></p>
<p>首先把要建到虚树中的点按照DFS序排序</p>
<p>然后维护一个栈，从栈顶到栈底深度递减（栈底是根），保证从栈顶到栈底是一条需要建进虚树的路径，路径中只保留必要的点（询问的点与询问的点的LCA），这些点间的其他边和点都缩到一条边里</p>
<p>每次加一个点时把不在新加点到根的路径中的点依次弹出去，然后再把在路径中的点扔进来</p>
<p>每次弹栈的时候连边（其实如果把DP和建树放在一起的话就不用连边了）</p>
<p>比如说对于样例的10和6，步骤如下</p>
<ul>
<li>初始化 栈中有{1}</li>
<li>将10加入栈中 栈中有{1,10}</li>
<li>找到新加点6与栈顶10的LCA 5 发现深度小于栈顶 连边(1,10)并弹掉10 栈中有{1}</li>
<li>将5加入栈中 栈中有{1,5}</li>
<li>将6加入栈中 栈中有{1,5,6}</li>
<li>依次连边(5,6),(1,5) 并依次弹 6,5,1</li>
</ul>
<p>关于树形DP就不用提了吧…自己YY就好了</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_2286;</span><br><span class="line"><span class="keyword">var</span> dep,seq,lst,pos,s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">250000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">250000</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    fa,mn:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">500000</span>,<span class="number">0</span>..<span class="number">18</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">500000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,w,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,q,tot,a,b,c,len,logn:longint;</span><br><span class="line">    energy:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">250000</span>]<span class="keyword">of</span> boolean;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">swap</span><span class="params">(<span class="keyword">var</span> a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  p:=a;</span><br><span class="line">  a:=b;</span><br><span class="line">  b:=p;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b,w:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line">  l[tot].w:=w;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(len);</span><br><span class="line">  pos[t]:=len;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;fa[t,<span class="number">0</span>] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      fa[l[k].ed,<span class="number">0</span>]:=t;</span><br><span class="line">      dep[l[k].ed]:=dep[t]+<span class="number">1</span>;</span><br><span class="line">      mn[l[k].ed,<span class="number">0</span>]:=l[k].w;</span><br><span class="line">      dfs(l[k].ed);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j,mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=pos[seq[(l+r)&gt;&gt;<span class="number">1</span>]];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> pos[seq[i]]&lt;mid <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> pos[seq[j]]&gt;mid <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      swap(seq[i],seq[j]);</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lca</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> l:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> dep[a]&lt;dep[b] <span class="keyword">then</span> swap(a,b);</span><br><span class="line">  <span class="keyword">for</span> l:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> dep[fa[a,l]]&gt;=dep[b] <span class="keyword">then</span> a:=fa[a,l];</span><br><span class="line">  <span class="keyword">if</span> a=b <span class="keyword">then</span> <span class="keyword">exit</span>(a);</span><br><span class="line">  <span class="keyword">for</span> l:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> <span class="keyword">if</span> fa[a,l]&lt;&gt;fa[b,l] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    a:=fa[a,l];</span><br><span class="line">    b:=fa[b,l];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(fa[a,<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getmin</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> l,ans:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ans:=maxlongint;</span><br><span class="line">  <span class="keyword">for</span> l:=logn <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> dep[fa[a,l]]&gt;=dep[b] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> mn[a,l]&lt;ans <span class="keyword">then</span> ans:=mn[a,l];</span><br><span class="line">    a:=fa[a,l];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">exit</span>(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span>;</span></span><br><span class="line"><span class="keyword">var</span> top,i,l,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  qsort(<span class="number">1</span>,len);</span><br><span class="line">  top:=<span class="number">1</span>;</span><br><span class="line">  s[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  f[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">  energy[<span class="number">1</span>]:=false;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    l:=lca(seq[i],s[top]);</span><br><span class="line">    <span class="keyword">while</span> (top&gt;<span class="number">1</span>)<span class="keyword">and</span>(dep[s[top-<span class="number">1</span>]]&gt;=dep[l]) <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      t:=getmin(s[top],s[top-<span class="number">1</span>]);</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">not</span> energy[top])<span class="keyword">and</span>(f[top]&lt;t) <span class="keyword">then</span> t:=f[top];</span><br><span class="line">      inc(f[top-<span class="number">1</span>],t);</span><br><span class="line">      dec(top);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">if</span> l&lt;&gt;s[top] <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      t:=getmin(s[top],l);</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">not</span> energy[top])<span class="keyword">and</span>(f[top]&lt;t) <span class="keyword">then</span> t:=f[top];</span><br><span class="line">      f[top]:=t;</span><br><span class="line">      s[top]:=l;</span><br><span class="line">      energy[top]:=false;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    inc(top);</span><br><span class="line">    s[top]:=seq[i];</span><br><span class="line">    energy[top]:=true;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">while</span> top&gt;<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    t:=getmin(s[top],s[top-<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">not</span> energy[top])<span class="keyword">and</span>(f[top]&lt;t) <span class="keyword">then</span> t:=f[top];</span><br><span class="line">    inc(f[top-<span class="number">1</span>],t);</span><br><span class="line">    dec(top);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n);</span><br><span class="line">  logn:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> <span class="number">1</span>&lt;&lt;logn&lt;=n <span class="keyword">do</span> inc(logn);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b,c);</span><br><span class="line">    link(a,b,c);</span><br><span class="line">    link(b,a,c);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  dep[<span class="number">1</span>]:=<span class="number">1</span>;</span><br><span class="line">  fa[<span class="number">1</span>,<span class="number">0</span>]:=<span class="number">0</span>;</span><br><span class="line">  len:=<span class="number">0</span>;</span><br><span class="line">  dfs(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> logn:=<span class="number">1</span> <span class="keyword">to</span> logn <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    fa[i,logn]:=fa[fa[i,logn-<span class="number">1</span>],logn-<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> mn[i,logn-<span class="number">1</span>]&lt;mn[fa[i,logn-<span class="number">1</span>],logn-<span class="number">1</span>] <span class="keyword">then</span> mn[i,logn]:=mn[i,logn-<span class="number">1</span>] <span class="keyword">else</span> mn[i,logn]:=mn[fa[i,logn-<span class="number">1</span>],logn-<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  readln(m);</span><br><span class="line">  <span class="keyword">for</span> q:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(len);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> <span class="keyword">read</span>(seq[i]);</span><br><span class="line">    build;</span><br><span class="line">    writeln(f[<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>我说这傻逼题我™改了一整天你信么…<br>]]>
    
    </summary>
    
      <category term="Virtual Tree" scheme="http://platypuspro.gitcafe.io/tags/Virtual-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3295]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-3295/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-3295/</id>
    <published>2015-05-14T12:37:26.000Z</published>
    <updated>2015-05-14T13:44:02.000Z</updated>
    <content type="html"><![CDATA[<p>论主席树の日常MLE…<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3295" target="_blank" rel="external">传送门</a></p>
<p>一个数的逆序对数=前面比它大的+后面比它小的</p>
<p>设这个数$k$是第$i$个，那么它的逆序对数就是$root[1]-root[i-1]$中范围在$[k+1,n]$里的数的个数+$root[i+1]-root[n]$中范围在$[1,k-1]$里的数的个数</p>
<p>每次删除时从答案中减去它的影响，并修改一下主席树就可以了</p>
<p>开始呢…我逗比地在每次修改时又完全新建了一条$\log n$长度的链…空间复杂度$(n+m)(\log n)^2$…</p>
<p>卡了半天内存发现完全可以利用老版本节点…QAQ</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3295;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">10000000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,size:longint; <span class="keyword">end</span>;</span><br><span class="line">    root,pos,seq:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,i,tot,p,len,x:longint;</span><br><span class="line">    b:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">17</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    ans:int64;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lowbit</span><span class="params">(x:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">exit</span>(x <span class="keyword">and</span> -x);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">init</span><span class="params">(x:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  len:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> x&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(len);</span><br><span class="line">    b[len]:=root[x];</span><br><span class="line">    dec(x,lowbit(x));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(<span class="keyword">var</span> t:longint;l,r,p,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> t=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(tot);</span><br><span class="line">    t:=tot;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  inc(s[t].size,d);</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> p&lt;=mid <span class="keyword">then</span> modify(s[t].lc,l,mid,p,d) <span class="keyword">else</span> modify(s[t].rc,mid+<span class="number">1</span>,r,p,d);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(l,r,ll,rr:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> i,t,mid:longint;</span><br><span class="line">    p:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">17</span>]<span class="keyword">of</span> longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  t:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (ll&lt;=l)<span class="keyword">and</span>(rr&gt;=r) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> inc(t,s[b[i]].size);</span><br><span class="line">    <span class="keyword">exit</span>(t);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> p[i]:=b[i];</span><br><span class="line">  <span class="keyword">if</span> ll&lt;=mid <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> b[i]:=s[p[i]].lc;</span><br><span class="line">    inc(t,query(l,mid,ll,rr));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> rr&gt;mid <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> b[i]:=s[p[i]].rc;</span><br><span class="line">    inc(t,query(mid+<span class="number">1</span>,r,ll,rr));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> b[i]:=p[i];</span><br><span class="line">  <span class="keyword">exit</span>(t);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">count</span><span class="params">(l,r,ll,rr:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> l&gt;r <span class="keyword">then</span> <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">  init(r);</span><br><span class="line">  count:=query(<span class="number">1</span>,n,ll,rr);</span><br><span class="line">  init(l-<span class="number">1</span>);</span><br><span class="line">  dec(count,query(<span class="number">1</span>,n,ll,rr));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  fillchar(root,sizeof(root),<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(seq[i]);</span><br><span class="line">    pos[seq[i]]:=i;</span><br><span class="line">    p:=i;</span><br><span class="line">    <span class="keyword">while</span> p&lt;=n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      modify(root[p],<span class="number">1</span>,n,seq[i],<span class="number">1</span>);</span><br><span class="line">      inc(p,lowbit(p));</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> inc(ans,count(i+<span class="number">1</span>,n,<span class="number">1</span>,seq[i]));</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    writeln(ans);</span><br><span class="line">    readln(x);</span><br><span class="line">    dec(ans,count(<span class="number">1</span>,pos[x]-<span class="number">1</span>,x,n)+count(pos[x]+<span class="number">1</span>,n,<span class="number">1</span>,x));</span><br><span class="line">    p:=pos[x];</span><br><span class="line">    <span class="keyword">while</span> p&lt;=n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      modify(root[p],<span class="number">1</span>,n,x,-<span class="number">1</span>);</span><br><span class="line">      inc(p,lowbit(p));</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>论主席树の日常MLE…<br>]]>
    
    </summary>
    
      <category term="Fotile Tree" scheme="http://platypuspro.gitcafe.io/tags/Fotile-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3675]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-3675/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-3675/</id>
    <published>2015-05-02T11:00:26.000Z</published>
    <updated>2015-05-02T12:34:15.000Z</updated>
    <content type="html"><![CDATA[<p>PASCAL的常数啊QAQ<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3675" target="_blank" rel="external">传送门</a></p>
<p>设最后分成的各个子序列的和分别为$S_1,S_2,\cdots,S_{k+1}$，那么答案就是<br>$$\sum_{i=1}^kS_i\sum_{j=i+1}^{k+1}S_j$$</p>
<p>与分割的顺序无关，然后可以搞出DP方程<br>$$F_{i,k}=max\lbrace F_{j,k-1},j\in[1,i)\rbrace+sum_j\times(sum_i-sum_j)$$</p>
<p>取$0&lt;a,b&lt;i$，决策$a$优于决策$b$当且仅当</p>
<p>$$F_{a,k}+sum_a\cdot sum_i-{sum_a}^2&gt;F_{b,k}+sum_b\cdot sum_i-{sum_b}^2$$</p>
<p>$$\frac{(F_{a,k}-{sum_a}^2)-(F_{b,k}-{sum_b}^2)}{sum_a-sum_b}&gt;-sum_i$$</p>
<p>然后就是斜率优化的事了…（只用滚动数组就够了）</p>
<p><del>C++平均10s PASCAL最快25s（我30s）是要闹哪样</del></p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3675;</span><br><span class="line"><span class="keyword">const</span> eps=<span class="number">1</span>e-<span class="number">6</span>;</span><br><span class="line"><span class="keyword">var</span> f,g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>,<span class="number">0</span>..<span class="number">1</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    sum,q:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,hd,tl,i,j,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  sum[<span class="number">0</span>]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(t);</span><br><span class="line">    sum[i]:=sum[i-<span class="number">1</span>]+t;</span><br><span class="line">    g[i,<span class="number">0</span>]:=-int64(sum[i])*int64(sum[i]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  t:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    hd:=<span class="number">1</span>;</span><br><span class="line">    tl:=<span class="number">1</span>;</span><br><span class="line">    q[<span class="number">1</span>]:=<span class="number">0</span>;</span><br><span class="line">    t:=t xor <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">while</span> (hd&lt;tl)<span class="keyword">and</span>(g[q[hd],t xor <span class="number">1</span>]-g[q[hd+<span class="number">1</span>],t xor <span class="number">1</span>]&lt;-int64(sum[i])*int64(sum[q[hd]]-sum[q[hd+<span class="number">1</span>]])+eps) <span class="keyword">do</span> inc(hd);</span><br><span class="line">      f[i,t]:=f[q[hd],t xor <span class="number">1</span>]+int64(sum[q[hd]])*int64(sum[i]-sum[q[hd]]);</span><br><span class="line">      g[i,t]:=f[i,t]-int64(sum[i])*int64(sum[i]);</span><br><span class="line">      <span class="keyword">while</span> (hd&lt;tl)<span class="keyword">and</span>((g[q[tl-<span class="number">1</span>],t xor <span class="number">1</span>]-g[q[tl],t xor <span class="number">1</span>])*int64(sum[i]-sum[q[tl]])+eps&gt;(g[q[tl],t xor <span class="number">1</span>]-g[i,t xor <span class="number">1</span>])*int64(sum[q[tl]]-sum[q[tl-<span class="number">1</span>]])) <span class="keyword">do</span> dec(tl);</span><br><span class="line">      inc(tl);</span><br><span class="line">      q[tl]:=i;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(f[n,t]);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>PASCAL的常数啊QAQ<br>]]>
    
    </summary>
    
      <category term="Dynamic Programming" scheme="http://platypuspro.gitcafe.io/tags/Dynamic-Programming/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4034]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-4034/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-4034/</id>
    <published>2015-05-02T11:00:19.000Z</published>
    <updated>2015-05-02T12:41:46.000Z</updated>
    <content type="html"><![CDATA[<p>考场上直接A掉了~啦啦啦~<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4034" target="_blank" rel="external">传送门</a></p>
<p>正解是俩树状数组…但是太弱了不会啊…于是只能拿树链剖分搞了…</p>
<p>考场上敲了40min+ 各种数据拍+调了一个小时找了仨错出来最后顺利AC啦啦啦</p>
<p>HA考场上好像没几个人A…但是挂到BZOJ上以后就被各种艹翻…QAQ</p>
<p>考场上敲的代码↓ OwO<br><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4034;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> <span class="keyword">record</span> fa,size,hev,l,r,w,bl,rk:longint; <span class="keyword">end</span>;</span><br><span class="line">    seq,lst,top:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">200000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre:longint; <span class="keyword">end</span>;</span><br><span class="line">    seg:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">200000</span>]<span class="keyword">of</span> <span class="keyword">record</span> l,r,lc,rc:longint; plus,sum:int64; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,a,b,tot,len,pcnt,cas:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs1</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k,max,p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  s[t].size:=<span class="number">1</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  s[t].hev:=<span class="number">0</span>;</span><br><span class="line">  max:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;s[t].fa <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      s[l[k].ed].fa:=t;</span><br><span class="line">      dfs1(l[k].ed);</span><br><span class="line">      inc(s[t].size,s[l[k].ed].size);</span><br><span class="line">      <span class="keyword">if</span> s[l[k].ed].size&gt;max <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        max:=s[l[k].ed].size;</span><br><span class="line">        s[t].hev:=l[k].ed;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;s[t].fa <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> l[k].ed=s[t].hev <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        s[t].bl:=s[l[k].ed].bl;</span><br><span class="line">        s[t].rk:=s[l[k].ed].rk+<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        p:=s[l[k].ed].bl;</span><br><span class="line">        top[p]:=l[k].ed;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> s[t].hev=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(pcnt);</span><br><span class="line">    s[t].bl:=pcnt;</span><br><span class="line">    s[t].rk:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs2</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(len);</span><br><span class="line">  s[t].l:=len;</span><br><span class="line">  seq[len]:=s[t].w;</span><br><span class="line">  <span class="keyword">if</span> s[t].hev&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    k:=lst[t];</span><br><span class="line">    <span class="keyword">while</span> (k&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(l[k].ed&lt;&gt;s[t].hev) <span class="keyword">do</span> k:=l[k].pre;</span><br><span class="line">    dfs2(l[k].ed);</span><br><span class="line">    k:=lst[t];</span><br><span class="line">    <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> (l[k].ed&lt;&gt;s[t].fa)<span class="keyword">and</span>(l[k].ed&lt;&gt;s[t].hev) <span class="keyword">then</span> dfs2(l[k].ed);</span><br><span class="line">      k:=l[k].pre;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  s[t].r:=len;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> l,r:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> seg[t].plus=<span class="number">0</span> <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> seg[t].l=seg[t].r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    seg[t].plus:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  l:=seg[t].lc;</span><br><span class="line">  r:=seg[t].rc;</span><br><span class="line">  inc(seg[l].plus,seg[t].plus);</span><br><span class="line">  inc(seg[r].plus,seg[t].plus);</span><br><span class="line">  inc(seg[l].sum,seg[t].plus*int64(seg[l].r-seg[l].l+<span class="number">1</span>));</span><br><span class="line">  inc(seg[r].sum,seg[t].plus*int64(seg[r].r-seg[r].l+<span class="number">1</span>));</span><br><span class="line">  seg[t].plus:=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span><span class="params">(<span class="keyword">var</span> t:longint;l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  seg[t].l:=l;</span><br><span class="line">  seg[t].r:=r;</span><br><span class="line">  seg[t].plus:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    seg[t].sum:=seq[l];</span><br><span class="line">    seg[t].lc:=<span class="number">0</span>;</span><br><span class="line">    seg[t].rc:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  build(seg[t].lc,l,mid);</span><br><span class="line">  build(seg[t].rc,mid+<span class="number">1</span>,r);</span><br><span class="line">  seg[t].sum:=seg[seg[t].lc].sum+seg[seg[t].rc].sum;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">plus</span><span class="params">(t,l,r,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> seg[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;=seg[t].l)<span class="keyword">and</span>(r&gt;=seg[t].r) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(seg[t].plus,d);</span><br><span class="line">    inc(seg[t].sum,seg[t].plus*int64(seg[t].r-seg[t].l+<span class="number">1</span>));</span><br><span class="line">    pushdown(t);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> seg[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  mid:=(seg[t].l+seg[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> plus(seg[t].lc,l,r,d);</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> plus(seg[t].rc,l,r,d);</span><br><span class="line">  seg[t].sum:=seg[seg[t].lc].sum+seg[seg[t].rc].sum;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(t,l,r:longint)</span>:</span>int64;</span><br><span class="line"><span class="keyword">var</span> ans:int64;</span><br><span class="line">    mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> seg[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;=seg[t].l)<span class="keyword">and</span>(r&gt;=seg[t].r) <span class="keyword">then</span> <span class="keyword">exit</span>(seg[t].sum);</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  mid:=(seg[t].l+seg[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> inc(ans,query(seg[t].lc,l,r));</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> inc(ans,query(seg[t].rc,l,r));</span><br><span class="line">  <span class="keyword">exit</span>(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">ask</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> ans:int64;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> top[s[t].bl]&lt;&gt;<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(ans,query(<span class="number">1</span>,s[top[s[t].bl]].l,s[t].l));</span><br><span class="line">    t:=s[top[s[t].bl]].fa;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  inc(ans,query(<span class="number">1</span>,s[<span class="number">1</span>].l,s[t].l));</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(s[i].w);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b);</span><br><span class="line">    link(a,b);</span><br><span class="line">    link(b,a);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  len:=<span class="number">0</span>;</span><br><span class="line">  s[<span class="number">1</span>].fa:=<span class="number">0</span>;</span><br><span class="line">  pcnt:=<span class="number">0</span>;</span><br><span class="line">  dfs1(<span class="number">1</span>);</span><br><span class="line">  i:=s[<span class="number">1</span>].bl;</span><br><span class="line">  top[i]:=<span class="number">1</span>;</span><br><span class="line">  dfs2(<span class="number">1</span>);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  build(i,<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(cas);</span><br><span class="line">    <span class="keyword">case</span> cas <span class="keyword">of</span></span><br><span class="line">      <span class="number">1</span>:<span class="keyword">begin</span></span><br><span class="line">        readln(a,b);</span><br><span class="line">        plus(<span class="number">1</span>,s[a].l,s[a].l,b);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      <span class="number">2</span>:<span class="keyword">begin</span></span><br><span class="line">        readln(a,b);</span><br><span class="line">        plus(<span class="number">1</span>,s[a].l,s[a].r,b);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">      <span class="number">3</span>:<span class="keyword">begin</span></span><br><span class="line">        readln(a);</span><br><span class="line">        ask(a);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>考场上直接A掉了~啦啦啦~<br>]]>
    
    </summary>
    
      <category term="Tree Chain Split" scheme="http://platypuspro.gitcafe.io/tags/Tree-Chain-Split/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4033]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-4033/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-4033/</id>
    <published>2015-05-02T11:00:11.000Z</published>
    <updated>2015-05-20T13:31:11.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4033" target="_blank" rel="external">传送门</a></p>
<p>考场上交的30分暴力QAQ…Orz cstdio</p>
<p><a href="http://ydc.blog.uoj.ac/blog/336" target="_blank" rel="external">Orz ydc</a></p>
<p>$F_{i,k}$表示以$i$为根的子树中选$k$个黑点的收益</p>
<p>然后在$dfs$过程中直接拿每个节点的子树来更新答案就行了</p>
<p><del>还是太弱啊QAQ</del></p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4033;</span><br><span class="line"><span class="keyword">var</span> f,g:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2000</span>,<span class="number">0</span>..<span class="number">2000</span>]<span class="keyword">of</span> int64;</span><br><span class="line">    l:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">4000</span>]<span class="keyword">of</span> <span class="keyword">record</span> ed,pre,w:longint; <span class="keyword">end</span>;</span><br><span class="line">    lst,size:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">2000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,kk,i,tot,a,b,c:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">max</span><span class="params">(<span class="keyword">var</span> a:int64;b:int64)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> b&gt;a <span class="keyword">then</span> a:=b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">min</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&lt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">link</span><span class="params">(a,b,c:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  l[tot].pre:=lst[a];</span><br><span class="line">  lst[a]:=tot;</span><br><span class="line">  l[tot].ed:=b;</span><br><span class="line">  l[tot].w:=c;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">dfs</span><span class="params">(t,fa,w:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> k,i,j:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  size[t]:=<span class="number">1</span>;</span><br><span class="line">  k:=lst[t];</span><br><span class="line">  <span class="keyword">while</span> k&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> l[k].ed&lt;&gt;fa <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      dfs(l[k].ed,t,l[k].w);</span><br><span class="line">      <span class="keyword">for</span> i:=min(size[t],kk) <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">for</span> j:=min(size[l[k].ed],kk-i) <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span> max(g[t,i+j],g[t,i]+f[l[k].ed,j]);</span><br><span class="line">      inc(size[t],size[l[k].ed]);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    k:=l[k].pre;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> <span class="keyword">to</span> size[t] <span class="keyword">do</span> f[t,i]:=g[t,i]+int64(w)*(int64(i)*int64(kk-i)+int64(size[t]-i)*int64(n-kk-size[t]+i));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,kk);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n-<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(a,b,c);</span><br><span class="line">    link(a,b,c);</span><br><span class="line">    link(b,a,c);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  dfs(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">  writeln(f[<span class="number">1</span>,kk]);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4033" target="_blank" rel="external">传送门</a></p>
<p>考场上交的30分暴力]]>
    </summary>
    
      <category term="Dynamic Programming" scheme="http://platypuspro.gitcafe.io/tags/Dynamic-Programming/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3111]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-3111/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-3111/</id>
    <published>2015-05-02T11:00:05.000Z</published>
    <updated>2015-05-20T13:31:21.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3111" target="_blank" rel="external">传送门</a></p>
<h3 id="问题描述">问题描述</h3><p>在一个$n\times m$的棋盘上，每个格子有一个权值，初始时，在某个格子的顶点处一只面朝北的蚂蚁，我们只知道它的行走路线是如何转弯，却不知道每次转弯前走了多长。蚂蚁转弯是有一定特点的，即它的转弯序列一定是如下的形式：<br>右转，右转，左转，左转，右转，右转$cdots$左转，左转，右转，右转，右转。<br>即两次右转和两次左转交替出现的形式，最后两次右转（最后两次一定是右转）后再多加一次右转。我们还知道，蚂蚁不会在同一个位置连续旋转两次，并且蚂蚁行走的路径除了起点以外，不会到达同一个点多次，它最后一定是回到起点然后结束自己的行程，而且蚂蚁只会在棋盘格子的顶点处转弯。<br>设$k$为蚂蚁左转的次数除以$2$，当$k=0$时，蚂蚁可能行走的路径如下图<br><img src="http://i2.tietuku.com/5ce3cd961fd8a2b3.png" alt=""><br>转弯序列为：右转，右转，右转。<br>当$k=1$时，蚂蚁可能行走的路径如下图<br><img src="http://i2.tietuku.com/6c191d6d0855d2fc.png" alt=""><br>转弯序列为：右转，右转，左转，左转，右转，右转，右转。<br>现在已知棋盘大小、每个格子的权值以及左转次数$/2$的值，问蚂蚁走出的路径围出的封闭图形，权值之和最大可能是多少。</p>
<h3 id="输入格式">输入格式</h3><p>在输入文件$ant.in$中，第一行三个数$n,m,k$。意义如题目描述。<br>接下来一个$n$行$m$列的整数矩阵，表示棋盘。</p>
<h3 id="输出格式">输出格式</h3><p>在输入文件$ant.out$中，一个数，表示蚂蚁所走路径围出的图形可能的最大权值和。</p>
<h3 id="样例输入">样例输入</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2 5 2</span><br><span class="line">-1 -1 -1 -1 -1</span><br><span class="line">-1 -1 -1 -1 -1</span><br></pre></td></tr></table></figure>
<h3 id="样例输出">样例输出</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-8</span><br></pre></td></tr></table></figure>
<h3 id="样例说明">样例说明</h3><p>除了第一行的第二个和第一行的第四个都要围起来才至少合法。</p>
<h3 id="数据规模与约定">数据规模与约定</h3><p>$10\%$的数据所有格子中权值均非负<br>另$20\%$的数据$n=2$<br>另$30\%$的数据$k=0$<br>$100\%$的数据$1\leq n\leq 100,1\leq m\leq 100,0\leq k\leq 10 $保证存在合法路径，数据有梯度，格子中每个元素的值绝对值不超过$10000$</p>
<p>把路径自己画一画就可以得出蚂蚁包围的图形其实就是底边在一条线上的一高一低$2\times k+1$个矩形，且第奇数个比两边高，第偶数个比两边低</p>
<p>先说明一下…以下的方程是按照矩形左下角为原点推的，但是因为代码里把矩形左上角存成原点比较方便…所以这些方程意会就好…</p>
<p>设$F_{i,j,k,l}$为当前是第$k$个矩形，矩形<strong>右下角</strong>为$(i,j)$，<strong>右上角</strong>为$(l,j)$时的最大权值和（之前的图形也要算进来），$sum[i,j]$为第$j$列中$1$到$i$的权值和</p>
<p>那么每次转移有两种情况，接着上一个矩形走或者新开一个矩形，所以</p>
<p>$$F_{i,j,k,l}=max(F_{i,j-1,k,l},F_{i,j-1,k-1,h})+sum[i,j]-sum[l-1,j](若k为奇数h\in[i,l),若k为偶数h\in(l,n])$$</p>
<p>后边那坨可以预处理出来</p>
<p>$$F1_{i,j,k,l}=max\lbrace F_{i,j,k,h},h\in[1,l)\rbrace$$<br>$$F2_{i,j,k,l}=max\lbrace F_{i,j,k,h},h\in(l,n]\rbrace$$</p>
<p>然后呢…$i$其实可以不用存在数组里，只用存后边3维就行了</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3111;</span><br><span class="line"><span class="keyword">const</span> inf=maxlongint&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> f,f1,f2:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100</span>,<span class="number">0</span>..<span class="number">21</span>,<span class="number">1</span>..<span class="number">100</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    sum:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100</span>,<span class="number">1</span>..<span class="number">100</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,c,i,j,k,l,ans:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">(a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> a&gt;b <span class="keyword">then</span> <span class="keyword">exit</span>(a) <span class="keyword">else</span> <span class="keyword">exit</span>(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m,c);</span><br><span class="line">  c:=c&lt;&lt;<span class="number">1</span>+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> sum[<span class="number">0</span>,i]:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(k);</span><br><span class="line">    sum[i,j]:=sum[i-<span class="number">1</span>,j]+k;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> c <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    f[<span class="number">0</span>,k,j]:=-inf;</span><br><span class="line">    f1[<span class="number">0</span>,k,j]:=-inf;</span><br><span class="line">    f2[<span class="number">0</span>,k,j]:=-inf;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  ans:=-inf;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> k:=<span class="number">1</span> <span class="keyword">to</span> c <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">for</span> l:=i <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span> <span class="keyword">if</span> k <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> f[j,k,l]:=max(f[j-<span class="number">1</span>,k,l],f1[j-<span class="number">1</span>,k-<span class="number">1</span>,l])+sum[i,j]-sum[l-<span class="number">1</span>,j]</span><br><span class="line">      <span class="keyword">else</span> f[j,k,l]:=max(f[j-<span class="number">1</span>,k,l],f2[j-<span class="number">1</span>,k-<span class="number">1</span>,l])+sum[i,j]-sum[l-<span class="number">1</span>,j];</span><br><span class="line">      f2[j,k,<span class="number">1</span>]:=-inf;</span><br><span class="line">      <span class="keyword">for</span> l:=<span class="number">2</span> <span class="keyword">to</span> i <span class="keyword">do</span> f2[j,k,l]:=max(f2[j,k,l-<span class="number">1</span>],f[j,k,l-<span class="number">1</span>]);</span><br><span class="line">      f1[j,k,i]:=-inf;</span><br><span class="line">      <span class="keyword">for</span> l:=i-<span class="number">1</span> <span class="keyword">downto</span> <span class="number">1</span> <span class="keyword">do</span> f1[j,k,l]:=max(f1[j,k,l+<span class="number">1</span>],f[j,k,l+<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    ans:=max(ans,max(f2[j,c,i],f[j,c,i]));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  writeln(ans);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3111" target="_blank" rel="external">传送门</a></p>
<h3 id="问题描述"]]>
    </summary>
    
      <category term="Dynamic Programming" scheme="http://platypuspro.gitcafe.io/tags/Dynamic-Programming/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 1901]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-1901/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-1901/</id>
    <published>2015-04-30T13:13:37.000Z</published>
    <updated>2015-05-20T13:31:30.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1901" target="_blank" rel="external">传送门</a></p>
<p>其实这是道权限题…建议去ZOJ测…</p>
<p><a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemId=2112" target="_blank" rel="external">ZOJ传送门</a></p>
<p>想+写一上午，调一下午…关键是这题的离散化好恶心啊尼玛，一堆数组绕着绕着就晕了…QAQ</p>
<p>首先扯一个会MLE的解法</p>
<p>对于普通的不带修改的主席树，$root[i]$记载的是从$1$到$i$的所有更改</p>
<p>然后拿树状数组分组一下，让$root[i]$记载从$i-lowbit(i)$到$i$的所有更改，这样建树或修改的时间复杂度$O(n(\log_2n)^2)$</p>
<p>但是呢…这样的空间复杂度有点受不了…大概是$O(n(\log_2n)^2+m(\log_2n)^2)$，毫无疑问MLE <del>何况ZOJ卡了32M内存尼玛</del></p>
<p>正确的姿势是初始的建树按照正常的主席树建，然后每个修改再在树状数组套的主席树里改，这样的时间空间复杂度大概$O(n\log_2n+2m(\log_2n)^2)$，可以开得下了</p>
<p>如果开到最大情况大概是$6240000*3\approx 70M$，但实际的数据没出全是修改的情况，我只用$2240000$就够了…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_1901;</span><br><span class="line"><span class="keyword">var</span> root,bit:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">50000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2240000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,size:longint; <span class="keyword">end</span>;</span><br><span class="line">    q:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">10000</span>]<span class="keyword">of</span> <span class="keyword">record</span> query:boolean; a,b,k:longint; <span class="keyword">end</span>;</span><br><span class="line">    a,p,b:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">60000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    low:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">2</span>,<span class="number">0</span>..<span class="number">16</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,i,tot,len,l,lb:longint;</span><br><span class="line">    c:char;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lowbit</span><span class="params">(x:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">exit</span>(x <span class="keyword">and</span> -x);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">calc_low</span><span class="params">(p,t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">while</span> p&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(low[t,<span class="number">0</span>]);</span><br><span class="line">    low[t,low[t,<span class="number">0</span>]]:=bit[p];</span><br><span class="line">    dec(p,lowbit(p));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j,mid,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=a[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> a[i]&lt;mid <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> a[j]&gt;mid <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      t:=a[i];</span><br><span class="line">      a[i]:=a[j];</span><br><span class="line">      a[j]:=t;</span><br><span class="line">      t:=p[i];</span><br><span class="line">      p[i]:=p[j];</span><br><span class="line">      p[j]:=t;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(<span class="keyword">var</span> t:longint;base,l,r,p,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  s[t]:=s[base];</span><br><span class="line">  inc(s[t].size,d);</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> p&lt;=mid <span class="keyword">then</span> modify(s[t].lc,s[base].lc,l,mid,p,d)</span><br><span class="line">  <span class="keyword">else</span> modify(s[t].rc,s[base].rc,mid+<span class="number">1</span>,r,p,d);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(a,b,l,r,k:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> i,t,mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>(l);</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  t:=s[s[b].lc].size-s[s[a].lc].size;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> low[<span class="number">1</span>,<span class="number">0</span>] <span class="keyword">do</span> dec(t,s[s[low[<span class="number">1</span>,i]].lc].size);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> low[<span class="number">2</span>,<span class="number">0</span>] <span class="keyword">do</span> inc(t,s[s[low[<span class="number">2</span>,i]].lc].size);</span><br><span class="line">  <span class="keyword">if</span> t&gt;=k <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> low[<span class="number">1</span>,<span class="number">0</span>] <span class="keyword">do</span> low[<span class="number">1</span>,i]:=s[low[<span class="number">1</span>,i]].lc;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> low[<span class="number">2</span>,<span class="number">0</span>] <span class="keyword">do</span> low[<span class="number">2</span>,i]:=s[low[<span class="number">2</span>,i]].lc;</span><br><span class="line">    <span class="keyword">exit</span>(query(s[a].lc,s[b].lc,l,mid,k));</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> low[<span class="number">1</span>,<span class="number">0</span>] <span class="keyword">do</span> low[<span class="number">1</span>,i]:=s[low[<span class="number">1</span>,i]].rc;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> low[<span class="number">2</span>,<span class="number">0</span>] <span class="keyword">do</span> low[<span class="number">2</span>,i]:=s[low[<span class="number">2</span>,i]].rc;</span><br><span class="line">    <span class="keyword">exit</span>(query(s[a].rc,s[b].rc,mid+<span class="number">1</span>,r,k-t));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> <span class="keyword">read</span>(a[i]);</span><br><span class="line">  readln;</span><br><span class="line">  len:=n;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(c);</span><br><span class="line">    <span class="keyword">if</span> c=<span class="string">'Q'</span> <span class="keyword">then</span> readln(q[i].a,q[i].b,q[i].k) <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      readln(q[i].a,q[i].k);</span><br><span class="line">      inc(len);</span><br><span class="line">      a[len]:=q[i].k;</span><br><span class="line">      q[i].b:=len;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    q[i].query:=(c=<span class="string">'Q'</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span> p[i]:=i;</span><br><span class="line">  qsort(<span class="number">1</span>,len);</span><br><span class="line">  l:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> len <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (i=<span class="number">1</span>)<span class="keyword">or</span>(a[i]&lt;&gt;a[i-<span class="number">1</span>]) <span class="keyword">then</span> inc(l);</span><br><span class="line">    b[p[i]]:=l;</span><br><span class="line">    a[l]:=a[i];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  root[<span class="number">0</span>]:=<span class="number">1</span>;</span><br><span class="line">  tot:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> modify(root[i],root[i-<span class="number">1</span>],<span class="number">1</span>,l,b[i],<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">if</span> q[i].query <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    fillchar(low,sizeof(low),<span class="number">0</span>);</span><br><span class="line">    calc_low(q[i].a-<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    calc_low(q[i].b,<span class="number">2</span>);</span><br><span class="line">    writeln(a[query(root[q[i].a-<span class="number">1</span>],root[q[i].b],<span class="number">1</span>,l,q[i].k)]);</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    lb:=q[i].a;</span><br><span class="line">    <span class="keyword">while</span> lb&lt;=n <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      modify(bit[lb],bit[lb],<span class="number">1</span>,l,b[q[i].a],-<span class="number">1</span>);</span><br><span class="line">      modify(bit[lb],bit[lb],<span class="number">1</span>,l,b[q[i].b],<span class="number">1</span>);</span><br><span class="line">      inc(lb,lowbit(lb));</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    b[q[i].a]:=b[q[i].b];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<p><del>因为写裸题又被ZYK大爷D了 QAQ</del></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1901" target="_blank" rel="external">传送门</a></p>
<p>其实这是道权限题…建]]>
    </summary>
    
      <category term="Fotile Tree" scheme="http://platypuspro.gitcafe.io/tags/Fotile-Tree/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 3110]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-3110/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-3110/</id>
    <published>2015-04-28T13:32:05.000Z</published>
    <updated>2015-05-20T13:31:06.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3110" target="_blank" rel="external">传送门</a></p>
<blockquote>
<p><a href="#Divide">整体二分</a><br><a href="#Tree">树套树</a></p>
</blockquote>
<p>首先强调以下这道题是 真·第$k$<strong>大</strong></p>
<!--Divide-->
<h3 id="整体二分">整体二分</h3><p>这道题有时间先后顺序限制，所以排序时不能把顺序打乱，所以要另外开一个数组用来排序并对它二分答案</p>
<p>因为是区间修改嘛，我又不会区间修改的高端树状数组，就只能用线段树了…每次$Solve$都清空整棵树好像会超时，于是我打了删除标记 <del>然后就掉坑里爬不出来了</del></p>
<p>二分排过序的那个数组，然后<strong>依次</strong>处理从$head$到$tail$的操作（一定要注意先后顺序），有以下几种情况</p>
<ul>
<li>若是添加，且添加的数$\geq mid$，说明这个数对右边一半的影响都相同，只需要减去它的影响就行了，但它对左边一半的影响不相同，所以扔到左边（因为第$k$大嘛所以数组顺序是从大到小的）</li>
<li>若是添加，且添加的数$&lt;mid$，它对左边一半就没有任何影响了，但对右边有影响，所以扔到右边</li>
<li>若询问区间内的数的个数$&lt;k$，说明还不够多，扔到右边再多加几个</li>
<li>若询问区间内的数的个数$\geq k$，说明已经够了，扔到左边</li>
</ul>
<p>这样就把$head$到$tail$的操作分成了两块互不影响且符合时间轴顺序的操作，继续递归到底就能得出答案</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3110;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>]<span class="keyword">of</span> <span class="keyword">record</span> l,r,lc,rc,size,plus:longint; clear:boolean; <span class="keyword">end</span>;</span><br><span class="line">    q,q1,q2:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">50000</span>]<span class="keyword">of</span> <span class="keyword">record</span> cas,l,r,k,p,cur:longint; <span class="keyword">end</span>;</span><br><span class="line">    ans,a:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">50000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    n,m,i,tot,t,len:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j,mid,p:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=a[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> a[i]&gt;mid <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> a[j]&lt;mid <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=a[i];</span><br><span class="line">      a[i]:=a[j];</span><br><span class="line">      a[j]:=p;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[t].clear <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (s[t].lc&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(s[t].rc&lt;&gt;<span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      s[s[t].lc].size:=<span class="number">0</span>;</span><br><span class="line">      s[s[t].lc].plus:=<span class="number">0</span>;</span><br><span class="line">      s[s[t].lc].clear:=true;</span><br><span class="line">      s[s[t].rc].size:=<span class="number">0</span>;</span><br><span class="line">      s[s[t].rc].plus:=<span class="number">0</span>;</span><br><span class="line">      s[s[t].rc].clear:=true;</span><br><span class="line">      s[t].clear:=false;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> s[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (s[t].lc&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(s[t].rc&lt;&gt;<span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(s[s[t].lc].size,s[t].plus*(s[s[t].lc].r-s[s[t].lc].l+<span class="number">1</span>));</span><br><span class="line">      inc(s[s[t].lc].plus,s[t].plus);</span><br><span class="line">      inc(s[s[t].rc].size,s[t].plus*(s[s[t].rc].r-s[s[t].rc].l+<span class="number">1</span>));</span><br><span class="line">      inc(s[s[t].rc].plus,s[t].plus);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    s[t].plus:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span><span class="params">(<span class="keyword">var</span> t:longint;l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  s[t].l:=l;</span><br><span class="line">  s[t].r:=r;</span><br><span class="line">  s[t].lc:=<span class="number">0</span>;</span><br><span class="line">  s[t].rc:=<span class="number">0</span>;</span><br><span class="line">  s[t].plus:=<span class="number">0</span>;</span><br><span class="line">  s[t].clear:=false;</span><br><span class="line">  s[t].size:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  build(s[t].lc,l,mid);</span><br><span class="line">  build(s[t].rc,mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">cover</span><span class="params">(t,l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (s[t].clear)<span class="keyword">or</span>(s[t].plus&lt;&gt;<span class="number">0</span>) <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;=s[t].l)<span class="keyword">and</span>(r&gt;=s[t].r) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(s[t].size,s[t].r-s[t].l+<span class="number">1</span>);</span><br><span class="line">    inc(s[t].plus);</span><br><span class="line">    pushdown(t);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(s[t].l+s[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> cover(s[t].lc,l,r);</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> cover(s[t].rc,l,r);</span><br><span class="line">  s[t].size:=s[s[t].lc].size+s[s[t].rc].size;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(t,l,r:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> ans,mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (s[t].plus&lt;&gt;<span class="number">0</span>)<span class="keyword">or</span> s[t].clear <span class="keyword">then</span> pushdown(t);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;=s[t].l)<span class="keyword">and</span>(r&gt;=s[t].r) <span class="keyword">then</span> <span class="keyword">exit</span>(s[t].size);</span><br><span class="line">  mid:=(s[t].l+s[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> inc(ans,query(s[t].lc,l,r));</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> inc(ans,query(s[t].rc,l,r));</span><br><span class="line">  <span class="keyword">exit</span>(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">solve</span><span class="params">(l,r,hd,tl:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,mid,l1,l2,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> hd&gt;tl <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=hd <span class="keyword">to</span> tl <span class="keyword">do</span> <span class="keyword">if</span> q[i].cas=<span class="number">2</span> <span class="keyword">then</span> ans[q[i].p]:=l;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  s[<span class="number">1</span>].clear:=true;</span><br><span class="line">  s[<span class="number">1</span>].size:=<span class="number">0</span>;</span><br><span class="line">  s[<span class="number">1</span>].plus:=<span class="number">0</span>;</span><br><span class="line">  pushdown(<span class="number">1</span>);</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  l1:=<span class="number">0</span>;</span><br><span class="line">  l2:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=hd <span class="keyword">to</span> tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> q[i].cas=<span class="number">2</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    t:=query(<span class="number">1</span>,q[i].l,q[i].r);</span><br><span class="line">    <span class="keyword">if</span> q[i].cur+t&gt;=q[i].k <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(l1);</span><br><span class="line">      q1[l1]:=q[i];</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(q[i].cur,t);</span><br><span class="line">      inc(l2);</span><br><span class="line">      q2[l2]:=q[i];</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">if</span> q[i].k&gt;=a[mid] <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(l1);</span><br><span class="line">    q1[l1]:=q[i];</span><br><span class="line">    cover(<span class="number">1</span>,q[i].l,q[i].r)</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(l2);</span><br><span class="line">    q2[l2]:=q[i];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> l1 <span class="keyword">do</span> q[hd+i-<span class="number">1</span>]:=q1[i];</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> l2 <span class="keyword">do</span> q[hd+l1+i-<span class="number">1</span>]:=q2[i];</span><br><span class="line">  <span class="keyword">if</span> l1&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> solve(l,mid,hd,hd+l1-<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span> l2&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> solve(mid+<span class="number">1</span>,r,hd+l1,tl);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  len:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">with</span> q[i] <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(cas,l,r,k);</span><br><span class="line">    p:=i;</span><br><span class="line">    cur:=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> cas=<span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(len);</span><br><span class="line">      a[len]:=k;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  qsort(<span class="number">1</span>,len);</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  build(t,<span class="number">1</span>,n);</span><br><span class="line">  solve(<span class="number">1</span>,len,<span class="number">1</span>,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">if</span> ans[i]&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> writeln(a[ans[i]]);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<!--Tree-->
<h3 id="树套树">树套树</h3><p>两层线段树，第一层是按$c$建的权值线段树，每次加入操作把所有包含$c$的第一层线段树的节点的子线段树的$[a,b]$覆盖</p>
<p>第二层需要动态开点，否则MLE…</p>
<p>查询时直接在第一层线段树上二分即可</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_3110;</span><br><span class="line"><span class="keyword">var</span> s1:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,subtree:longint; <span class="keyword">end</span>;</span><br><span class="line">    s2:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">18000000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,size,plus:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,cas,a,b,c,tot1,tot2,t:longint;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">new</span><span class="params">(<span class="keyword">var</span> t:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot2);</span><br><span class="line">  t:=tot2;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span><span class="params">(<span class="keyword">var</span> t:longint;l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot1);</span><br><span class="line">  t:=tot1;</span><br><span class="line">  new(s1[t].subtree);</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  build(s1[t].lc,mid+<span class="number">1</span>,r);</span><br><span class="line">  build(s1[t].rc,l,mid);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">pushdown</span><span class="params">(t,l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (l&lt;&gt;r)<span class="keyword">and</span>(s2[t].lc=<span class="number">0</span>) <span class="keyword">then</span> new(s2[t].lc);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;&gt;r)<span class="keyword">and</span>(s2[t].rc=<span class="number">0</span>) <span class="keyword">then</span> new(s2[t].rc);</span><br><span class="line">  <span class="keyword">if</span> (s2[t].lc&lt;&gt;<span class="number">0</span>)<span class="keyword">and</span>(s2[t].rc&lt;&gt;<span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    inc(s2[s2[t].lc].size,s2[t].plus*(mid-l+<span class="number">1</span>));</span><br><span class="line">    inc(s2[s2[t].lc].plus,s2[t].plus);</span><br><span class="line">    inc(s2[s2[t].rc].size,s2[t].plus*(r-mid));</span><br><span class="line">    inc(s2[s2[t].rc].plus,s2[t].plus);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  s2[t].plus:=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(<span class="keyword">var</span> t:longint;a,b,l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> t=<span class="number">0</span> <span class="keyword">then</span> new(t);</span><br><span class="line">  mid:=(a+b)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> s2[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(t,a,b);</span><br><span class="line">  <span class="keyword">if</span> (l&lt;=a)<span class="keyword">and</span>(r&gt;=b) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(s2[t].size,b-a+<span class="number">1</span>);</span><br><span class="line">    s2[t].plus:=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">if</span> l&lt;=mid <span class="keyword">then</span> modify(s2[t].lc,a,mid,l,r);</span><br><span class="line">  <span class="keyword">if</span> r&gt;mid <span class="keyword">then</span> modify(s2[t].rc,mid+<span class="number">1</span>,b,l,r);</span><br><span class="line">  s2[t].size:=s2[s2[t].lc].size+s2[s2[t].rc].size;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">insert</span><span class="params">(t,l,r,a,b,c:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  modify(s1[t].subtree,<span class="number">1</span>,n,a,b);</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> c&gt;mid <span class="keyword">then</span> insert(s1[t].lc,mid+<span class="number">1</span>,r,a,b,c) <span class="keyword">else</span> insert(s1[t].rc,l,mid,a,b,c);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(t,l,r,a,b:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> ans,mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> s2[t].plus&lt;&gt;<span class="number">0</span> <span class="keyword">then</span> pushdown(t,l,r);</span><br><span class="line">  <span class="keyword">if</span> (a&lt;=l)<span class="keyword">and</span>(b&gt;=r) <span class="keyword">then</span> <span class="keyword">exit</span>(s2[t].size);</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> a&lt;=mid <span class="keyword">then</span> inc(ans,query(s2[t].lc,l,mid,a,b));</span><br><span class="line">  <span class="keyword">if</span> b&gt;mid <span class="keyword">then</span> inc(ans,query(s2[t].rc,mid+<span class="number">1</span>,r,a,b));</span><br><span class="line">  <span class="keyword">exit</span>(ans);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span><span class="params">(t,l,r,a,b,c:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> p,mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>(l);</span><br><span class="line">  p:=query(s1[s1[t].lc].subtree,<span class="number">1</span>,n,a,b);</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> c&lt;=p <span class="keyword">then</span> <span class="keyword">exit</span>(ask(s1[t].lc,mid+<span class="number">1</span>,r,a,b,c)) <span class="keyword">else</span> <span class="keyword">exit</span>(ask(s1[t].rc,l,mid,a,b,c-p));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  tot1:=<span class="number">0</span>;</span><br><span class="line">  tot2:=<span class="number">0</span>;</span><br><span class="line">  build(t,<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(cas,a,b,c);</span><br><span class="line">    <span class="keyword">if</span> cas=<span class="number">1</span> <span class="keyword">then</span> insert(<span class="number">1</span>,<span class="number">1</span>,n,a,b,c) <span class="keyword">else</span> writeln(ask(<span class="number">1</span>,<span class="number">1</span>,n,a,b,c));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<p><del>为啥锚记挂了…明明2150还可以用呢…</del></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3110" target="_blank" rel="external">传送门</a></p>
<blockquote>
]]>
    </summary>
    
      <category term="Tree in Tree" scheme="http://platypuspro.gitcafe.io/tags/Tree-in-Tree/"/>
    
      <category term="Whole Binary-Divide" scheme="http://platypuspro.gitcafe.io/tags/Whole-Binary-Divide/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 2104]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/poj-2104/"/>
    <id>http://platypuspro.gitcafe.io/posts/poj-2104/</id>
    <published>2015-04-27T13:31:52.000Z</published>
    <updated>2015-05-20T13:31:37.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://poj.org/problem?id=2104" target="_blank" rel="external">传送门</a></p>
<blockquote>
<p><a href="#tag1">整体二分</a><br><a href="#tag2">主席树</a></p>
</blockquote>
<!--tag1-->
<h3 id="整体二分">整体二分</h3><p>首先把序列排成有序的</p>
<p>然后二分答案，把$\leq mid$的数扔到树状数组里，看每个询问的区间里的数够不够$k$个，若够就扔到左边，不够就扔到右边</p>
<p>继续递归处理左右两边，二分到底时就可以得出询问的答案</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> poj_2104;</span><br><span class="line"><span class="keyword">type</span> rec=<span class="keyword">record</span> k,p:longint; <span class="keyword">end</span>;</span><br><span class="line">     ask_op=<span class="keyword">record</span> l,r,k,id,cur:longint; <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> bit:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    q,q1,q2:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">5000</span>]<span class="keyword">of</span> ask_op;</span><br><span class="line">    ans:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">5000</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    a:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> rec;</span><br><span class="line">    n,m,i:longint;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">c</span><span class="params">(x:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">exit</span>(x <span class="keyword">and</span> -x);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">plus</span><span class="params">(p,d:longint)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">while</span> p&lt;=n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(bit[p],d);</span><br><span class="line">    inc(p,c(p));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(p:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  query:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> p&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    inc(query,bit[p]);</span><br><span class="line">    dec(p,c(p));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line">    mid,p:rec;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=a[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> a[i].k&lt;mid.k <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> a[j].k&gt;mid.k <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=a[i];</span><br><span class="line">      a[i]:=a[j];</span><br><span class="line">      a[j]:=p;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">solve</span><span class="params">(hd,tl,l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,mid,l1,l2,t:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> hd&gt;tl <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i:=hd <span class="keyword">to</span> tl <span class="keyword">do</span> ans[q[i].id]:=l;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  l1:=<span class="number">0</span>;</span><br><span class="line">  l2:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=l <span class="keyword">to</span> mid <span class="keyword">do</span> plus(a[i].p,<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=hd <span class="keyword">to</span> tl <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    t:=query(q[i].r)-query(q[i].l-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> q[i].cur+t&gt;=q[i].k <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(l1);</span><br><span class="line">      q1[l1]:=q[i];</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      inc(q[i].cur,t);</span><br><span class="line">      inc(l2);</span><br><span class="line">      q2[l2]:=q[i];</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=l <span class="keyword">to</span> mid <span class="keyword">do</span> plus(a[i].p,-<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> l1 <span class="keyword">do</span> q[hd+i-<span class="number">1</span>]:=q1[i];</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> l2 <span class="keyword">do</span> q[hd+l1+i-<span class="number">1</span>]:=q2[i];</span><br><span class="line">  solve(hd,hd+l1-<span class="number">1</span>,l,mid);</span><br><span class="line">  solve(hd+l1,tl,mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(a[i].k);</span><br><span class="line">    a[i].p:=i;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  qsort(<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> <span class="keyword">with</span> q[i] <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(l,r,k);</span><br><span class="line">    id:=i;</span><br><span class="line">    cur:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  solve(<span class="number">1</span>,m,<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span> writeln(a[ans[i]].k);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
<!--tag2-->
<h3 id="主席树">主席树</h3><p>这个是裸的…就不用讲了吧…</p>
<p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> poj_2104;</span><br><span class="line"><span class="keyword">type</span> rec=<span class="keyword">record</span> k,p:longint; <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> s:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">2000000</span>]<span class="keyword">of</span> <span class="keyword">record</span> lc,rc,l,r,cnt:longint; <span class="keyword">end</span>;</span><br><span class="line">    n,m,i,l,r,tot,t:longint;</span><br><span class="line">    a:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">100000</span>]<span class="keyword">of</span> rec;</span><br><span class="line">    k,rt:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">100000</span>]<span class="keyword">of</span> longint;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">build</span><span class="params">(<span class="keyword">var</span> t:longint;l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  t:=tot;</span><br><span class="line">  s[t].l:=l;</span><br><span class="line">  s[t].r:=r;</span><br><span class="line">  s[t].cnt:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> l=r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  build(s[t].lc,l,mid);</span><br><span class="line">  build(s[t].rc,mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">qsort</span><span class="params">(l,r:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line">    mid,p:rec;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  i:=l;</span><br><span class="line">  j:=r;</span><br><span class="line">  mid:=a[(l+r)&gt;&gt;<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">while</span> a[i].k&lt;mid.k <span class="keyword">do</span> inc(i);</span><br><span class="line">    <span class="keyword">while</span> a[j].k&gt;mid.k <span class="keyword">do</span> dec(j);</span><br><span class="line">    <span class="keyword">if</span> i&lt;=j <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      p:=a[i];</span><br><span class="line">      a[i]:=a[j];</span><br><span class="line">      a[j]:=p;</span><br><span class="line">      inc(i);</span><br><span class="line">      dec(j);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> i&gt;j;</span><br><span class="line">  <span class="keyword">if</span> i&lt;r <span class="keyword">then</span> qsort(i,r);</span><br><span class="line">  <span class="keyword">if</span> l&lt;j <span class="keyword">then</span> qsort(l,j);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">modify</span><span class="params">(<span class="keyword">var</span> t:longint;p:longint)</span>;</span></span><br><span class="line"><span class="keyword">var</span> mid:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  inc(tot);</span><br><span class="line">  s[tot]:=s[t];</span><br><span class="line">  t:=tot;</span><br><span class="line">  inc(s[t].cnt);</span><br><span class="line">  <span class="keyword">if</span> s[t].l=s[t].r <span class="keyword">then</span> <span class="keyword">exit</span>;</span><br><span class="line">  mid:=(s[t].l+s[t].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> p&lt;=mid <span class="keyword">then</span> modify(s[t].lc,p) <span class="keyword">else</span> modify(s[t].rc,p);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">(l,r,t:longint)</span>:</span>longint;</span><br><span class="line"><span class="keyword">var</span> k:longint;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> s[l].l=s[l].r <span class="keyword">then</span> <span class="keyword">exit</span>(s[l].l);</span><br><span class="line">  k:=s[s[r].lc].cnt-s[s[l].lc].cnt;</span><br><span class="line">  <span class="keyword">if</span> t&lt;=k <span class="keyword">then</span> <span class="keyword">exit</span>(query(s[l].lc,s[r].lc,t)) <span class="keyword">else</span> <span class="keyword">exit</span>(query(s[l].rc,s[r].rc,t-k));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(n,m);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">read</span>(a[i].k);</span><br><span class="line">    a[i].p:=i;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  qsort(<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> k[a[i].p]:=i;</span><br><span class="line">  tot:=<span class="number">0</span>;</span><br><span class="line">  fillchar(s,sizeof(s),<span class="number">0</span>);</span><br><span class="line">  build(rt[<span class="number">0</span>],<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    rt[i]:=rt[i-<span class="number">1</span>];</span><br><span class="line">    modify(rt[i],k[i]);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> m <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(l,r,t);</span><br><span class="line">    writeln(a[query(rt[l-<span class="number">1</span>],rt[r],t)].k);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://poj.org/problem?id=2104" target="_blank" rel="external">传送门</a></p>
<blockquote>
<p><a href="#tag1">整体二]]>
    </summary>
    
      <category term="Fotile Tree" scheme="http://platypuspro.gitcafe.io/tags/Fotile-Tree/"/>
    
      <category term="Whole Binary-Divide" scheme="http://platypuspro.gitcafe.io/tags/Whole-Binary-Divide/"/>
    
      <category term="POJ" scheme="http://platypuspro.gitcafe.io/categories/POJ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ 4008]]></title>
    <link href="http://platypuspro.gitcafe.io/posts/bzoj-4008/"/>
    <id>http://platypuspro.gitcafe.io/posts/bzoj-4008/</id>
    <published>2015-04-26T09:59:06.000Z</published>
    <updated>2015-05-20T13:31:49.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4008" target="_blank" rel="external">传送门</a></p>
<p>题目意思大概就是在$n$张卡牌中挑$1~r$张，每张只能挑一次，求选出的卡牌的期望总伤害</p>
<p>设$F[i,j]$为选至第$i$张，还能选$j$次的期望伤害值</p>
<p>每张牌有选与不选两种情况，所以</p>
<h4 id="$$F_{i,j}=F_{i-1,j}\cdot(1-p_i)^j+F_{i-1,j+1}\cdot(1-(1-p_i)^{j+1})$$">$$F_{i,j}=F_{i-1,j}\cdot(1-p_i)^j+F_{i-1,j+1}\cdot(1-(1-p_i)^{j+1})$$</h4><p><i class="fa fa-code fa-2x"></i><br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> bzoj_4008;</span><br><span class="line"><span class="keyword">var</span> g,f:<span class="keyword">array</span>[<span class="number">0</span>..<span class="number">221</span>,<span class="number">0</span>..<span class="number">133</span>]<span class="keyword">of</span> extended;</span><br><span class="line">    t,n,r,i:longint;</span><br><span class="line">    p:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">220</span>]<span class="keyword">of</span> extended;</span><br><span class="line">    d:<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">220</span>]<span class="keyword">of</span> longint;</span><br><span class="line">    ans:extended;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">calc</span>;</span></span><br><span class="line"><span class="keyword">var</span> i,j:longint;</span><br><span class="line">    a,b:extended;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">1</span> <span class="keyword">to</span> r <span class="keyword">do</span> g[i,j]:=g[i,j-<span class="number">1</span>]*(<span class="number">1</span>-p[i]);</span><br><span class="line">  ans:=<span class="number">0</span>;</span><br><span class="line">  fillchar(f,sizeof(f),<span class="number">0</span>);</span><br><span class="line">  f[<span class="number">0</span>,r]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j:=<span class="number">0</span> <span class="keyword">to</span> r <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    a:=f[i-<span class="number">1</span>,j]*g[i,j];</span><br><span class="line">    b:=f[i-<span class="number">1</span>,j+<span class="number">1</span>]*(<span class="number">1</span>-g[i,j+<span class="number">1</span>]);</span><br><span class="line">    f[i,j]:=a+b;</span><br><span class="line">    ans:=ans+b*d[i];</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  readln(t);</span><br><span class="line">  fillchar(g,sizeof(g),<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> <span class="number">220</span> <span class="keyword">do</span> g[i,<span class="number">0</span>]:=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> t:=<span class="number">1</span> <span class="keyword">to</span> t <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    readln(n,r);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> <span class="keyword">to</span> n <span class="keyword">do</span> readln(p[i],d[i]);</span><br><span class="line">    calc;</span><br><span class="line">    writeln(ans:<span class="number">0</span>:<span class="number">10</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4008" target="_blank" rel="external">传送门</a></p>
<p>题目意思大概就是在$]]>
    </summary>
    
      <category term="Dynamic Programming" scheme="http://platypuspro.gitcafe.io/tags/Dynamic-Programming/"/>
    
      <category term="Expected Value" scheme="http://platypuspro.gitcafe.io/tags/Expected-Value/"/>
    
      <category term="BZOJ" scheme="http://platypuspro.gitcafe.io/categories/BZOJ/"/>
    
  </entry>
  
</feed>